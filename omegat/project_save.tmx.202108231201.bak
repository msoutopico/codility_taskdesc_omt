<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="4.2.0_0_10666" segtype="sentence" srclang="en"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="en">
        <seg>"authentication-header": "bde6708a-0d14-48d7-9e30-ffc71d1d7667"</seg>
      </tuv>
      <tuv lang="en-xx" changeid="souto" changedate="20210820T104810Z" creationid="souto" creationdate="20210820T104810Z">
        <seg>"authentication-header": "bde6708a-0d14-48d7-9e30-ffc71d1d7667"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"authentication-header": "bde6708a-0d14-48d7-9e30-ffc71d1d7667"
}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174830Z" creationid="cApSt" creationdate="20210818T174830Z">
        <seg>"authentication-header": "bde6708a-0d14-48d7-9e30-ffc71d1d7667"
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"author": "Jane",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174839Z" creationid="cApSt" creationdate="20210818T174839Z">
        <seg>"author": "Jane",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"author": "John",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174835Z" creationid="cApSt" creationdate="20210818T174835Z">
        <seg>"author": "John",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"body-parser": "1.19.0",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174838Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>"body-parser": "1.19.0",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"channel": "general",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174835Z" creationid="cApSt" creationdate="20210818T174835Z">
        <seg>"channel": "general",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"channel": "random",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174838Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>"channel": "random",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"checking_account_status": "category",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>"checking_account_status": "category",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"city": "category",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>"city": "category",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"content-type": "application/json",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174830Z" creationid="cApSt" creationdate="20210818T174830Z">
        <seg>"content-type": "application/json",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"credit_amount": np.float64,</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>"credit_amount": np.float64,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"credit_history": "category",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>"credit_history": "category",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"data": [</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174837Z" creationid="cApSt" creationdate="20210818T174837Z">
        <seg>"data": [</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"data/example_data.csv",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>"data/example_data.csv",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"date": "2019-11-11",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174835Z" creationid="cApSt" creationdate="20210818T174835Z">
        <seg>"date": "2019-11-11",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"date": "2019-11-12",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174837Z" creationid="cApSt" creationdate="20210818T174837Z">
        <seg>"date": "2019-11-12",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"date": "2020-01-01"</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174839Z" creationid="cApSt" creationdate="20210818T174839Z">
        <seg>"date": "2020-01-01"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"dependencies": {</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174838Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>"dependencies": {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"duration": np.float64,</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>"duration": np.float64,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"express": "4.17.1"</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174838Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>"express": "4.17.1"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"foreign_worker": "category",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>"foreign_worker": "category",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"id": 1,</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174839Z" creationid="cApSt" creationdate="20210818T174839Z">
        <seg>"id": 1,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"id": 2,</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174839Z" creationid="cApSt" creationdate="20210818T174839Z">
        <seg>"id": 2,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"id": 3,</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174840Z" creationid="cApSt" creationdate="20210818T174840Z">
        <seg>"id": 3,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"interest_rate": np.float64,</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>"interest_rate": np.float64,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"job": "category",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>"job": "category",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"next": ""</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174842Z" creationid="cApSt" creationdate="20210818T174842Z">
        <seg>"next": ""</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"next": "MTMzNw=="</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174838Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>"next": "MTMzNw=="</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"next": "xyz" // the content on "next" is irrelevant it might be just "3" or something else</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T204952Z" creationid="cApSt" creationdate="20210818T174842Z">
        <seg>"next": "xyz" // the content on "next" is irrelevant. It might be just "3" or something else</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"other_installment_plans": "category",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>"other_installment_plans": "category",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"paging": {</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174838Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>"paging": {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"target": object,</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>"target": object,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"taskIds": ["id422", "id2444", "id424", "id4242"]
}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172043Z" creationid="cApSt" creationdate="20210809T172043Z">
        <seg>"taskIds": ["id422", "id2444", "id424", "id4242"]
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"text": "Hello Jane!",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174840Z" creationid="cApSt" creationdate="20210818T174840Z">
        <seg>"text": "Hello Jane!",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"text": "Hi hi"</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174837Z" creationid="cApSt" creationdate="20210818T174837Z">
        <seg>"text": "Hi hi"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"text": "Hi there!"</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174838Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>"text": "Hi there!"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"text": "Hi there!",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174839Z" creationid="cApSt" creationdate="20210818T174839Z">
        <seg>"text": "Hi there!",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"text": "Hi there"</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T200859Z" creationid="cApSt" creationdate="20210820T200859Z">
        <seg>"text": "Hi there"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"text": "Hi there"
}
```</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174835Z" creationid="cApSt" creationdate="20210818T174835Z">
        <seg>"text": "Hi there"
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"text": "How are is it going?",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174840Z" creationid="cApSt" creationdate="20210818T174840Z">
        <seg>"text": "How are is it going?",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"text": "How is it going?",</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174841Z" creationid="cApSt" creationdate="20210818T174841Z">
        <seg>"text": "How is it going?",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>"token": "&lt;uuid&gt;"
}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174820Z" creationid="cApSt" creationdate="20210818T174820Z">
        <seg>"token": "&lt;uuid&gt;"
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg># If we provide `b`...
@provide(b=2)
def add(a: int, b: int) -&gt; int:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174857Z" creationid="cApSt" creationdate="20210818T174857Z">
        <seg># If we provide `b`...
@provide(b=2)
def add(a: int, b: int) -&gt; int:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg># by setting the url to eg.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174906Z" creationid="cApSt" creationdate="20210818T174906Z">
        <seg># by setting the url to eg.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg># in the Codility UI all external network access is restricted</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174906Z" creationid="cApSt" creationdate="20210818T174906Z">
        <seg># in the Codility UI all external network access is restricted</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg># it is possible to test it outside the Codility UI</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174906Z" creationid="cApSt" creationdate="20210818T174906Z">
        <seg># it is possible to test it outside the Codility UI</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg># so `add` thinks it is receiving `a` twice</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174856Z" creationid="cApSt" creationdate="20210818T174856Z">
        <seg># so `add` thinks it is receiving `a` twice</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&amp;alt Animated component;
angular_like_dislike</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172041Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>&amp;alt Animated component;
angular_like_dislike</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>((&lt;x1/&gt;))1.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172038Z" creationid="cApSt" creationdate="20210809T172038Z">
        <seg>((&lt;x1/&gt;))1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>((&lt;x1/&gt;))2.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172039Z" creationid="cApSt" creationdate="20210809T172039Z">
        <seg>((&lt;x1/&gt;))2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>((&lt;x1/&gt;))3.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172039Z" creationid="cApSt" creationdate="20210809T172039Z">
        <seg>((&lt;x1/&gt;))3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>((&lt;x1/&gt;))4.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172039Z" creationid="cApSt" creationdate="20210809T172039Z">
        <seg>((&lt;x1/&gt;))4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>((&lt;x1/&gt;))5.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172040Z" creationid="cApSt" creationdate="20210809T172040Z">
        <seg>((&lt;x1/&gt;))5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>((&lt;x1/&gt;))6.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172040Z" creationid="cApSt" creationdate="20210809T172040Z">
        <seg>((&lt;x1/&gt;))6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>((&lt;x1/&gt;))7.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172040Z" creationid="cApSt" creationdate="20210809T172040Z">
        <seg>((&lt;x1/&gt;))7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>((&lt;x1/&gt;))8.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172040Z" creationid="cApSt" creationdate="20210809T172040Z">
        <seg>((&lt;x1/&gt;))8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>((Examples:))</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>((Examples:))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>(5, (3, (20, None, None), (21, None, None)), (10, (1, None, None), None))</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174922Z" creationid="cApSt" creationdate="20210818T174922Z">
        <seg>(5, (3, (20, None, None), (21, None, None)), (10, (1, None, None), None))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>(8, (2, (8, None, None), (7, None, None)), (6, None, None))</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174922Z" creationid="cApSt" creationdate="20210818T174922Z">
        <seg>(8, (2, (8, None, None), (7, None, None)), (6, None, None))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* "Preview" tab will display your component.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T182653Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>* "Preview" will show your component.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* Design / styling is not assessed and will not affect the score.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T182347Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>* Design / style is not judged and is not part the score.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* Dislike button should have `"disliked"` class in addition to the `"dislike-button"` class.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T173035Z" creationid="cApSt" creationdate="20210809T172039Z">
        <seg>* Dislike button should have `"disliked"` class as well as the `"dislike-button"` class.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* Dislike counter should decrease by one.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172040Z" creationid="cApSt" creationdate="20210809T172040Z">
        <seg>* Dislike counter should decrease by one.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* It should have a `"dislike-button"` class.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172039Z" creationid="cApSt" creationdate="20210809T172039Z">
        <seg>* It should have a `"dislike-button"` class.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* It should have a `"like-button"` class.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172039Z" creationid="cApSt" creationdate="20210809T172039Z">
        <seg>* It should have a `"like-button"` class.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* Like button should have `"liked"` class in addition to the `"like-button"` class.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172909Z" creationid="cApSt" creationdate="20210809T172039Z">
        <seg>* Like button should have `"liked"` class as well as the `"like-button"` class.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* Like counter should decrease by one.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172040Z" creationid="cApSt" creationdate="20210809T172040Z">
        <seg>* Like counter should decrease by one.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* Note that this is in addition to the steps mentioned in the fourth point.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T173806Z" creationid="cApSt" creationdate="20210809T172040Z">
        <seg>* Note that this is in addition to the steps in the fourth point.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* Note that this is in addition to the steps mentioned in the third point.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T173822Z" creationid="cApSt" creationdate="20210809T172040Z">
        <seg>* Note that this is in addition to the steps in the third point.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* Number of dislikes should increase by one.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172039Z" creationid="cApSt" creationdate="20210809T172039Z">
        <seg>* Number of dislikes should increase by one.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* Number of likes should increase by one.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172039Z" creationid="cApSt" creationdate="20210809T172039Z">
        <seg>* Number of likes should increase by one.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* The content of the dislike button should be in the following format: "Dislike | 25", where 25 is the total number of dislikes.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172704Z" creationid="cApSt" creationdate="20210809T172039Z">
        <seg>* The dislike button should be in the following format: "Dislike | 25", where 25 is the total number of dislikes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* The content of the like button should be in the following format: "Like | 100", where 100 is the total number of likes.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172505Z" creationid="cApSt" creationdate="20210809T172038Z">
        <seg>* The like button should be in the following format: "Like | 100", where 100 is the total number of likes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* The initial number of dislikes in the counter should be 25.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T173800Z" creationid="cApSt" creationdate="20210809T172039Z">
        <seg>* The starting number of dislikes in the counter should be 25.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* The initial number of likes in the counter should be 100.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T173308Z" creationid="cApSt" creationdate="20210809T172039Z">
        <seg>* The starting number of likes in the counter should be 100.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* Use the animation below as a reference for your solution.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T174037Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>* Use the animation below as a guide for your solution.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* Wrap the number of dislikes in a span with a `"dislikes-counter"` class.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172039Z" creationid="cApSt" creationdate="20210809T172039Z">
        <seg>* Wrap the number of dislikes in a span with a `"dislikes-counter"` class.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* Wrap the number of likes in a span with a `"likes-counter"` class.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172039Z" creationid="cApSt" creationdate="20210809T172039Z">
        <seg>* Wrap the number of likes in a span with a `"likes-counter"` class.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* `"disliked"` class should be removed from the dislike button.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172040Z" creationid="cApSt" creationdate="20210809T172040Z">
        <seg>* `"disliked"` class should be removed from the dislike button.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* `"disliked"` class should be removed.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172040Z" creationid="cApSt" creationdate="20210809T172040Z">
        <seg>* `"disliked"` class should be removed.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* `"liked"` class should be removed from the like button.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172040Z" creationid="cApSt" creationdate="20210809T172040Z">
        <seg>* `"liked"` class should be removed from the like button.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* id - unique identifier of the ticket (example: "4")
* restrictions - list of skills required to process this ticket (example: ["French"])</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174913Z" creationid="cApSt" creationdate="20210818T174913Z">
        <seg>* id - unique identifier of the ticket (example: "4")
* restrictions - list of skills required to process this ticket (example: ["French"])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* knows English</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>* knows English</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* knows French</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>* knows French</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>* name - name of agent (example: "John")
* skills - list of competences of this agent (example: ["English", "French"])
* load - current number of tickets assigned to this agent (example: 2)</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174913Z" creationid="cApSt" creationdate="20210818T174913Z">
        <seg>* name - name of agent (example: "John")
* skills - list of competences of this agent (example: ["English", "French"])
* load - current number of tickets assigned to this agent (example: 2)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>+------------+-----------------------+-------------------+------------------------+-------------+
|species     |category               |collected_from_year|annual_percentage_change|trend        |
+------------+-----------------------+-------------------+------------------------+-------------+
|Reed Warbler|Water and wetland birds|1981               |1.72                    |weak increase|
+------------+-----------------------+-------------------+------------------------+-------------+</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174859Z" creationid="cApSt" creationdate="20210818T174859Z">
        <seg>+------------+-----------------------+-------------------+------------------------+-------------+
|species     |category               |collected_from_year|annual_percentage_change|trend        |
+------------+-----------------------+-------------------+------------------------+-------------+
|Reed Warbler|Water and wetland birds|1981               |1.72                    |weak increase|
+------------+-----------------------+-------------------+------------------------+-------------+</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>+----------------------------------------------+-----------------------+-----------+------------------------+
|Species                                       |Category               |Period     |Annual percentage change|
+----------------------------------------------+-----------------------+-----------+------------------------+
|Greenfinch (Chloris chloris)                  |Farmland birds         |(1970-2014)|-1.13                   |
|Siskin (Carduelis spinus)                     |Woodland birds         |(1995-2014)|2.26                    |
|European shag (Phalacrocorax artistotelis)    |Seabirds               |(1986-2014)|-2.31                   |
|Mute Swan (Cygnus olor)                       |Water and wetland birds|(1975-2014)|1.65                    |
|Collared Dove (Streptopelia decaocto)         |Other                  |(1970-2014)|5.2                     |
+----------------------------------------------+-----------------------+-----------+------------------------+</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174858Z" creationid="cApSt" creationdate="20210818T174858Z">
        <seg>+----------------------------------------------+-----------------------+-----------+------------------------+
|Species                                       |Category               |Period     |Annual percentage change|
+----------------------------------------------+-----------------------+-----------+------------------------+
|Greenfinch (Chloris chloris)                  |Farmland birds         |(1970-2014)|-1.13                   |
|Siskin (Carduelis spinus)                     |Woodland birds         |(1995-2014)|2.26                    |
|European shag (Phalacrocorax artistotelis)    |Seabirds               |(1986-2014)|-2.31                   |
|Mute Swan (Cygnus olor)                       |Water and wetland birds|(1975-2014)|1.65                    |
|Collared Dove (Streptopelia decaocto)         |Other                  |(1970-2014)|5.2                     |
+----------------------------------------------+-----------------------+-----------+------------------------+</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>-   Adding new message should not result in any shifting or duplication of records while paging.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T203718Z" creationid="cApSt" creationdate="20210818T174837Z">
        <seg>-   Adding a new message should not result in any shifting or duplication of records while paging.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>-   Clients should take &lt;g3&gt;next&lt;/g3&gt; cursor from the payload of one of the requests (see payload below &lt;g4&gt;paging.next&lt;/g4&gt;)
-   Calling &lt;g5&gt;GET /messages&lt;/g5&gt; with a &lt;g6&gt;next&lt;/g6&gt; cursor will give the issuer the next data for the given query.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174836Z" creationid="cApSt" creationdate="20210818T174836Z">
        <seg>-   Clients should take &lt;g3&gt;next&lt;/g3&gt; cursor from the payload of one of the requests (see payload below &lt;g4&gt;paging.next&lt;/g4&gt;)
-   Calling &lt;g5&gt;GET /messages&lt;/g5&gt; with a &lt;g6&gt;next&lt;/g6&gt; cursor will give the issuer the next data for the given query.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>./main.c:1:int foobar(int n) {
./main.c:4:  return foobar(n-1) + foobar(n-2);</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174910Z" creationid="cApSt" creationdate="20210818T174910Z">
        <seg>./main.c:1:int foobar(int n) {
./main.c:4:  return foobar(n-1) + foobar(n-2);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>./main.c:2:#include "external_lib/foobar.h"
./main.c:4:  return foobar() + foobar();
./external_lib/foobar.c:1:#include "foobar.h"
./external_lib/foobar.c:2:int foobar() { return 0; }</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174909Z" creationid="cApSt" creationdate="20210818T174909Z">
        <seg>./main.c:2:#include "external_lib/foobar.h"
./main.c:4:  return foobar() + foobar();
./external_lib/foobar.c:1:#include "foobar.h"
./external_lib/foobar.c:2:int foobar() { return 0; }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>// If it is set to a negative value then this option is ignored.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174844Z" creationid="cApSt" creationdate="20210818T174844Z">
        <seg>// If it is set to a negative value then this option is ignored.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>// If it is set to negative value then this option is ignored.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174844Z" creationid="cApSt" creationdate="20210818T174844Z">
        <seg>// If it is set to negative value then this option is ignored.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>// Please note that empty or null strings do not meet this condition.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174845Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>// Please note that empty or null strings do not meet this condition.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>// Specifies that only strings that start with a capital letter should be returned by a custom enumerator.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174845Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>// Specifies that only strings that start with a capital letter should be returned by a custom enumerator.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>// Specifies that only strings that start with a digit should be returned by a custom enumerator.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174845Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>// Specifies that only strings that start with a digit should be returned by a custom enumerator.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>// Specifies the maximum length of strings that should be returned by a custom enumerator.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174844Z" creationid="cApSt" creationdate="20210818T174844Z">
        <seg>// Specifies the maximum length of strings that should be returned by a custom enumerator.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>// Specifies the minimum length of strings that should be returned by a custom enumerator.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174844Z" creationid="cApSt" creationdate="20210818T174844Z">
        <seg>// Specifies the minimum length of strings that should be returned by a custom enumerator.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>/// &lt;exception cref="System.ArgumentNullException"&gt;If a collection is null&lt;/exception&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174843Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>/// &lt;exception cref="System.ArgumentNullException"&gt;If a collection is null&lt;/exception&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>/// &lt;exception cref="System.ArgumentNullException"&gt;If a config is null&lt;/exception&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174843Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>/// &lt;exception cref="System.ArgumentNullException"&gt;If a config is null&lt;/exception&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>/// &lt;summary&gt; Constructor &lt;/summary&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174843Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>/// &lt;summary&gt; Constructor &lt;/summary&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>172.19.0.104 - - [25/Jul/2019:22:32:02 +0000] "GET /index HTTP/1.1" 200 14034 "-" "Mozilla/5.0 (compatible; SemrushBot/6~bl; +http://www.semrush.com/bot.html)" "172.19.0.4"
172.19.0.104 - - [26/Jul/2019:22:31:32 +0000] "GET /site HTTP/1.1" 200 36565 "https://command-not-found.com/curl" "Mozilla/5.0+(compatible; UptimeRobot/2.0; http://www.uptimerobot.com/)" "172.19.0.3"
172.19.0.105 - - [26/Jul/2019:22:30:10 +0000] "GET /credits HTTP/1.1" 200 31067 "-" "Mozilla/5.0 (compatible; YandexBot/3.0; +http://yandex.com/bots)" "172.19.0.2"
172.19.0.106 - - [27/Jul/2019:22:30:10 +0000] "GET /index HTTP/1.1" 200 31067 "-" "Mozilla/5.0 (compatible; YandexBot/3.0; +http://yandex.com/bots)" "172.19.0.2"
172.19.0.104 - - [28/Jul/2019:22:35:10 +0000] "GET /index HTTP/1.1" 200 31067 "-" "Mozilla/5.0 (compatible; YandexBot/3.0; +http://yandex.com/bots)" "172.19.0.2"</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174832Z" creationid="cApSt" creationdate="20210818T174832Z">
        <seg>172.19.0.104 - - [25/Jul/2019:22:32:02 +0000] "GET /index HTTP/1.1" 200 14034 "-" "Mozilla/5.0 (compatible; SemrushBot/6~bl; +http://www.semrush.com/bot.html)" "172.19.0.4"
172.19.0.104 - - [26/Jul/2019:22:31:32 +0000] "GET /site HTTP/1.1" 200 36565 "https://command-not-found.com/curl" "Mozilla/5.0+(compatible; UptimeRobot/2.0; http://www.uptimerobot.com/)" "172.19.0.3"
172.19.0.105 - - [26/Jul/2019:22:30:10 +0000] "GET /credits HTTP/1.1" 200 31067 "-" "Mozilla/5.0 (compatible; YandexBot/3.0; +http://yandex.com/bots)" "172.19.0.2"
172.19.0.106 - - [27/Jul/2019:22:30:10 +0000] "GET /index HTTP/1.1" 200 31067 "-" "Mozilla/5.0 (compatible; YandexBot/3.0; +http://yandex.com/bots)" "172.19.0.2"
172.19.0.104 - - [28/Jul/2019:22:35:10 +0000] "GET /index HTTP/1.1" 200 31067 "-" "Mozilla/5.0 (compatible; YandexBot/3.0; +http://yandex.com/bots)" "172.19.0.2"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>2 26/Jul/2019
1 25/Jul/2019
1 27/Jul/2019
1 28/Jul/2019</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174832Z" creationid="cApSt" creationdate="20210818T174832Z">
        <seg>2 26/Jul/2019
1 25/Jul/2019
1 27/Jul/2019
1 28/Jul/2019</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>2.1.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174836Z" creationid="cApSt" creationdate="20210818T174836Z">
        <seg>2.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>3 172.19.0.104
1 172.19.0.105
1 172.19.0.106</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174833Z" creationid="cApSt" creationdate="20210818T174833Z">
        <seg>3 172.19.0.104
1 172.19.0.105
1 172.19.0.106</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;Analyze the data and apply a linear regression model&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>&lt;g1&gt;Analyze the data and apply a linear regression model&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;Bash version 5.0 is installed, and your script will run on Debian Linux&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174831Z" creationid="cApSt" creationdate="20210818T174831Z">
        <seg>&lt;g1&gt;Bash version 5.0 is installed, and your script will run on Debian Linux&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;Bathroom&lt;/g1&gt;: number of bathrooms</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>&lt;g1&gt;Bathroom&lt;/g1&gt;: number of bathrooms</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;Bedroom&lt;/g1&gt;: number of bedrooms</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>&lt;g1&gt;Bedroom&lt;/g1&gt;: number of bedrooms</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;Check if random variables are independent&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174833Z" creationid="cApSt" creationdate="20210818T174833Z">
        <seg>&lt;g1&gt;Check if random variables are independent&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;Condition&lt;/g1&gt;: condition of the house (1 if good, 0 otherwise)</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>&lt;g1&gt;Condition&lt;/g1&gt;: condition of the house (1 if good, 0 otherwise)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;CustomStringEnumerator&lt;/g1&gt; can be used to enumerate any object that implements &lt;g2&gt;IEnumerable&lt;string&gt;&lt;/g2&gt; interface.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T143721Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>&lt;g1&gt;CustomStringEnumerator&lt;/g1&gt; can be used to list any object that uses &lt;g2&gt;IEnumerable&lt;string&gt;&lt;/g2&gt; interface.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;Decorators&lt;/g1&gt; are one of the most powerful tools that can be used by Python programmers.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T161315Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>&lt;g1&gt;Decorators&lt;/g1&gt; are one of the most powerful tools that can be used by Python programmers.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;Ensure your Bash script contains robust code, as it is checked with a static code analyzer.&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T194856Z" creationid="cApSt" creationdate="20210818T174833Z">
        <seg>&lt;g1&gt;Make sure your Bash script contains robust code, as it is checked with a static code analyzer.&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;EnumeratorConfig&lt;/g1&gt; class is as follows.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174844Z" creationid="cApSt" creationdate="20210818T174844Z">
        <seg>&lt;g1&gt;EnumeratorConfig&lt;/g1&gt; class is as follows.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;GET /api/articles&lt;/g1&gt; – return a list of articles.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174826Z" creationid="cApSt" creationdate="20210818T174826Z">
        <seg>&lt;g1&gt;GET /api/articles&lt;/g1&gt; – return a list of articles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;GET /messages&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174836Z" creationid="cApSt" creationdate="20210818T174836Z">
        <seg>&lt;g1&gt;GET /messages&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;Garage&lt;/g1&gt;: number of parking lots in the garage</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>&lt;g1&gt;Garage&lt;/g1&gt;: number of parking lots in the garage</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;If you would like to access CSV data sets locally you can &lt;g2&gt;download zipped files&lt;/g2&gt;.&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T154530Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>&lt;g1&gt;If you would like to access CSV data sets on your local device you can &lt;g2&gt;download zipped files&lt;/g2&gt;.&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;Lot&lt;/g1&gt;: width of a lot</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>&lt;g1&gt;Lot&lt;/g1&gt;: width of a lot</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;NOTE: This task runs against Spark version 2.4.5.&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174857Z" creationid="cApSt" creationdate="20210818T174857Z">
        <seg>&lt;g1&gt;NOTE: This task runs against Spark version 2.4.5.&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;Note: This task verifies knowledge of GitLab CI configuration skills based on simplified use case scenarios.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>&lt;g1&gt;Note: This task verifies knowledge of GitLab CI configuration skills based on simplified use case scenarios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;POST /api/articles&lt;/g1&gt; – create an article consisting of title, content and the level of its visibility.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T183636Z" creationid="cApSt" creationdate="20210818T174821Z">
        <seg>&lt;g1&gt;POST /api/articles&lt;/g1&gt; – create an article with a title, content and the level of its visibility.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;POST /api/authenticate&lt;/g1&gt; – authenticate a user.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174818Z" creationid="cApSt" creationdate="20210818T174818Z">
        <seg>&lt;g1&gt;POST /api/authenticate&lt;/g1&gt; – authenticate a user.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;POST /api/logout&lt;/g1&gt; – log out a user.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174820Z" creationid="cApSt" creationdate="20210818T174820Z">
        <seg>&lt;g1&gt;POST /api/logout&lt;/g1&gt; – log out a user.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;POST /api/user&lt;/g1&gt; – add a user to the database (kept in memory).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174816Z" creationid="cApSt" creationdate="20210818T174816Z">
        <seg>&lt;g1&gt;POST /api/user&lt;/g1&gt; – add a user to the database (kept in memory).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;POST /messages&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174835Z" creationid="cApSt" creationdate="20210818T174835Z">
        <seg>&lt;g1&gt;POST /messages&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;Price&lt;/g1&gt;: price of the house</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>&lt;g1&gt;Price&lt;/g1&gt;: price of the house</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;Room&lt;/g1&gt;: number of rooms</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>&lt;g1&gt;Room&lt;/g1&gt;: number of rooms</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;SchedulerFacade&lt;/g1&gt; is a layer of abstraction for RxJava2 and RxAndroid schedulers.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>&lt;g1&gt;SchedulerFacade&lt;/g1&gt; is a layer of abstraction for RxJava2 and RxAndroid schedulers.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;Space&lt;/g1&gt;: size of the house (in square feet)</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>&lt;g1&gt;Space&lt;/g1&gt;: size of the house (in square feet)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;Tax&lt;/g1&gt;: amount of annual tax</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>&lt;g1&gt;Tax&lt;/g1&gt;: amount of annual tax</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;aiohttp&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174905Z" creationid="cApSt" creationdate="20210818T174905Z">
        <seg>&lt;g1&gt;aiohttp&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;article_id: string&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174821Z" creationid="cApSt" creationdate="20210818T174821Z">
        <seg>&lt;g1&gt;article_id: string&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;asyncio&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174905Z" creationid="cApSt" creationdate="20210818T174905Z">
        <seg>&lt;g1&gt;asyncio&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;bashrc&lt;/g1&gt;:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174909Z" creationid="cApSt" creationdate="20210818T174909Z">
        <seg>&lt;g1&gt;bashrc&lt;/g1&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;begin()&lt;/g1&gt;: Opens a new transaction block.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174915Z" creationid="cApSt" creationdate="20210818T174915Z">
        <seg>&lt;g1&gt;begin()&lt;/g1&gt;: Opens a new transaction block.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;class LeastFlexibleAgent&lt;/g1&gt; - finds the least flexible of the available agents (the one with the fewest skills).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>&lt;g1&gt;class LeastFlexibleAgent&lt;/g1&gt; - finds the least flexible of the available agents (the one with the fewest skills).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;class LeastLoadedAgent&lt;/g1&gt; - finds agent that is least loaded (skill matching is not obligatory).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>&lt;g1&gt;class LeastLoadedAgent&lt;/g1&gt; - finds agent that is least loaded (skill matching is not obligatory).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;com.codility.app.AppConfiguration&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>&lt;g1&gt;com.codility.app.AppConfiguration&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;com.codility.app.UsersController&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>&lt;g1&gt;com.codility.app.UsersController&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;com.codility.app.UsersService&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>&lt;g1&gt;com.codility.app.UsersService&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;commit()&lt;/g1&gt;: Applies every stack operation issued in the current transaction block,
and closes the block.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174915Z" creationid="cApSt" creationdate="20210818T174915Z">
        <seg>&lt;g1&gt;commit()&lt;/g1&gt;: Applies every stack operation issued in the current transaction block,
and closes the block.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;content: string&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174821Z" creationid="cApSt" creationdate="20210818T174821Z">
        <seg>&lt;g1&gt;content: string&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;count&lt;/g1&gt; (number) specifies the number of returned messages (default: 10);
2.2.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174836Z" creationid="cApSt" creationdate="20210818T174836Z">
        <seg>&lt;g1&gt;count&lt;/g1&gt; (number) specifies the number of returned messages (default: 10);
2.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;create_date&lt;/g1&gt;, which is a creation date, stored as a string in &lt;g2&gt;ISO_8601&lt;/g2&gt; format;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>&lt;g1&gt;create_date&lt;/g1&gt;, which is a creation date, stored as a string in &lt;g2&gt;ISO_8601&lt;/g2&gt; format;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;data_frame&lt;/g1&gt; – a data frame with observations for which &lt;g2&gt;Space&lt;/g2&gt; is bigger than 800, ordered by decreasing &lt;g3&gt;Price&lt;/g3&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>&lt;g1&gt;data_frame&lt;/g1&gt; – a data frame with observations for which &lt;g2&gt;Space&lt;/g2&gt; is bigger than 800, ordered by decreasing &lt;g3&gt;Price&lt;/g3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;database&lt;/g1&gt; running a &lt;g2&gt;mysql&lt;/g2&gt; image in version &lt;g3&gt;5.6.47&lt;/g3&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174848Z" creationid="cApSt" creationdate="20210818T174848Z">
        <seg>&lt;g1&gt;database&lt;/g1&gt; running a &lt;g2&gt;mysql&lt;/g2&gt; image in version &lt;g3&gt;5.6.47&lt;/g3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;dataframe&lt;/g1&gt; - pandas DataFrame where &lt;g2&gt;target&lt;/g2&gt; is a classification label and other variables are explanatory variables.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T150419Z" creationid="cApSt" creationdate="20210818T174846Z">
        <seg>&lt;g1&gt;dataframe&lt;/g1&gt; - pandas DataFrame where &lt;g2&gt;target&lt;/g2&gt; is a classification label and other variables are explanation variables.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;external_lib/foobar.c&lt;/g1&gt;:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174908Z" creationid="cApSt" creationdate="20210818T174908Z">
        <seg>&lt;g1&gt;external_lib/foobar.c&lt;/g1&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;external_lib/foobar.h&lt;/g1&gt;:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174908Z" creationid="cApSt" creationdate="20210818T174908Z">
        <seg>&lt;g1&gt;external_lib/foobar.h&lt;/g1&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;foo.c&lt;/g1&gt;:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174911Z" creationid="cApSt" creationdate="20210818T174911Z">
        <seg>&lt;g1&gt;foo.c&lt;/g1&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;get_english_name&lt;/g1&gt; – this function should get the &lt;g2&gt;Species&lt;/g2&gt; column value and return the English name.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174858Z" creationid="cApSt" creationdate="20210818T174858Z">
        <seg>&lt;g1&gt;get_english_name&lt;/g1&gt; – this function should get the &lt;g2&gt;Species&lt;/g2&gt; column value and return the English name.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;get_start_year&lt;/g1&gt; – this function should get the &lt;g2&gt;Period&lt;/g2&gt; column value and return the year (an integer) when data collection began.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174858Z" creationid="cApSt" creationdate="20210818T174858Z">
        <seg>&lt;g1&gt;get_start_year&lt;/g1&gt; – this function should get the &lt;g2&gt;Period&lt;/g2&gt; column value and return the year (an integer) when data collection began.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;get_trend&lt;/g1&gt; – this function should should get the &lt;g2&gt;Annual percentage change&lt;/g2&gt; column value and return the change trend category based on the following rules:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174858Z" creationid="cApSt" creationdate="20210818T174858Z">
        <seg>&lt;g1&gt;get_trend&lt;/g1&gt; – this function should should get the &lt;g2&gt;Annual percentage change&lt;/g2&gt; column value and return the change trend category based on the following rules:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;header.h&lt;/g1&gt;:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174907Z" creationid="cApSt" creationdate="20210818T174907Z">
        <seg>&lt;g1&gt;header.h&lt;/g1&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;id&lt;/g1&gt; strings (along with other strings) are any string from 1 to 100 characters.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174828Z" creationid="cApSt" creationdate="20210818T174828Z">
        <seg>&lt;g1&gt;id&lt;/g1&gt; strings (along with other strings) are any string from 1 to 100 characters.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;id&lt;/g1&gt;, which is a UUID v4;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>&lt;g1&gt;id&lt;/g1&gt;, which is a UUID v4;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;javac -d /src/tests/suites/ -cp /lib/junit-4.12.jar /data/sets/users.java&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>&lt;g1&gt;javac -d /src/tests/suites/ -cp /lib/junit-4.12.jar /data/sets/users.java&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;lodash&lt;/g1&gt;, version 4.17.11.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174828Z" creationid="cApSt" creationdate="20210818T174828Z">
        <seg>&lt;g1&gt;lodash&lt;/g1&gt;, version 4.17.11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;logged_in&lt;/g1&gt; – only users with valid a session can access the article.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174822Z" creationid="cApSt" creationdate="20210818T174822Z">
        <seg>&lt;g1&gt;logged_in&lt;/g1&gt; – only users with valid a session can access the article.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;login: string&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174817Z" creationid="cApSt" creationdate="20210818T174817Z">
        <seg>&lt;g1&gt;login: string&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;main.c&lt;/g1&gt;:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174908Z" creationid="cApSt" creationdate="20210818T174908Z">
        <seg>&lt;g1&gt;main.c&lt;/g1&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;main.cc&lt;/g1&gt;:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174911Z" creationid="cApSt" creationdate="20210818T174911Z">
        <seg>&lt;g1&gt;main.cc&lt;/g1&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;model_parameters&lt;/g1&gt; – a dictionary of length 9 with the model parameters.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174853Z" creationid="cApSt" creationdate="20210818T174853Z">
        <seg>&lt;g1&gt;model_parameters&lt;/g1&gt; – a dictionary of length 9 with the model parameters.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;movies&lt;/g1&gt; – information about movies with the columns: &lt;g2&gt;movie id&lt;/g2&gt; (should match &lt;g3&gt;item_id&lt;/g3&gt; from &lt;g4&gt;ratings&lt;/g4&gt;), &lt;g5&gt;movie title&lt;/g5&gt; and &lt;g6&gt;release year&lt;/g6&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174902Z" creationid="cApSt" creationdate="20210818T174902Z">
        <seg>&lt;g1&gt;movies&lt;/g1&gt; – information about movies with the columns: &lt;g2&gt;movie id&lt;/g2&gt; (should match &lt;g3&gt;item_id&lt;/g3&gt; from &lt;g4&gt;ratings&lt;/g4&gt;), &lt;g5&gt;movie title&lt;/g5&gt; and &lt;g6&gt;release year&lt;/g6&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;mvn clean test -Dtest=functional -Ddata_sets=users&lt;/g1&gt;,</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>&lt;g1&gt;mvn clean test -Dtest=functional -Ddata_sets=users&lt;/g1&gt;,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;mvn clean test -Dtest=performance -Ddata_sets=users&lt;/g1&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>&lt;g1&gt;mvn clean test -Dtest=performance -Ddata_sets=users&lt;/g1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;number_of_observations&lt;/g1&gt; – a numeric value corresponding to the number of observations for which the value of a variable &lt;g2&gt;Lot&lt;/g2&gt; is equal to or bigger than the 4th 5-quantile of this variable.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174853Z" creationid="cApSt" creationdate="20210818T174853Z">
        <seg>&lt;g1&gt;number_of_observations&lt;/g1&gt; – a numeric value corresponding to the number of observations for which the value of a variable &lt;g2&gt;Lot&lt;/g2&gt; is equal to or bigger than the 4th 5-quantile of this variable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;password: string&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174818Z" creationid="cApSt" creationdate="20210818T174818Z">
        <seg>&lt;g1&gt;password: string&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;pop()&lt;/g1&gt;: Removes the topmost element from the stack, or does nothing if the stack is empty.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174915Z" creationid="cApSt" creationdate="20210818T174915Z">
        <seg>&lt;g1&gt;pop()&lt;/g1&gt;: Removes the topmost element from the stack, or does nothing if the stack is empty.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;price_prediction&lt;/g1&gt; – a numeric value which corresponds to the prediction of the price (using the applied model) for a house with the following specific parameters: three bedrooms; 1500 square feet of space; eight rooms; width of lot is 40; $1000 tax; two bathrooms; one space in the garage; house is in bad condition.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174853Z" creationid="cApSt" creationdate="20210818T174853Z">
        <seg>&lt;g1&gt;price_prediction&lt;/g1&gt; – a numeric value which corresponds to the prediction of the price (using the applied model) for a house with the following specific parameters: three bedrooms; 1500 square feet of space; eight rooms; width of lot is 40; $1000 tax; two bathrooms; one space in the garage; house is in bad condition.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;private&lt;/g1&gt; – the article is only accessible to the creator;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210819T144441Z" creationid="cApSt" creationdate="20210818T174822Z">
        <seg>&lt;g1&gt;private&lt;/g1&gt; – only the creator can access the article;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;public&lt;/g1&gt; – the article is available publicly;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174821Z" creationid="cApSt" creationdate="20210818T174821Z">
        <seg>&lt;g1&gt;public&lt;/g1&gt; – the article is available publicly;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;push(value)&lt;/g1&gt;: Pushes an element &lt;g2&gt;value&lt;/g2&gt; to the stack.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>&lt;g1&gt;push(value)&lt;/g1&gt;: Pushes an element &lt;g2&gt;value&lt;/g2&gt; to the stack.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;ratings&lt;/g1&gt; – information about movie ratings by users (only one movie's evaluation per user) with the columns: &lt;g2&gt;user id&lt;/g2&gt;, &lt;g3&gt;item id&lt;/g3&gt;, &lt;g4&gt;rating&lt;/g4&gt; and &lt;g5&gt;timestamp&lt;/g5&gt;;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174902Z" creationid="cApSt" creationdate="20210818T174902Z">
        <seg>&lt;g1&gt;ratings&lt;/g1&gt; – information about movie ratings by users (only one movie's evaluation per user) with the columns: &lt;g2&gt;user id&lt;/g2&gt;, &lt;g3&gt;item id&lt;/g3&gt;, &lt;g4&gt;rating&lt;/g4&gt; and &lt;g5&gt;timestamp&lt;/g5&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;regression_dict&lt;/g1&gt; – a dictionary of length 2 with the following elements:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174853Z" creationid="cApSt" creationdate="20210818T174853Z">
        <seg>&lt;g1&gt;regression_dict&lt;/g1&gt; – a dictionary of length 2 with the following elements:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;rollback()&lt;/g1&gt;: Undoes every stack operation issued in the current transaction block,
and closes the block.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174915Z" creationid="cApSt" creationdate="20210818T174915Z">
        <seg>&lt;g1&gt;rollback()&lt;/g1&gt;: Undoes every stack operation issued in the current transaction block,
and closes the block.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;statistics&lt;/g1&gt; – a list of numbers of length 5 with mean, standard deviation, median, minimum and maximum for a variable &lt;g2&gt;Tax&lt;/g2&gt; for all houses with two bathrooms and four bedrooms.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>&lt;g1&gt;statistics&lt;/g1&gt; – a list of numbers of length 5 with mean, standard deviation, median, minimum and maximum for a variable &lt;g2&gt;Tax&lt;/g2&gt; for all houses with two bathrooms and four bedrooms.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;summary_dict&lt;/g1&gt; – a dictionary of length 3 with the following elements:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>&lt;g1&gt;summary_dict&lt;/g1&gt; – a dictionary of length 3 with the following elements:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;text&lt;/g1&gt;, which holds actual note content.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>&lt;g1&gt;text&lt;/g1&gt;, which holds actual note content.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;title: string&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174821Z" creationid="cApSt" creationdate="20210818T174821Z">
        <seg>&lt;g1&gt;title: string&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;top()&lt;/g1&gt;: Returns the topmost element (without removing it from the stack), or 0 if the stack is empty.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174915Z" creationid="cApSt" creationdate="20210818T174915Z">
        <seg>&lt;g1&gt;top()&lt;/g1&gt;: Returns the topmost element (without removing it from the stack), or 0 if the stack is empty.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;user&lt;/g1&gt;, which is an owner’s &lt;g2&gt;email&lt;/g2&gt;;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>&lt;g1&gt;user&lt;/g1&gt;, which is an owner’s &lt;g2&gt;email&lt;/g2&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;user_id: string&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174817Z" creationid="cApSt" creationdate="20210818T174817Z">
        <seg>&lt;g1&gt;user_id: string&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;users&lt;/g1&gt; – information about users with the columns: &lt;g2&gt;user id&lt;/g2&gt;, &lt;g3&gt;full name&lt;/g3&gt;, &lt;g4&gt;age&lt;/g4&gt;, &lt;g5&gt;gender&lt;/g5&gt; and &lt;g6&gt;zip code&lt;/g6&gt;;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174902Z" creationid="cApSt" creationdate="20210818T174902Z">
        <seg>&lt;g1&gt;users&lt;/g1&gt; – information about users with the columns: &lt;g2&gt;user id&lt;/g2&gt;, &lt;g3&gt;full name&lt;/g3&gt;, &lt;g4&gt;age&lt;/g4&gt;, &lt;g5&gt;gender&lt;/g5&gt; and &lt;g6&gt;zip code&lt;/g6&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;uuid&lt;/g1&gt;, version 3.3.2 (https://github.com/kelektiv/node-uuid);</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174828Z" creationid="cApSt" creationdate="20210818T174828Z">
        <seg>&lt;g1&gt;uuid&lt;/g1&gt;, version 3.3.2 (https://github.com/kelektiv/node-uuid);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g1&gt;visibility: 'public' | 'private' | 'logged_in'&lt;/g1&gt;:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174821Z" creationid="cApSt" creationdate="20210818T174821Z">
        <seg>&lt;g1&gt;visibility: 'public' | 'private' | 'logged_in'&lt;/g1&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g2&gt;All&lt;/g2&gt; task IDs are recognizable by &lt;g3&gt;TaskRunner&lt;/g3&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>&lt;g2&gt;All&lt;/g2&gt; task IDs are recognizable by &lt;g3&gt;TaskRunner&lt;/g3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g2&gt;Only&lt;/g2&gt; a user with a valid session can create articles.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174821Z" creationid="cApSt" creationdate="20210818T174821Z">
        <seg>&lt;g2&gt;Only&lt;/g2&gt; a user with a valid session can create articles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g2&gt;next&lt;/g2&gt; specifies a cursor pointing to the next record for the given request (default: first records should be returned);</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174836Z" creationid="cApSt" creationdate="20210818T174836Z">
        <seg>&lt;g2&gt;next&lt;/g2&gt; specifies a cursor pointing to the next record for the given request (default: first records should be returned);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g4&gt;Full name&lt;/g4&gt; is the full name of the user for whom we want to return one recommended movie whose release year is equal to &lt;g5&gt;year&lt;/g5&gt; using one of the three implemented &lt;g6&gt;method&lt;/g6&gt;s:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174902Z" creationid="cApSt" creationdate="20210818T174902Z">
        <seg>&lt;g4&gt;Full name&lt;/g4&gt; is the full name of the user for whom we want to return one recommended movie whose release year is equal to &lt;g5&gt;year&lt;/g5&gt; using one of the three implemented &lt;g6&gt;method&lt;/g6&gt;s:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;g6&gt;CustomStringEnumerator&lt;/g6&gt; should be defined as follows:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174843Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>&lt;g6&gt;CustomStringEnumerator&lt;/g6&gt; should be defined as follows:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>&lt;x1/&gt;&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174834Z" creationid="cApSt" creationdate="20210818T174834Z">
        <seg>&lt;x1/&gt;&lt;x2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>=== Assessment: ===</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T182404Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>=== Assessment: ===</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>=== Example 1 ===
The current directory is as follows:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174907Z" creationid="cApSt" creationdate="20210818T174907Z">
        <seg>=== Example 1 ===
The current directory is as follows:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>=== Example 2 ===
There is only one file in the current directory, named &lt;g1&gt;main.c&lt;/g1&gt;:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174909Z" creationid="cApSt" creationdate="20210818T174909Z">
        <seg>=== Example 2 ===
There is only one file in the current directory, named &lt;g1&gt;main.c&lt;/g1&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>=== Example 3 ===</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174910Z" creationid="cApSt" creationdate="20210818T174910Z">
        <seg>=== Example 3 ===</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>=== Requirements: ===</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172038Z" creationid="cApSt" creationdate="20210809T172038Z">
        <seg>=== Requirements: ===</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>@provide(a=2)
def add(a: int, b: int) -&gt; int:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174856Z" creationid="cApSt" creationdate="20210818T174856Z">
        <seg>@provide(a=2)
def add(a: int, b: int) -&gt; int:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>@provide(nonexistent=123, b=1)
def add(a: int, b: int) -&gt; int:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174857Z" creationid="cApSt" creationdate="20210818T174857Z">
        <seg>@provide(nonexistent=123, b=1)
def add(a: int, b: int) -&gt; int:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>A ''binary tree'' is either an empty tree or a node (called the ''root'') consisting of
a single integer value and two further binary trees, called the ''left subtree'' and the ''right subtree''.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174920Z" creationid="cApSt" creationdate="20210818T174920Z">
        <seg>A ''binary tree'' is either an empty tree or a node (called the ''root'') consisting of
a single integer value and two further binary trees, called the ''left subtree'' and the ''right subtree''.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>A ''path'' in a binary tree is a non((-))empty sequence of nodes that one can traverse by following the pointers.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174921Z" creationid="cApSt" creationdate="20210818T174921Z">
        <seg>A ''path'' in a binary tree is a non((-))empty sequence of nodes that one can traverse by following the pointers.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>A binary tree T is given.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174921Z" creationid="cApSt" creationdate="20210818T174921Z">
        <seg>A binary tree T is given.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>A binary tree can be given using a pointer data structure.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174920Z" creationid="cApSt" creationdate="20210818T174920Z">
        <seg>A binary tree can be given using a pointer data structure.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>A decorator can change a decorated class or function, e.g. to validate arguments, inject an argument or register a function somewhere (functools.singledispatch/pytest.fixture).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174854Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>A decorator can change a decorated class or function, e.g. to validate arguments, inject an argument or register a function somewhere (functools.singledispatch/pytest.fixture).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>A group of similar users are users who have seen at least one movie that the given user has seen, and for which the maximum difference between their rating and the given user's rating of the same movie is 1 (for every movie they have both seen).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174903Z" creationid="cApSt" creationdate="20210818T174903Z">
        <seg>A group of similar users are users who have seen at least one movie that the given user has seen, and for which the maximum difference between their rating and the given user's rating of the same movie is 1 (for every movie they have both seen).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>A node of tree T containing value V is described as ''visible''
if the path from the root of the tree to that node does not contain
a node with any value exceeding V.
In particular, the root is always visible and nodes with values
lower than that of the root are never visible.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174921Z" creationid="cApSt" creationdate="20210818T174921Z">
        <seg>A node of tree T containing value V is described as ''visible''
if the path from the root of the tree to that node does not contain
a node with any value exceeding V.
In particular, the root is always visible and nodes with values
lower than that of the root are never visible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>A non((-))empty tree is denoted as (X, L, R), where X is the value contained in the root
and L and R denote the left and right subtrees, respectively.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174922Z" creationid="cApSt" creationdate="20210818T174922Z">
        <seg>A non((-))empty tree is denoted as (X, L, R), where X is the value contained in the root
and L and R denote the left and right subtrees, respectively.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>A non((-))empty tree is represented by a pointer to an object representing its root.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174920Z" creationid="cApSt" creationdate="20210818T174920Z">
        <seg>A non((-))empty tree is represented by a pointer to an object representing its root.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>A request to the endpoint should initiate the execution of all tasks &lt;g2&gt;at the same time&lt;/g2&gt;, so that they can
work in parallel, and should return a response as soon as all tasks have been finished.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172043Z" creationid="cApSt" creationdate="20210809T172043Z">
        <seg>A request to the endpoint should initiate the execution of all tasks &lt;g2&gt;at the same time&lt;/g2&gt;, so that they can
work in parallel, and should return a response as soon as all tasks have been finished.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>A service is considered to be healthy if it responds to a health check request in no longer than 0.5 second and HTTP code will be equal to 200 OK.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174905Z" creationid="cApSt" creationdate="20210818T174905Z">
        <seg>A service is considered to be healthy if it responds to a health check request in no longer than 0.5 second and HTTP code will be equal to 200 OK.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>A simple example of how a decorator is used on a function - illustrating requirement 1:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174856Z" creationid="cApSt" creationdate="20210818T174856Z">
        <seg>A simple example of how a decorator is used on a function - illustrating requirement 1:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>A token is associated with a user.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174827Z" creationid="cApSt" creationdate="20210818T174827Z">
        <seg>A token is associated with a user.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Add a dislike button:((&lt;x2/&gt;))</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172039Z" creationid="cApSt" creationdate="20210809T172039Z">
        <seg>Add a dislike button:((&lt;x2/&gt;))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Add a like button:((&lt;x2/&gt;))</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172038Z" creationid="cApSt" creationdate="20210809T172038Z">
        <seg>Add a like button:((&lt;x2/&gt;))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Added content should be kept in memory; no database/storage back end is available.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174827Z" creationid="cApSt" creationdate="20210818T174827Z">
        <seg>Added content should be kept in memory; no database/storage back end is available.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Additional configurations on the LivenessProbe:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174854Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>Additional configurations on the LivenessProbe:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Additional configurations on the ReadinessProbe:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174854Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>Additional configurations on the ReadinessProbe:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Additional examples</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T184118Z" creationid="cApSt" creationdate="20210818T174828Z">
        <seg>More examples</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Additionally, the &lt;g1&gt;backend&lt;/g1&gt; service should expose its port &lt;g2&gt;6000&lt;/g2&gt; from container to a publicly exposed port &lt;g3&gt;6000&lt;/g3&gt; via the UDP protocol for local DHCP services.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174848Z" creationid="cApSt" creationdate="20210818T174848Z">
        <seg>Additionally, the &lt;g1&gt;backend&lt;/g1&gt; service should expose its port &lt;g2&gt;6000&lt;/g2&gt; from container to a publicly exposed port &lt;g3&gt;6000&lt;/g3&gt; via the UDP protocol for local DHCP services.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Additionally, there is a &lt;g5&gt;Secondary index&lt;/g5&gt; on the &lt;g6&gt;id&lt;/g6&gt; field.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>Additionally, there is a &lt;g5&gt;Secondary index&lt;/g5&gt; on the &lt;g6&gt;id&lt;/g6&gt; field.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Additionally, to Python 3.8 standard library you can use following packages:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174903Z" creationid="cApSt" creationdate="20210818T174903Z">
        <seg>Additionally, to Python 3.8 standard library you can use following packages:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>After doing that, please update &lt;g1&gt;transform&lt;/g1&gt; method inside &lt;g2&gt;job.py&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174859Z" creationid="cApSt" creationdate="20210818T174859Z">
        <seg>After doing that, please update &lt;g1&gt;transform&lt;/g1&gt; method inside &lt;g2&gt;job.py&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>After rotating both the first ('^') and fourth ('&lt;') arrows downwards ('v'), all of the arrows would point down.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>After rotating both the first ('^') and fourth ('&lt;') arrows downwards ('v'), all of the arrows would point down.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>After rotating the first, fifth and sixth arrow rightwards, all of the arrows would point right.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>After rotating the first, fifth and sixth arrow rightwards, all of the arrows would point right.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Agent 1:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>Agent 1:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Agent 2:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>Agent 2:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Agent:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174913Z" creationid="cApSt" creationdate="20210818T174913Z">
        <seg>Agent:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Agents should be sorted first by the number of skills they have, then by their load.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>Agents should be sorted first by the number of skills they have, then by their load.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>All methods should return a movie title that has not been rated by the given user.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174903Z" creationid="cApSt" creationdate="20210818T174903Z">
        <seg>All methods should return a movie title that has not been rated by the given user.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>All of the arrows already point left.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>All of the arrows already point left.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>An article object is consisted of the following fields: &lt;g1&gt;article_id&lt;/g1&gt;, &lt;g2&gt;title&lt;/g2&gt;, &lt;g3&gt;content&lt;/g3&gt; and
&lt;g4&gt;user_id&lt;/g4&gt; which all are strings, and the &lt;g5&gt;visibility&lt;/g5&gt; field which equals one of these values:
&lt;g6&gt;public&lt;/g6&gt;, &lt;g7&gt;private&lt;/g7&gt;, &lt;g8&gt;logged_in&lt;/g8&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210819T144513Z" creationid="cApSt" creationdate="20210818T174827Z">
        <seg>An article object is made up of the following fields: &lt;g1&gt;article_id&lt;/g1&gt;, &lt;g2&gt;title&lt;/g2&gt;, &lt;g3&gt;content&lt;/g3&gt; and
&lt;g4&gt;user_id&lt;/g4&gt; which all are strings, and the &lt;g5&gt;visibility&lt;/g5&gt; field which equals one of these values:
&lt;g6&gt;public&lt;/g6&gt;, &lt;g7&gt;private&lt;/g7&gt;, &lt;g8&gt;logged_in&lt;/g8&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>An easy way
to ensure that is to end it with "&lt;g4&gt;; true&lt;/g4&gt;".</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174907Z" creationid="cApSt" creationdate="20210818T174907Z">
        <seg>An easy way
to ensure that is to end it with "&lt;g4&gt;; true&lt;/g4&gt;".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>An empty binary tree is denoted by &lt;g1&gt;None&lt;/g1&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174922Z" creationid="cApSt" creationdate="20210818T174922Z">
        <seg>An empty binary tree is denoted by &lt;g1&gt;None&lt;/g1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>An example of the headers that are included into a POST request sent to the &lt;g1&gt;/api/articles&lt;/g1&gt; endpoint:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174830Z" creationid="cApSt" creationdate="20210818T174830Z">
        <seg>An example of the headers that are included into a POST request sent to the &lt;g1&gt;/api/articles&lt;/g1&gt; endpoint:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Analogously, if the execution order is &lt;g1&gt;3&lt;/g1&gt;, &lt;g2&gt;2&lt;/g2&gt;, &lt;g3&gt;1&lt;/g3&gt;, &lt;g4&gt;0&lt;/g4&gt;, then the response body should be:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>Analogously, if the execution order is &lt;g1&gt;3&lt;/g1&gt;, &lt;g2&gt;2&lt;/g2&gt;, &lt;g3&gt;1&lt;/g3&gt;, &lt;g4&gt;0&lt;/g4&gt;, then the response body should be:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>And if the incoming ticket is in English, you want to assign it to &lt;g1&gt;Agent 2&lt;/g1&gt; so as
to be sure that the next French ticket will be assigned to an agent and will not be
stacked.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>And if the incoming ticket is in English, you want to assign it to &lt;g1&gt;Agent 2&lt;/g1&gt; so as
to be sure that the next French ticket will be assigned to an agent and will not be
stacked.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Annual percentage change between -0.50 and 0.50 (exclusive) – return 'no change';</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174859Z" creationid="cApSt" creationdate="20210818T174859Z">
        <seg>Annual percentage change between -0.50 and 0.50 (exclusive) – return 'no change';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Annual percentage change between -3.00 and -0.50 (inclusive) – return 'weak decline';</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174859Z" creationid="cApSt" creationdate="20210818T174859Z">
        <seg>Annual percentage change between -3.00 and -0.50 (inclusive) – return 'weak decline';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Annual percentage change between 0.50 and 3.00 (inclusive) – return 'weak increase';</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174859Z" creationid="cApSt" creationdate="20210818T174859Z">
        <seg>Annual percentage change between 0.50 and 3.00 (inclusive) – return 'weak increase';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Annual percentage change less than -3.00 – return 'strong decline';</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174859Z" creationid="cApSt" creationdate="20210818T174859Z">
        <seg>Annual percentage change less than -3.00 – return 'strong decline';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Annual percentage change more than 3.00 – return 'strong increase'.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174859Z" creationid="cApSt" creationdate="20210818T174859Z">
        <seg>Annual percentage change more than 3.00 – return 'strong increase'.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Another example of how the decorator should preserve the positional arguments of the decorated function - illustrating requirement 2:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174856Z" creationid="cApSt" creationdate="20210818T174856Z">
        <seg>Another example of how the decorator should preserve the positional arguments of the decorated function - illustrating requirement 2:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Apart from base Python, you can use the numpy and pandas packages.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174834Z" creationid="cApSt" creationdate="20210818T174834Z">
        <seg>Apart from base Python, you can use the numpy and pandas packages.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Apart from base Python, you can use the numpy, pandas and scikit-learn packages.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174853Z" creationid="cApSt" creationdate="20210818T174853Z">
        <seg>Apart from base Python, you can use the numpy, pandas and scikit-learn packages.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Argument injection could be leveraged to make functions shorter: instead of burdening them with the explicit creation of required resources, one could just write a decorator to inject a handle to a temporary file or database connection.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174854Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>Argument injection could be leveraged to make functions shorter: instead of burdening them with the explicit creation of required resources, one could just write a decorator to inject a handle to a temporary file or database connection.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>As a manager of our support system, I want to make sure that we are using an optimal algorithm to assign tickets to agents.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174913Z" creationid="cApSt" creationdate="20210818T174913Z">
        <seg>As a manager of our support system, I want to make sure that we are using an optimal algorithm to assign tickets to agents.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>As you can see, for example &lt;x1/&gt;&lt;x2/&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174833Z" creationid="cApSt" creationdate="20210818T174833Z">
        <seg>As you can see, for example &lt;x1/&gt;&lt;x2/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Assume that a &lt;g3&gt;null&lt;/g3&gt; string is a
string of length 0.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174843Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>Assume that a &lt;g3&gt;null&lt;/g3&gt; string is a
string of length 0.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Assume that the following packages are supported:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174828Z" creationid="cApSt" creationdate="20210818T174828Z">
        <seg>Assume that the following packages are supported:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Assumptions:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172043Z" creationid="cApSt" creationdate="20210809T172043Z">
        <seg>Assumptions:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Authentication</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>Authentication</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Authentication header</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>Authentication header</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Be sure to run them &lt;g5&gt;in parallel&lt;/g5&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>Be sure to run them &lt;g5&gt;in parallel&lt;/g5&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>By &lt;g1&gt;method=by_popularity&lt;/g1&gt; return the movie title with the most ratings.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174902Z" creationid="cApSt" creationdate="20210818T174902Z">
        <seg>By &lt;g1&gt;method=by_popularity&lt;/g1&gt; return the movie title with the most ratings.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>By &lt;g1&gt;method=by_rating&lt;/g1&gt; return the movie title with the highest average rating.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174903Z" creationid="cApSt" creationdate="20210818T174903Z">
        <seg>By &lt;g1&gt;method=by_rating&lt;/g1&gt; return the movie title with the highest average rating.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>By &lt;g1&gt;method=by_similar_users&lt;/g1&gt; return the movie title with the latest rating (timestamp) among a group of similar users to a given user.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174903Z" creationid="cApSt" creationdate="20210818T174903Z">
        <seg>By &lt;g1&gt;method=by_similar_users&lt;/g1&gt; return the movie title with the latest rating (timestamp) among a group of similar users to a given user.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>CXXFLAGS += foobar</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174909Z" creationid="cApSt" creationdate="20210818T174909Z">
        <seg>CXXFLAGS += foobar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Common approach is to use &lt;g1&gt;id&lt;/g1&gt;s from DB and filter the records that contain only higher/lower &lt;g2&gt;id&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T204821Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>A common approach is to use &lt;g1&gt;id&lt;/g1&gt;s from DB and filter the records that contain only higher/lower &lt;g2&gt;id&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Configure Spring to scan for beans in the &lt;g1&gt;com.codility.external&lt;/g1&gt; package.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>Configure Spring to scan for beans in the &lt;g1&gt;com.codility.external&lt;/g1&gt; package.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Console.WriteLine(s);</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T142513Z" creationid="cApSt" creationdate="20210823T142513Z">
        <seg>Console.WriteLine(s);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Console.WriteLine(s);
}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174843Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>Console.WriteLine(s);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Contract.Assert(sol.commit() == false);   // there is no open transaction
}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174920Z" creationid="cApSt" creationdate="20210818T174920Z">
        <seg>Contract.Assert(sol.commit() == false);   // there is no open transaction
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Contract.Assert(sol.commit() == true);    // transaction 3 is committed</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174919Z" creationid="cApSt" creationdate="20210818T174919Z">
        <seg>Contract.Assert(sol.commit() == true);    // transaction 3 is committed</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Contract.Assert(sol.rollback() == true);  // rollback transaction 1</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174919Z" creationid="cApSt" creationdate="20210818T174919Z">
        <seg>Contract.Assert(sol.rollback() == true);  // rollback transaction 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Contract.Assert(sol.rollback() == true);  // rollback transaction 2</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174919Z" creationid="cApSt" creationdate="20210818T174919Z">
        <seg>Contract.Assert(sol.rollback() == true);  // rollback transaction 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Contract.Assert(sol.top() == 10);</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174919Z" creationid="cApSt" creationdate="20210818T174919Z">
        <seg>Contract.Assert(sol.top() == 10);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Contract.Assert(sol.top() == 4;           // stack: [4]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174920Z" creationid="cApSt" creationdate="20210818T174920Z">
        <seg>Contract.Assert(sol.top() == 4;           // stack: [4]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Contract.Assert(sol.top() == 7);          // stack: [4,7]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174919Z" creationid="cApSt" creationdate="20210818T174919Z">
        <seg>Contract.Assert(sol.top() == 7);          // stack: [4,7]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Contract.Assert(sol2.top() == 0);        // top of an empty stack is 0</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174919Z" creationid="cApSt" creationdate="20210818T174919Z">
        <seg>Contract.Assert(sol2.top() == 0);        // top of an empty stack is 0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Create a Bash script to parse and analyze the Apache access log file.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174831Z" creationid="cApSt" creationdate="20210818T174831Z">
        <seg>Create a Bash script to parse and analyze the Apache access log file.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Create a Submit button with its &lt;g1&gt;id&lt;/g1&gt; set to &lt;g2&gt;login-button&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174901Z" creationid="cApSt" creationdate="20210818T174901Z">
        <seg>Create a Submit button with its &lt;g1&gt;id&lt;/g1&gt; set to &lt;g2&gt;login-button&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Create a function &lt;g1&gt;get_recommendations&lt;/g1&gt; which will take as arguments three dataframes, a name for the user, the year of interest and the recommendation method, and will return the title of the most highly recommended movie for the given user.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174902Z" creationid="cApSt" creationdate="20210818T174902Z">
        <seg>Create a function &lt;g1&gt;get_recommendations&lt;/g1&gt; which will take as arguments three dataframes, a name for the user, the year of interest and the recommendation method, and will return the title of the most highly recommended movie for the given user.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Create a function, &lt;g1&gt;preprocess_data&lt;/g1&gt;, which performs data preprocessing for a classification task.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174845Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>Create a function, &lt;g1&gt;preprocess_data&lt;/g1&gt;, which performs data preprocessing for a classification task.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Create an &lt;g1&gt;input&lt;/g1&gt; element for the &lt;g2&gt;password&lt;/g2&gt; field.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174901Z" creationid="cApSt" creationdate="20210818T174901Z">
        <seg>Create an &lt;g1&gt;input&lt;/g1&gt; element for the &lt;g2&gt;password&lt;/g2&gt; field.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Create an &lt;g1&gt;input&lt;/g1&gt; element for the &lt;g2&gt;username&lt;/g2&gt; field.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174901Z" creationid="cApSt" creationdate="20210818T174901Z">
        <seg>Create an &lt;g1&gt;input&lt;/g1&gt; element for the &lt;g2&gt;username&lt;/g2&gt; field.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Cross((-))validation is a technique used to create a more accurate estimate of model prediction performance.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T155133Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>Cross((-))validation is used to create a more accurate estimate of model prediction performance.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Data overview</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>Data overview</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Database keys and indexes</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>Database keys and indexes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Define a &lt;g1&gt;build&lt;/g1&gt; job for the &lt;g2&gt;compile&lt;/g2&gt; stage, which should compile the provided Java classes with the following command:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>Define a &lt;g1&gt;build&lt;/g1&gt; job for the &lt;g2&gt;compile&lt;/g2&gt; stage, which should compile the provided Java classes with the following command:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Developers from your team have asked you to provide them with a simple local development environment for their application in the &lt;g1&gt;docker-compose&lt;/g1&gt; tool.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174848Z" creationid="cApSt" creationdate="20210818T174848Z">
        <seg>Developers from your team have asked you to provide them with a simple local development environment for their application in the &lt;g1&gt;docker-compose&lt;/g1&gt; tool.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Disliking an already liked article cancels the like:((&lt;x2/&gt;))</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172040Z" creationid="cApSt" creationdate="20210809T172040Z">
        <seg>Disliking an already liked article cancels the like:((&lt;x2/&gt;))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>During the assessment of your program, a single test will execute N operations, where
N is at most 100,000.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174915Z" creationid="cApSt" creationdate="20210818T174915Z">
        <seg>During the assessment of your program, a single test will execute N operations, where
N is at most 100,000.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>During the assessment there can be more than one instance of class
&lt;g1&gt;Solution&lt;/g1&gt; working at the same time.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174915Z" creationid="cApSt" creationdate="20210818T174915Z">
        <seg>During the assessment there can be more than one instance of class
&lt;g1&gt;Solution&lt;/g1&gt; working at the same time.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Each authentication token maps to the email of the user owning the given token.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>Each authentication token maps to the email of the user owning the given token.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Each command added to the YAML should be a one-liner without extra bash functions.&lt;/g1&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>Each command added to the YAML should be a one-liner without extra bash functions.&lt;/g1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Each created message will receive an incrmental &lt;g2&gt;id&lt;/g2&gt; field from the database.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T203343Z" creationid="cApSt" creationdate="20210818T174835Z">
        <seg>Each created message will receive an incremental &lt;g2&gt;id&lt;/g2&gt; field from the database.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Each input should update its &lt;g3&gt;value&lt;/g3&gt; attribute on input change.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174900Z" creationid="cApSt" creationdate="20210818T174900Z">
        <seg>Each input should update its &lt;g3&gt;value&lt;/g3&gt; attribute on input change.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Each note has the following attributes:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>Each note has the following attributes:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Each of them should execute a Maven script to start the tests.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>Each of them should execute a Maven script to start the tests.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Each of those services has an endpoint /status that can be queried against using HTTP protocol.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174905Z" creationid="cApSt" creationdate="20210818T174905Z">
        <seg>Each of those services has an endpoint /status that can be queried against using HTTP protocol.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Environment</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>Environment</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Every Pod runs a single container, &lt;g1&gt;hub.example.com/shop-backend:1.0.0&lt;/g1&gt;;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174853Z" creationid="cApSt" creationdate="20210818T174853Z">
        <seg>Every Pod runs a single container, &lt;g1&gt;hub.example.com/shop-backend:1.0.0&lt;/g1&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Every element from the sample should be used at least once in training sets;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T160107Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>Every element from the sample should be used at least once in training sets.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Every element from the sample should be used exactly once in testing sets;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T160059Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>Every element from the sample should be used exactly once in testing sets.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Example</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174846Z" creationid="cApSt" creationdate="20210818T174846Z">
        <seg>Example</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Example 1</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>Example 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Example 2</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>Example 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Example 3</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>Example 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Example 4</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>Example 4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Example 5</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172045Z" creationid="cApSt" creationdate="20210809T172045Z">
        <seg>Example 5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Example Maven script for &lt;g1&gt;registration&lt;/g1&gt; and &lt;g2&gt;orders&lt;/g2&gt; is:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>Example Maven script for &lt;g1&gt;registration&lt;/g1&gt; and &lt;g2&gt;orders&lt;/g2&gt; is:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Example of how the decorator ignores arguments that are not defined in a function that does not accept &lt;g1&gt;**kwargs&lt;/g1&gt; - illustrating requirement 5:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174857Z" creationid="cApSt" creationdate="20210818T174857Z">
        <seg>Example of how the decorator ignores arguments that are not defined in a function that does not accept &lt;g1&gt;**kwargs&lt;/g1&gt; - illustrating requirement 5:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Example of how the decorator should preserve the order of the positional arguments of the decorated function - illustrating requirement 2:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174856Z" creationid="cApSt" creationdate="20210818T174856Z">
        <seg>Example of how the decorator should preserve the order of the positional arguments of the decorated function - illustrating requirement 2:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Example of leaving open the possibility to explicitly pass the arguments to a decorated function - illustrating requirement 3:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174857Z" creationid="cApSt" creationdate="20210818T174857Z">
        <seg>Example of leaving open the possibility to explicitly pass the arguments to a decorated function - illustrating requirement 3:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Example of using aiohttp library:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174906Z" creationid="cApSt" creationdate="20210818T174906Z">
        <seg>Example of using aiohttp library:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Example payload of a response looks like this:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174837Z" creationid="cApSt" creationdate="20210818T174837Z">
        <seg>Example payload of a response looks like this:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Example tests:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174915Z" creationid="cApSt" creationdate="20210818T174915Z">
        <seg>Example tests:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Example with a single address:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174905Z" creationid="cApSt" creationdate="20210818T174905Z">
        <seg>Example with a single address:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Example with multiple addresses:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174906Z" creationid="cApSt" creationdate="20210818T174906Z">
        <seg>Example with multiple addresses:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Examples</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>Examples</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Export the component as "LikeDislikeComponent" (&lt;g1&gt;export class LikeDislikeComponent&lt;/g1&gt;).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="souto" changedate="20210820T104859Z" creationid="cApSt" creationdate="20210809T172038Z">
        <seg>Export the component as "LikeDislikeComponent" (&lt;g1&gt;export class LikeDislikeComponent&lt;/g1&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Finish the &lt;g1&gt;Agent&lt;/g1&gt; and &lt;g2&gt;Ticket&lt;/g2&gt; classes, implementing the &lt;g3&gt;properties&lt;/g3&gt; needed.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174913Z" creationid="cApSt" creationdate="20210818T174913Z">
        <seg>Finish the &lt;g1&gt;Agent&lt;/g1&gt; and &lt;g2&gt;Ticket&lt;/g2&gt; classes, implementing the &lt;g3&gt;properties&lt;/g3&gt; needed.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For categorical variables:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T150125Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>For category variables:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For example, given &lt;g1&gt;indices = [1, 2, 3]&lt;/g1&gt; and K = 2, one of the possible accepted results may be &lt;g2&gt;[[1, 2], [3], [3], [1, 2]]&lt;/g2&gt;
(first fold contains &lt;g3&gt;[1, 2]&lt;/g3&gt; as the training set and &lt;g4&gt;[3]&lt;/g4&gt; as the testing set and second fold contains &lt;g5&gt;[3]&lt;/g5&gt; as the training set and &lt;g6&gt;[1, 2]&lt;/g6&gt; as the testing set).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174848Z" creationid="cApSt" creationdate="20210818T174848Z">
        <seg>For example, given &lt;g1&gt;indices = [1, 2, 3]&lt;/g1&gt; and K = 2, one of the possible accepted results may be &lt;g2&gt;[[1, 2], [3], [3], [1, 2]]&lt;/g2&gt;
(first fold contains &lt;g3&gt;[1, 2]&lt;/g3&gt; as the training set and &lt;g4&gt;[3]&lt;/g4&gt; as the testing set and second fold contains &lt;g5&gt;[3]&lt;/g5&gt; as the training set and &lt;g6&gt;[1, 2]&lt;/g6&gt; as the testing set).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For example, given array A as follows:
{{ example }}
the function should return {{ example_output }}.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>For example, given array A as follows:
{{ example }}
the function should return {{ example_output }}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For example, given the tree shown in the figure above,
the function should return 4, as explained above.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174922Z" creationid="cApSt" creationdate="20210818T174922Z">
        <seg>For example, given the tree shown in the figure above,
the function should return 4, as explained above.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For example, say the request &lt;g13&gt;GET /messages&lt;/g13&gt; has a total of 100 messages.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174837Z" creationid="cApSt" creationdate="20210818T174837Z">
        <seg>For example, say the request &lt;g13&gt;GET /messages&lt;/g13&gt; has a total of 100 messages.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For example, the figure below shows a binary tree consisting of six nodes.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174920Z" creationid="cApSt" creationdate="20210818T174920Z">
        <seg>For example, the figure below shows a binary tree consisting of six nodes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For example, the tree shown in the above figure has four visible nodes:
namely, those with values 5, 10, 20 and 21.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174921Z" creationid="cApSt" creationdate="20210818T174921Z">
        <seg>For example, the tree shown in the above figure has four visible nodes:
namely, those with values 5, 10, 20 and 21.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For example, the tree shown in the above figure is of height 2.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174921Z" creationid="cApSt" creationdate="20210818T174921Z">
        <seg>For example, the tree shown in the above figure is of height 2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For instance,
"&lt;g2&gt;int a + foobar()&lt;/g2&gt;", "&lt;g3&gt;#include &lt;foobar.h&gt;&lt;/g3&gt;" and "&lt;g4&gt;foobar*10&lt;/g4&gt;" are valid
occurrences of the word "&lt;g5&gt;foobar&lt;/g5&gt;", while "&lt;g6&gt;foobar1000&lt;/g6&gt;", "&lt;g7&gt;Foobar&lt;/g7&gt;", "&lt;g8&gt;foobar_&lt;/g8&gt;"
and "&lt;g9&gt;1foobaria&lt;/g9&gt;" are not.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174906Z" creationid="cApSt" creationdate="20210818T174906Z">
        <seg>For instance,
"&lt;g2&gt;int a + foobar()&lt;/g2&gt;", "&lt;g3&gt;#include &lt;foobar.h&gt;&lt;/g3&gt;" and "&lt;g4&gt;foobar*10&lt;/g4&gt;" are valid
occurrences of the word "&lt;g5&gt;foobar&lt;/g5&gt;", while "&lt;g6&gt;foobar1000&lt;/g6&gt;", "&lt;g7&gt;Foobar&lt;/g7&gt;", "&lt;g8&gt;foobar_&lt;/g8&gt;"
and "&lt;g9&gt;1foobaria&lt;/g9&gt;" are not.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For numerical variables:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T150330Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>For number variables:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For simplicity, assume the following to be true:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T184010Z" creationid="cApSt" creationdate="20210818T174828Z">
        <seg>For simplicity, assume the following is true:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For simplicity, you don't have to write any input validation or error handling.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174913Z" creationid="cApSt" creationdate="20210818T174913Z">
        <seg>For simplicity, you don't have to write any input validation or error handling.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For the &lt;g1&gt;target&lt;/g1&gt; variable:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174845Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>For the &lt;g1&gt;target&lt;/g1&gt; variable:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For the &lt;g1&gt;test&lt;/g1&gt; stage there should be three jobs called &lt;g2&gt;registration&lt;/g2&gt;, &lt;g3&gt;payments&lt;/g3&gt; and &lt;g4&gt;orders&lt;/g4&gt;, which will start various testing suites.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>For the &lt;g1&gt;test&lt;/g1&gt; stage there should be three jobs called &lt;g2&gt;registration&lt;/g2&gt;, &lt;g3&gt;payments&lt;/g3&gt; and &lt;g4&gt;orders&lt;/g4&gt;, which will start various testing suites.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For the cases listed below the function should return an empty string:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174903Z" creationid="cApSt" creationdate="20210818T174903Z">
        <seg>For the cases listed below the function should return an empty string:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For the example dataframes displayed below:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174903Z" creationid="cApSt" creationdate="20210818T174903Z">
        <seg>For the example dataframes displayed below:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For the purpose of entering your own test cases, you can denote a tree recursively in the following way.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174922Z" creationid="cApSt" creationdate="20210818T174922Z">
        <seg>For the purpose of entering your own test cases, you can denote a tree recursively in the following way.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For the rest of the jobs you should use complementary commands, replacing the &lt;g1&gt;-Dtest&lt;/g1&gt; parameter's value with the name of the job.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>For the rest of the jobs you should use complementary commands, replacing the &lt;g1&gt;-Dtest&lt;/g1&gt; parameter's value with the name of the job.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For this sort of data:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174846Z" creationid="cApSt" creationdate="20210818T174846Z">
        <seg>For this sort of data:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>For this test assume that:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174854Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>For this test assume that:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Given S = "&lt;&lt;&lt;" the function should return 0.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>Given S = "&lt;&lt;&lt;" the function should return 0.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Given S = "^vv&lt;v", the function should return 2.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>Given S = "^vv&lt;v", the function should return 2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Given S = "v&gt;&gt;&gt;vv", the function should return 3.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>Given S = "v&gt;&gt;&gt;vv", the function should return 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Given tree T with the following structure:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174922Z" creationid="cApSt" creationdate="20210818T174922Z">
        <seg>Given tree T with the following structure:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>HTTP 200, if a user with the given login name exists and the given password matches that saved in the database.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210819T143109Z" creationid="cApSt" creationdate="20210818T174820Z">
        <seg>HTTP 200, if a user with the given login name exists and the given password matches the one saved in the database.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>HTTP 200, if the user is logged out successfully.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174820Z" creationid="cApSt" creationdate="20210818T174820Z">
        <seg>HTTP 200, if the user is logged out successfully.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>HTTP 201, if an article has been created.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174826Z" creationid="cApSt" creationdate="20210818T174826Z">
        <seg>HTTP 201, if an article has been created.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>HTTP 201, if the user has been created.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174818Z" creationid="cApSt" creationdate="20210818T174818Z">
        <seg>HTTP 201, if the user has been created.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>HTTP 400, if the body is empty;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174818Z" creationid="cApSt" creationdate="20210818T174818Z">
        <seg>HTTP 400, if the body is empty;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>HTTP 401, if a user with the given login name exists, but the password does not match that saved in the database for the corresponding user;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210819T143829Z" creationid="cApSt" creationdate="20210818T174819Z">
        <seg>HTTP 401, if a user with the given login name exists, but the password does not match the one saved in the database for that user;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>HTTP 401, if the provided token is invalid;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174826Z" creationid="cApSt" creationdate="20210818T174826Z">
        <seg>HTTP 401, if the provided token is invalid;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>HTTP 401, if the token is invalid;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174820Z" creationid="cApSt" creationdate="20210818T174820Z">
        <seg>HTTP 401, if the token is invalid;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>HTTP 404, if there is no user of the given login name in the database;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174819Z" creationid="cApSt" creationdate="20210818T174819Z">
        <seg>HTTP 404, if there is no user of the given login name in the database;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>HTTP 5xx error codes are considered errors and must not be returned.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174827Z" creationid="cApSt" creationdate="20210818T174827Z">
        <seg>HTTP 5xx error codes are considered errors and must not be returned.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Health-checking is a name for ensuring that given network service is responsive &amp; alive.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174905Z" creationid="cApSt" creationdate="20210818T174905Z">
        <seg>Health-checking is a name for ensuring that given network service is responsive &amp; alive.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Here are five rows picked at random from this file:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174857Z" creationid="cApSt" creationdate="20210818T174857Z">
        <seg>Here are five rows picked at random from this file:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Here are the names of the columns that should be included in the dataframe returned by the &lt;g1&gt;transform&lt;/g1&gt; method:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174900Z" creationid="cApSt" creationdate="20210818T174900Z">
        <seg>Here are the names of the columns that should be included in the dataframe returned by the &lt;g1&gt;transform&lt;/g1&gt; method:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Here is an example that shows how &lt;g2&gt;CustomStringEnumerator&lt;/g2&gt; will be used:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174843Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>Here is an example that shows how &lt;g2&gt;CustomStringEnumerator&lt;/g2&gt; will be used:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Hint</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174846Z" creationid="cApSt" creationdate="20210818T174846Z">
        <seg>Hint</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Hint: An enumerator usually remains valid for as long as the collection remains unchanged.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174845Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>Hint: An enumerator usually remains valid for as long as the collection remains unchanged.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Hints</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174838Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>Hints</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>However, your implementation of &lt;g2&gt;CustomStringEnumerator&lt;/g2&gt; should take into account all the properties of &lt;g3&gt;EnumeratorConfig&lt;/g3&gt;:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T142810Z" creationid="cApSt" creationdate="20210818T174844Z">
        <seg>However, your &lt;g2&gt;CustomStringEnumerator&lt;/g2&gt; should take into account all the properties of &lt;g3&gt;EnumeratorConfig&lt;/g3&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>IEnumerator IEnumerable.GetEnumerator()</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174844Z" creationid="cApSt" creationdate="20210818T174844Z">
        <seg>IEnumerator IEnumerable.GetEnumerator()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>If a new message is then added, the query with a cursor must still return the messages that were previously in places 11-20, even though they are actually 12-21 now.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174837Z" creationid="cApSt" creationdate="20210818T174837Z">
        <seg>If a new message is then added, the query with a cursor must still return the messages that were previously in places 11-20, even though they are actually 12-21 now.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>If a valid token is given in the request's headers, return:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174827Z" creationid="cApSt" creationdate="20210818T174827Z">
        <seg>If a valid token is given in the request's headers, return:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>If any of the properties is missing, the service should instead return a &lt;g1&gt;422&lt;/g1&gt; status code.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174835Z" creationid="cApSt" creationdate="20210818T174835Z">
        <seg>If any of the properties is missing, the service should instead return a &lt;g1&gt;422&lt;/g1&gt; status code.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>If no agent can be found by following our procedures then throw a &lt;g1&gt;NoAgentFoundException&lt;/g1&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>If no agent can be found by following our procedures then throw a &lt;g1&gt;NoAgentFoundException&lt;/g1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>If no query parameters are specified, this endpoint will return all messages sorted by internal DB index (propert &lt;g1&gt;id&lt;/g1&gt;), in descending order.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174836Z" creationid="cApSt" creationdate="20210818T174836Z">
        <seg>If no query parameters are specified, this endpoint will return all messages sorted by internal DB index (propert &lt;g1&gt;id&lt;/g1&gt;), in descending order.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>If such a case occurs, you must
make sure that none of tasks has been run.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172043Z" creationid="cApSt" creationdate="20210809T172043Z">
        <seg>If such a case occurs, you must
make sure that none of tasks has been run.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>If the execution order is &lt;g1&gt;2&lt;/g1&gt;, &lt;g2&gt;0&lt;/g2&gt;, &lt;g3&gt;3&lt;/g3&gt;, &lt;g4&gt;1&lt;/g4&gt;, &lt;g5&gt;5&lt;/g5&gt;, &lt;g6&gt;4&lt;/g6&gt;, then the response body should be:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172045Z" creationid="cApSt" creationdate="20210809T172045Z">
        <seg>If the execution order is &lt;g1&gt;2&lt;/g1&gt;, &lt;g2&gt;0&lt;/g2&gt;, &lt;g3&gt;3&lt;/g3&gt;, &lt;g4&gt;1&lt;/g4&gt;, &lt;g5&gt;5&lt;/g5&gt;, &lt;g6&gt;4&lt;/g6&gt;, then the response body should be:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>If the user from &lt;g1&gt;Example 1&lt;/g1&gt; creates the following articles:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174829Z" creationid="cApSt" creationdate="20210818T174829Z">
        <seg>If the user from &lt;g1&gt;Example 1&lt;/g1&gt; creates the following articles:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>If there are
multiple occurrences in one line, list the line only once.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174907Z" creationid="cApSt" creationdate="20210818T174907Z">
        <seg>If there are
multiple occurrences in one line, list the line only once.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>If there is more than one movie that meets the condition (e.g. more than one movie with the same highest average rating in &lt;g1&gt;method=by_rating&lt;/g1&gt;), the function should return the first movie in alphabetical order.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174903Z" creationid="cApSt" creationdate="20210818T174903Z">
        <seg>If there is more than one movie that meets the condition (e.g. more than one movie with the same highest average rating in &lt;g1&gt;method=by_rating&lt;/g1&gt;), the function should return the first movie in alphabetical order.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>If we add a user such as:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174828Z" creationid="cApSt" creationdate="20210818T174828Z">
        <seg>If we add a user such as:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>If you choose the latter approach, &lt;g1&gt;here&lt;/g1&gt; you will find all the equations you need to implement a least-squares method for calculating model parameters.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>If you choose the latter approach, &lt;g1&gt;here&lt;/g1&gt; you will find all the equations you need to implement a least-squares method for calculating model parameters.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>If you happen to execute &lt;g5&gt;TaskRunner.runTask&lt;/g5&gt; on a ID of a task
that is not recognized, the promise that is returned by the method will be rejected.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172043Z" creationid="cApSt" creationdate="20210809T172043Z">
        <seg>If you happen to execute &lt;g5&gt;TaskRunner.runTask&lt;/g5&gt; on a ID of a task
that is not recognized, the promise that is returned by the method will be rejected.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>If you would like to use lambda expression when registering the functions as UDFs, please remember that the function passed as an argument needs to have a different name.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174900Z" creationid="cApSt" creationdate="20210818T174900Z">
        <seg>If you would like to use lambda expression when registering the functions as UDFs, please remember that the function passed as an argument needs to have a different name.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Imagine a classic support system with incoming tickets and agents working on them.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174913Z" creationid="cApSt" creationdate="20210818T174913Z">
        <seg>Imagine a classic support system with incoming tickets and agents working on them.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Implement a function that is to perform health checking for a given list of service addresses.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174905Z" creationid="cApSt" creationdate="20210818T174905Z">
        <seg>Implement a function that is to perform health checking for a given list of service addresses.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Implement the method &lt;g1&gt;find(self, ticket: Ticket, agents: List[Agent])&lt;/g1&gt; with the two following policies:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174913Z" creationid="cApSt" creationdate="20210818T174913Z">
        <seg>Implement the method &lt;g1&gt;find(self, ticket: Ticket, agents: List[Agent])&lt;/g1&gt; with the two following policies:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Implement two policies for finding an available agent for a new ticket.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174913Z" creationid="cApSt" creationdate="20210818T174913Z">
        <seg>Implement two policies for finding an available agent for a new ticket.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>In a case where the decorated function does not accept an argument with a given name, and does not use &lt;g1&gt;**kwargs&lt;/g1&gt;, ignore that argument and do not pass it (see example 5).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174856Z" creationid="cApSt" creationdate="20210818T174856Z">
        <seg>In a case where the decorated function does not accept an argument with a given name, and does not use &lt;g1&gt;**kwargs&lt;/g1&gt;, ignore that argument and do not pass it (see example 5).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>In above equations m and l are numbers of unique values of X and Y respectively.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174834Z" creationid="cApSt" creationdate="20210818T174834Z">
        <seg>In above equations m and l are numbers of unique values of X and Y respectively.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>In addition to the above operations, the stack should also support ''transactions''
by implementing the following operations:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174915Z" creationid="cApSt" creationdate="20210818T174915Z">
        <seg>In addition to the above operations, the stack should also support ''transactions''
by implementing the following operations:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>In case service fails to respond within 0.5 second or HTTP code of response is not 200 OK, the service is to be considered unhealthy.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174905Z" creationid="cApSt" creationdate="20210818T174905Z">
        <seg>In case service fails to respond within 0.5 second or HTTP code of response is not 200 OK, the service is to be considered unhealthy.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>In order to succeed, your script ((&lt;x1/&gt;must&lt;x2/&gt;)) have exit status equal to &lt;g3&gt;0&lt;/g3&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174907Z" creationid="cApSt" creationdate="20210818T174907Z">
        <seg>In order to succeed, your script ((&lt;x1/&gt;must&lt;x2/&gt;)) have exit status equal to &lt;g3&gt;0&lt;/g3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>In particular, a tree consisting of only one node has height 0 and, conventionally, an empty tree has height -1.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174921Z" creationid="cApSt" creationdate="20210818T174921Z">
        <seg>In particular, a tree consisting of only one node has height 0 and, conventionally, an empty tree has height -1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>In the app they are implemented with &lt;g2&gt;AndroidSchedulers.mainThread()&lt;/g2&gt; for &lt;g3&gt;main&lt;/g3&gt; and &lt;g4&gt;Schedulers.io()&lt;/g4&gt; for &lt;g5&gt;background&lt;/g5&gt; threads.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>In the app they are implemented with &lt;g2&gt;AndroidSchedulers.mainThread()&lt;/g2&gt; for &lt;g3&gt;main&lt;/g3&gt; and &lt;g4&gt;Schedulers.io()&lt;/g4&gt; for &lt;g5&gt;background&lt;/g5&gt; threads.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>In the case of an error, you should display the error on the screen.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>In the case of an error, you should display the error on the screen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>In the folder data, there is an exemplary dataframe.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T145527Z" creationid="cApSt" creationdate="20210818T174846Z">
        <seg>In the folder data, there is an example dataframe.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>In this case you can modify the initial function name (e.g. change &lt;g1&gt;get_trend&lt;/g1&gt; to &lt;g2&gt;get_trend_unregistered&lt;/g2&gt;), just make sure that in the end, the function registered as UDF is named properly (in this case: &lt;g3&gt;get_trend&lt;/g3&gt;).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174900Z" creationid="cApSt" creationdate="20210818T174900Z">
        <seg>In this case you can modify the initial function name (e.g. change &lt;g1&gt;get_trend&lt;/g1&gt; to &lt;g2&gt;get_trend_unregistered&lt;/g2&gt;), just make sure that in the end, the function registered as UDF is named properly (in this case: &lt;g3&gt;get_trend&lt;/g3&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>In this example, your script should write nothing.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174911Z" creationid="cApSt" creationdate="20210818T174911Z">
        <seg>In this example, your script should write nothing.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>In this problem we consider binary trees, represented by pointer data structures.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174920Z" creationid="cApSt" creationdate="20210818T174920Z">
        <seg>In this problem we consider binary trees, represented by pointer data structures.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>In this task you are asked to divide dataset into such folds.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>In this task you are asked to divide dataset into such folds.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Initially, the first 10 are returned with a cursor for messages 11-20.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T201219Z" creationid="cApSt" creationdate="20210818T174837Z">
        <seg>To start with, the first 10 are returned with a cursor for messages 11-20.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Inject &lt;g1&gt;UsersService&lt;/g1&gt; into &lt;g2&gt;UsersController&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>Inject &lt;g1&gt;UsersService&lt;/g1&gt; into &lt;g2&gt;UsersController&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Inject the &lt;g1&gt;OrdersService&lt;/g1&gt; bean into the &lt;g2&gt;ordersService&lt;/g2&gt; field.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>Inject the &lt;g1&gt;OrdersService&lt;/g1&gt; bean into the &lt;g2&gt;ordersService&lt;/g2&gt; field.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Input guarantees</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174828Z" creationid="cApSt" creationdate="20210818T174828Z">
        <seg>Input guarantees</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Interfaces</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>Interfaces</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>It is considered to be invalid if the token was used to log the user out, or if it has never been created as a result of logging the user in.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T183822Z" creationid="cApSt" creationdate="20210818T174827Z">
        <seg>It is considered invalid if the token was used to log the user out, or if it has never been created as a result of logging the user in.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>It is entirely possible that a user has multiple valid tokens.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T183903Z" creationid="cApSt" creationdate="20210818T174827Z">
        <seg>It is entirely possible that a user has more than one valid token.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>It is supposed to
return an array that has the same length as the &lt;g3&gt;taskIds&lt;/g3&gt; array and that represents the order in which
the tasks have finished in the following way:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172043Z" creationid="cApSt" creationdate="20210809T172043Z">
        <seg>It is supposed to
return an array that has the same length as the &lt;g3&gt;taskIds&lt;/g3&gt; array and that represents the order in which
the tasks have finished in the following way:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>It must not
change the order of elements in the collection being enumerated.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T143857Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>It must not
change the order of elements in the collection being listed.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>It should call the &lt;g1&gt;onSubmit&lt;/g1&gt; handler when clicked.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174900Z" creationid="cApSt" creationdate="20210818T174900Z">
        <seg>It should call the &lt;g1&gt;onSubmit&lt;/g1&gt; handler when clicked.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>It should execute a command to install Maven: &lt;g2&gt;mvn install&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>It should execute a command to install Maven: &lt;g2&gt;mvn install&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>It should have its &lt;g3&gt;id&lt;/g3&gt; set to &lt;g4&gt;password-input&lt;/g4&gt; and &lt;g5&gt;type&lt;/g5&gt; attribute set to &lt;g6&gt;password&lt;/g6&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174901Z" creationid="cApSt" creationdate="20210818T174901Z">
        <seg>It should have its &lt;g3&gt;id&lt;/g3&gt; set to &lt;g4&gt;password-input&lt;/g4&gt; and &lt;g5&gt;type&lt;/g5&gt; attribute set to &lt;g6&gt;password&lt;/g6&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>It should have its &lt;g3&gt;id&lt;/g3&gt; set to &lt;g4&gt;username-input&lt;/g4&gt; and &lt;g5&gt;type&lt;/g5&gt; attribute set to &lt;g6&gt;text&lt;/g6&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174901Z" creationid="cApSt" creationdate="20210818T174901Z">
        <seg>It should have its &lt;g3&gt;id&lt;/g3&gt; set to &lt;g4&gt;username-input&lt;/g4&gt; and &lt;g5&gt;type&lt;/g5&gt; attribute set to &lt;g6&gt;text&lt;/g6&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>It should have two development services supporting &lt;g1&gt;alpine&lt;/g1&gt; OS in version &lt;g2&gt;3.9&lt;/g2&gt;:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174848Z" creationid="cApSt" creationdate="20210818T174848Z">
        <seg>It should have two development services supporting &lt;g1&gt;alpine&lt;/g1&gt; OS in version &lt;g2&gt;3.9&lt;/g2&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Its root contains the value 5, and the roots of its left and right subtrees have the values 3 and 10, respectively.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174920Z" creationid="cApSt" creationdate="20210818T174920Z">
        <seg>Its root contains the value 5, and the roots of its left and right subtrees have the values 3 and 10, respectively.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Let's assume that a request with &lt;g1&gt;four&lt;/g1&gt; task IDs was sent.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>Let's assume that a request with &lt;g1&gt;four&lt;/g1&gt; task IDs was sent.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Let's compare two agents:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>Let's compare two agents:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Let's make the same assumptions as in the first example apart from the execution order, which in this case
is: &lt;g1&gt;0&lt;/g1&gt;, &lt;g2&gt;1&lt;/g2&gt;, &lt;g3&gt;2&lt;/g3&gt;, &lt;g4&gt;3&lt;/g4&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>Let's make the same assumptions as in the first example apart from the execution order, which in this case
is: &lt;g1&gt;0&lt;/g1&gt;, &lt;g2&gt;1&lt;/g2&gt;, &lt;g3&gt;2&lt;/g3&gt;, &lt;g4&gt;3&lt;/g4&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Liking an already disliked article cancels the dislike:((&lt;x2/&gt;))</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172040Z" creationid="cApSt" creationdate="20210809T172040Z">
        <seg>Liking an already disliked article cancels the dislike:((&lt;x2/&gt;))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>List&lt;Item&gt; itemsBought(String username);

}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>List&lt;Item&gt; itemsBought(String username);

}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Loading data from an external source is considered a long-running operation, so you should also indicate loading progress with &lt;g2&gt;showLoading()&lt;/g2&gt; and &lt;g3&gt;hideLoading()&lt;/g3&gt; methods.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>Loading data from an external source is considered a long-running operation, so you should also indicate loading progress with &lt;g2&gt;showLoading()&lt;/g2&gt; and &lt;g3&gt;hideLoading()&lt;/g3&gt; methods.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Long-running operations should be executed on background threads, and view-related operations on the main thread.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>Long-running operations should be executed on background threads, and view-related operations on the main thread.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Make sure that the &lt;g1&gt;AppConfiguration&lt;/g1&gt; class is treated as a Spring configuration bean.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>Make sure that the &lt;g1&gt;AppConfiguration&lt;/g1&gt; class is treated as a Spring configuration bean.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Make sure the login form component is a default export.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174902Z" creationid="cApSt" creationdate="20210818T174902Z">
        <seg>Make sure the login form component is a default export.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Make sure to use &lt;g7&gt;long&lt;/g7&gt; syntax for port definitions and &lt;g8&gt;short&lt;/g8&gt; syntax for volume definitions.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174848Z" creationid="cApSt" creationdate="20210818T174848Z">
        <seg>Make sure to use &lt;g7&gt;long&lt;/g7&gt; syntax for port definitions and &lt;g8&gt;short&lt;/g8&gt; syntax for volume definitions.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Make sure you pass the &lt;g1&gt;username&lt;/g1&gt; variable to the &lt;g2&gt;totalItemsBought&lt;/g2&gt; call.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174913Z" creationid="cApSt" creationdate="20210818T174913Z">
        <seg>Make sure you pass the &lt;g1&gt;username&lt;/g1&gt; variable to the &lt;g2&gt;totalItemsBought&lt;/g2&gt; call.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>MaxLength = 10,</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174843Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>MaxLength = 10,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>MinLength = 3,</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174843Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>MinLength = 3,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Model-View-Presenter with RxJava2 and Kotlin</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>Model-View-Presenter with RxJava2 and Kotlin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>More formally, a path of length K is a sequence of nodes P&lt;x1/&gt;0&lt;x2/&gt;, P&lt;x3/&gt;1&lt;x4/&gt;, ..., P&lt;x5/&gt;K&lt;x6/&gt;,
such that node P&lt;x7/&gt;I + 1&lt;x8/&gt; is the root of the left or right subtree of P&lt;x9/&gt;I&lt;x10/&gt;, for 0 &lt;= I &lt; K.
For example, the sequence of nodes with values 5, 3, 21 is a path of length 2 in the tree from the above figure.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174921Z" creationid="cApSt" creationdate="20210818T174921Z">
        <seg>More formally, a path of length K is a sequence of nodes P&lt;x1/&gt;0&lt;x2/&gt;, P&lt;x3/&gt;1&lt;x4/&gt;, ..., P&lt;x5/&gt;K&lt;x6/&gt;,
such that node P&lt;x7/&gt;I + 1&lt;x8/&gt; is the root of the left or right subtree of P&lt;x9/&gt;I&lt;x10/&gt;, for 0 &lt;= I &lt; K.
For example, the sequence of nodes with values 5, 3, 21 is a path of length 2 in the tree from the above figure.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>More precisely, the server has to accept the following requests:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>More precisely, the server has to accept the following requests:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Most of the cases are in English but there are some in French.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>Most of the cases are in English but there are some in French.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Name the new binary columns using this schema: name of categorical variable + _ + level name.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T150214Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>Name the new binary columns using this pattern: name of category variable + _ + level name.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Note that &lt;g1&gt;OrdersService&lt;/g1&gt; is located in the &lt;g2&gt;com.codility.external&lt;/g2&gt; package, whereas your application uses the &lt;g3&gt;com.codility.app&lt;/g3&gt; package.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>Note that &lt;g1&gt;OrdersService&lt;/g1&gt; is located in the &lt;g2&gt;com.codility.external&lt;/g2&gt; package, whereas your application uses the &lt;g3&gt;com.codility.app&lt;/g3&gt; package.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Note that an occurrence of "&lt;g1&gt;foobar&lt;/g1&gt;" only counts as a word if it is either at the
beginning of the line or preceded by a non((-))word((-))constituent character, or, similarly,
if it is either at the end of the line or followed by a non((-))word((-))constituent character.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174906Z" creationid="cApSt" creationdate="20210818T174906Z">
        <seg>Note that an occurrence of "&lt;g1&gt;foobar&lt;/g1&gt;" only counts as a word if it is either at the
beginning of the line or preceded by a non((-))word((-))constituent character, or, similarly,
if it is either at the end of the line or followed by a non((-))word((-))constituent character.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Note that no transaction is in progress before the first &lt;g3&gt;begin()&lt;/g3&gt; call.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174915Z" creationid="cApSt" creationdate="20210818T174915Z">
        <seg>Note that no transaction is in progress before the first &lt;g3&gt;begin()&lt;/g3&gt; call.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Note that you cannot use built-in functions, e.g &lt;g1&gt;cov&lt;/g1&gt; and &lt;g2&gt;corrcoef&lt;/g2&gt; from the numpy package, for points two and three since we use distributions, not realizations to describe variables X and Y.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T200137Z" creationid="cApSt" creationdate="20210818T174834Z">
        <seg>Note that you cannot use built-in functions like &lt;g1&gt;cov&lt;/g1&gt; and &lt;g2&gt;corrcoef&lt;/g2&gt; from the numpy package for points two and three. This is because we use distributions, not realizations, to describe variables X and Y.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Notes</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>Notes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>On the other hand, when &lt;g1&gt;four&lt;/g1&gt; task IDs are provided in a request and one of them has not been registered
in the &lt;g2&gt;TaskRunner&lt;/g2&gt; service, then the response should have status code &lt;g3&gt;400&lt;/g3&gt; and &lt;g4&gt;no task should have been run&lt;/g4&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172104Z" creationid="cApSt" creationdate="20210809T172104Z">
        <seg>On the other hand, when &lt;g1&gt;four&lt;/g1&gt; task IDs are provided in a request and one of them has not been registered
in the &lt;g2&gt;TaskRunner&lt;/g2&gt; service, then the response should have status code &lt;g3&gt;400&lt;/g3&gt; and &lt;g4&gt;no task should have been run&lt;/g4&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>One agent can handle a maximum of three tickets.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>One agent can handle a maximum of three tickets.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>One type of cross((-))validation is the k((-))fold method.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>One type of cross((-))validation is the k((-))fold method.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Only one import is allowed: &lt;g1&gt;express&lt;/g1&gt; (v4.17.1).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>Only one import is allowed: &lt;g1&gt;express&lt;/g1&gt; (v4.17.1).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Orders in your system are stored in an external service called &lt;g1&gt;OrdersService&lt;/g1&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174911Z" creationid="cApSt" creationdate="20210818T174911Z">
        <seg>Orders in your system are stored in an external service called &lt;g1&gt;OrdersService&lt;/g1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Otherwise, return only public articles;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174827Z" creationid="cApSt" creationdate="20210818T174827Z">
        <seg>Otherwise, return only public articles;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>POST /api/runTasks</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>POST /api/runTasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Packages versions</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174903Z" creationid="cApSt" creationdate="20210818T174903Z">
        <seg>Packages versions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Place them within the main &lt;g1&gt;div&lt;/g1&gt; in the provided starting code.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174901Z" creationid="cApSt" creationdate="20210818T174901Z">
        <seg>Place them within the main &lt;g1&gt;div&lt;/g1&gt; in the provided starting code.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Please create the following three functions in the &lt;g1&gt;udfs.py&lt;/g1&gt; file:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174858Z" creationid="cApSt" creationdate="20210818T174858Z">
        <seg>Please create the following three functions in the &lt;g1&gt;udfs.py&lt;/g1&gt; file:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Please do not use direct scheduler imports in your solution; use the method provided in &lt;g6&gt;SchedulerFacade&lt;/g6&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>Please do not use direct scheduler imports in your solution; use the method provided in &lt;g6&gt;SchedulerFacade&lt;/g6&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Please implement &lt;g1&gt;Presenter&lt;/g1&gt; to satisfy the following requirements:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>Please implement &lt;g1&gt;Presenter&lt;/g1&gt; to satisfy the following requirements:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Please make sure that the columns are named correctly.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174900Z" creationid="cApSt" creationdate="20210818T174900Z">
        <seg>Please make sure that the columns are named correctly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Please make sure they are all present in your final solution.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>Please make sure they are all present in your final solution.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Prepare the &lt;g1&gt;OrdersService&lt;/g1&gt; bean (please refer to the signatures described above):</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>Prepare the &lt;g1&gt;OrdersService&lt;/g1&gt; bean (please refer to the signatures described above):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Probabilities in a third column add up to 1.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174833Z" creationid="cApSt" creationdate="20210818T174833Z">
        <seg>Probabilities in a third column add up to 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Probes use &lt;g1&gt;httpGet&lt;/g1&gt; requests;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174854Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>Probes use &lt;g1&gt;httpGet&lt;/g1&gt; requests;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Relying on internal "indexing" (&lt;g1&gt;id&lt;/g1&gt; field) of the data to ensures that adding new messages will not "break" the cursor.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T204848Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>Rely on internal "indexing" (&lt;g1&gt;id&lt;/g1&gt; field) of the data to make sure that adding new messages will not "break" the cursor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Request Body (JSON):</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174816Z" creationid="cApSt" creationdate="20210818T174816Z">
        <seg>Request Body (JSON):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Requests should be sent using GET method.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174905Z" creationid="cApSt" creationdate="20210818T174905Z">
        <seg>Requests should be sent using GET method.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Requirements</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>Requirements</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Requires a token in the request's headers.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174820Z" creationid="cApSt" creationdate="20210818T174820Z">
        <seg>Requires a token in the request's headers.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Response:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174818Z" creationid="cApSt" creationdate="20210818T174818Z">
        <seg>Response:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Response: HTTP 200:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174826Z" creationid="cApSt" creationdate="20210818T174826Z">
        <seg>Response: HTTP 200:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Restrictions</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>Restrictions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Returns {{ true_const }} if successful, or {{ false_const }} if no transaction is in progress.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174915Z" creationid="cApSt" creationdate="20210818T174915Z">
        <seg>Returns {{ true_const }} if successful, or {{ false_const }} if no transaction is in progress.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Sending second request with this &lt;g9&gt;next&lt;/g9&gt; value and &lt;g10&gt;count&lt;/g10&gt; 2 should returns the next 2 records: B and A.
-   If there is nothing to show in the &lt;g11&gt;next&lt;/g11&gt; cursor then the &lt;g12&gt;next&lt;/g12&gt; property must be set to the empty string.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T203653Z" creationid="cApSt" creationdate="20210818T174836Z">
        <seg>Sending a second request with this &lt;g9&gt;next&lt;/g9&gt; value and &lt;g10&gt;count&lt;/g10&gt; 2 should return the next 2 records: B and A.
-   If there is nothing to show in the &lt;g11&gt;next&lt;/g11&gt; cursor then the &lt;g12&gt;next&lt;/g12&gt; property must be set to the empty string.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Sending two consecutive login requests can be completed successfully, and the token returned by the first request does not become invalid as a result of the second request.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210819T143810Z" creationid="cApSt" creationdate="20210818T174827Z">
        <seg>Sending two login requests one after another can be completed successfully, and the token returned by the first request does not become invalid as a result of the second request.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Set check period to &lt;g1&gt;1&lt;/g1&gt; second;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174854Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>Set check period to &lt;g1&gt;1&lt;/g1&gt; second;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Set initial probe delay to &lt;g1&gt;10 seconds&lt;/g1&gt;;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174854Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>Set initial probe delay to &lt;g1&gt;10 seconds&lt;/g1&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Set initial probe delay to &lt;g1&gt;10&lt;/g1&gt; seconds;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174854Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>Set initial probe delay to &lt;g1&gt;10&lt;/g1&gt; seconds;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Set max probe failures to &lt;g1&gt;2&lt;/g1&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174854Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>Set max probe failures to &lt;g1&gt;2&lt;/g1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>So if client adds messages A, B, C, D (in that order) then by requesting &lt;g2&gt;GET /messages?count=2&lt;/g2&gt; they should get messages D and C.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T204643Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>So if a client adds messages A, B, C, D (in that order) then by requesting &lt;g2&gt;GET /messages?count=2&lt;/g2&gt; they should get messages D and C.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Solution sol = new Solution();</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174918Z" creationid="cApSt" creationdate="20210818T174918Z">
        <seg>Solution sol = new Solution();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Solution sol2 = new Solution();</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174918Z" creationid="cApSt" creationdate="20210818T174918Z">
        <seg>Solution sol2 = new Solution();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Solution sol2;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>Solution sol2;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Solution sol;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>Solution sol;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Solving this task requires from you editing the following three files.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>Solving this task requires from you editing the following three files.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Sorting by &lt;g1&gt;id&lt;/g1&gt; should result in the newest messages being shown first.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174838Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>Sorting by &lt;g1&gt;id&lt;/g1&gt; should result in the newest messages being shown first.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>StartWithCapitalLetter = true</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T143523Z" creationid="cApSt" creationdate="20210823T143523Z">
        <seg>StartWithCapitalLetter = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>StartWithCapitalLetter = true
};

// The custom enumerator will return strings that are longer than or equal to 3 characters
// and shorter than or equal to 10 characters, and start with a capital letter.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174843Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>StartWithCapitalLetter = true
};

// The custom enumerator will return strings that are longer than or equal to 3 characters
// and shorter than or equal to 10 characters, and start with a capital letter.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Task description</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174816Z" creationid="cApSt" creationdate="20210818T174816Z">
        <seg>Task description</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Task details</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>Task details</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The ''height'' of a binary tree is defined as the length of the longest possible path in the tree.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174921Z" creationid="cApSt" creationdate="20210818T174921Z">
        <seg>The ''height'' of a binary tree is defined as the length of the longest possible path in the tree.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The ''length'' of a path is the number of pointers it traverses.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174921Z" creationid="cApSt" creationdate="20210818T174921Z">
        <seg>The ''length'' of a path is the number of pointers it traverses.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;IP&lt;/g1&gt; value is located at the very beginning of each log entry and must be extracted.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T194752Z" creationid="cApSt" creationdate="20210818T174833Z">
        <seg>The &lt;g1&gt;IP&lt;/g1&gt; value is at the very beginning of each log entry and must be extracted.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;Period&lt;/g1&gt; column contains a date range in years as raw data using this format: &lt;g2&gt;(start_year-end_year)&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174858Z" creationid="cApSt" creationdate="20210818T174858Z">
        <seg>The &lt;g1&gt;Period&lt;/g1&gt; column contains a date range in years as raw data using this format: &lt;g2&gt;(start_year-end_year)&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;Species&lt;/g1&gt; column contains both English and Latin names as raw data using this format: &lt;g2&gt;English Name (Latin Name)&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174858Z" creationid="cApSt" creationdate="20210818T174858Z">
        <seg>The &lt;g1&gt;Species&lt;/g1&gt; column contains both English and Latin names as raw data using this format: &lt;g2&gt;English Name (Latin Name)&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;UsersController&lt;/g1&gt; class declares:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>The &lt;g1&gt;UsersController&lt;/g1&gt; class declares:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;UsersService&lt;/g1&gt; class declares:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>The &lt;g1&gt;UsersService&lt;/g1&gt; class declares:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;collected_from_year&lt;/g1&gt; column should use the &lt;g2&gt;get_start_year&lt;/g2&gt; function and the &lt;g3&gt;Period&lt;/g3&gt; column as input.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174859Z" creationid="cApSt" creationdate="20210818T174859Z">
        <seg>The &lt;g1&gt;collected_from_year&lt;/g1&gt; column should use the &lt;g2&gt;get_start_year&lt;/g2&gt; function and the &lt;g3&gt;Period&lt;/g3&gt; column as input.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;day&lt;/g1&gt; value is located in brackets in every log entry and must be extracted to have only a date value without a time: for example &lt;g2&gt;16/Feb/2020&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T194740Z" creationid="cApSt" creationdate="20210818T174832Z">
        <seg>The &lt;g1&gt;day&lt;/g1&gt; value is in brackets in every log entry and must be extracted to have only a date value without a time: for example &lt;g2&gt;16/Feb/2020&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;frontend&lt;/g1&gt; service should be exposed via an external network called &lt;g2&gt;frontend-ingress&lt;/g2&gt;, while the &lt;g3&gt;backend&lt;/g3&gt; and &lt;g4&gt;database&lt;/g4&gt; services should use a local network called &lt;g5&gt;database&lt;/g5&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174848Z" creationid="cApSt" creationdate="20210818T174848Z">
        <seg>The &lt;g1&gt;frontend&lt;/g1&gt; service should be exposed via an external network called &lt;g2&gt;frontend-ingress&lt;/g2&gt;, while the &lt;g3&gt;backend&lt;/g3&gt; and &lt;g4&gt;database&lt;/g4&gt; services should use a local network called &lt;g5&gt;database&lt;/g5&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;i&lt;/g1&gt;-th item of the array equals &lt;g2&gt;i&lt;/g2&gt; if all tasks from the &lt;g3&gt;taskIds&lt;/g3&gt; array with a lower index than &lt;g4&gt;i&lt;/g4&gt;
had been completed before the &lt;g5&gt;i&lt;/g5&gt;-th task was completed – in other words, when the &lt;g6&gt;0&lt;/g6&gt;th, &lt;g7&gt;1&lt;/g7&gt;st, &lt;g8&gt;2&lt;/g8&gt;nd,
..., &lt;g9&gt;(i - 1)&lt;/g9&gt;-th tasks finished before the &lt;g10&gt;i&lt;/g10&gt;-th task was finished;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172043Z" creationid="cApSt" creationdate="20210809T172043Z">
        <seg>The &lt;g1&gt;i&lt;/g1&gt;-th item of the array equals &lt;g2&gt;i&lt;/g2&gt; if all tasks from the &lt;g3&gt;taskIds&lt;/g3&gt; array with a lower index than &lt;g4&gt;i&lt;/g4&gt;
had been completed before the &lt;g5&gt;i&lt;/g5&gt;-th task was completed – in other words, when the &lt;g6&gt;0&lt;/g6&gt;th, &lt;g7&gt;1&lt;/g7&gt;st, &lt;g8&gt;2&lt;/g8&gt;nd,
..., &lt;g9&gt;(i - 1)&lt;/g9&gt;-th tasks finished before the &lt;g10&gt;i&lt;/g10&gt;-th task was finished;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;onSubmit&lt;/g1&gt; handler is passed through the props to the component and accepts two parameters: &lt;g2&gt;username&lt;/g2&gt; and &lt;g3&gt;password&lt;/g3&gt; (in that order).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174900Z" creationid="cApSt" creationdate="20210818T174900Z">
        <seg>The &lt;g1&gt;onSubmit&lt;/g1&gt; handler is passed through the props to the component and accepts two parameters: &lt;g2&gt;username&lt;/g2&gt; and &lt;g3&gt;password&lt;/g3&gt; (in that order).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;onSubmit&lt;/g1&gt; handler should be called when the Submit button is clicked.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174901Z" creationid="cApSt" creationdate="20210818T174901Z">
        <seg>The &lt;g1&gt;onSubmit&lt;/g1&gt; handler should be called when the Submit button is clicked.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;onSubmit&lt;/g1&gt; handler should be called with &lt;g2&gt;username&lt;/g2&gt; and &lt;g3&gt;password&lt;/g3&gt; passed as parameters.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174901Z" creationid="cApSt" creationdate="20210818T174901Z">
        <seg>The &lt;g1&gt;onSubmit&lt;/g1&gt; handler should be called with &lt;g2&gt;username&lt;/g2&gt; and &lt;g3&gt;password&lt;/g3&gt; passed as parameters.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;password&lt;/g1&gt; input should update its &lt;g2&gt;value&lt;/g2&gt; attribute on being changed with the entered password.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174901Z" creationid="cApSt" creationdate="20210818T174901Z">
        <seg>The &lt;g1&gt;password&lt;/g1&gt; input should update its &lt;g2&gt;value&lt;/g2&gt; attribute on being changed with the entered password.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;preprocess_data&lt;/g1&gt; function accepts one argument:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174846Z" creationid="cApSt" creationdate="20210818T174846Z">
        <seg>The &lt;g1&gt;preprocess_data&lt;/g1&gt; function accepts one argument:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;runTask&lt;/g1&gt; method is asynchronous and returns a promise which might resolve after a random period of time.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172043Z" creationid="cApSt" creationdate="20210809T172043Z">
        <seg>The &lt;g1&gt;runTask&lt;/g1&gt; method is asynchronous and returns a promise which might resolve after a random period of time.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;species&lt;/g1&gt; column should use the &lt;g2&gt;get_english_name&lt;/g2&gt; function and the &lt;g3&gt;Species&lt;/g3&gt; column as input.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174859Z" creationid="cApSt" creationdate="20210818T174859Z">
        <seg>The &lt;g1&gt;species&lt;/g1&gt; column should use the &lt;g2&gt;get_english_name&lt;/g2&gt; function and the &lt;g3&gt;Species&lt;/g3&gt; column as input.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;totalItemsBought&lt;/g1&gt; method should implement the following contract:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174913Z" creationid="cApSt" creationdate="20210818T174913Z">
        <seg>The &lt;g1&gt;totalItemsBought&lt;/g1&gt; method should implement the following contract:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;trend&lt;/g1&gt; column should use the &lt;g2&gt;get_trend&lt;/g2&gt; function and the &lt;g3&gt;Annual percentage change&lt;/g3&gt; column as input.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174900Z" creationid="cApSt" creationdate="20210818T174900Z">
        <seg>The &lt;g1&gt;trend&lt;/g1&gt; column should use the &lt;g2&gt;get_trend&lt;/g2&gt; function and the &lt;g3&gt;Annual percentage change&lt;/g3&gt; column as input.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g1&gt;username&lt;/g1&gt; input should update its &lt;g2&gt;value&lt;/g2&gt; attribute on being changed with the entered username.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174901Z" creationid="cApSt" creationdate="20210818T174901Z">
        <seg>The &lt;g1&gt;username&lt;/g1&gt; input should update its &lt;g2&gt;value&lt;/g2&gt; attribute on being changed with the entered username.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g3&gt;Authentication&lt;/g3&gt; header value takes the &lt;g4&gt;Bearer &lt;TOKEN&gt;&lt;/g4&gt; format.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>The &lt;g3&gt;Authentication&lt;/g3&gt; header value takes the &lt;g4&gt;Bearer &lt;TOKEN&gt;&lt;/g4&gt; format.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g3&gt;check_similar_users&lt;/g3&gt; function returns True if users with ids: &lt;g4&gt;users_id_x&lt;/g4&gt;, &lt;g5&gt;user_id_y&lt;/g5&gt; are similar based on ratings dataframe and False otherwise.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174903Z" creationid="cApSt" creationdate="20210818T174903Z">
        <seg>The &lt;g3&gt;check_similar_users&lt;/g3&gt; function returns True if users with ids: &lt;g4&gt;users_id_x&lt;/g4&gt;, &lt;g5&gt;user_id_y&lt;/g5&gt; are similar based on ratings dataframe and False otherwise.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The &lt;g4&gt;frontend&lt;/g4&gt; service should expose its port &lt;g5&gt;8080&lt;/g5&gt; from the container to a publicly exposed port &lt;g6&gt;80&lt;/g6&gt; via the TCP protocol.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174848Z" creationid="cApSt" creationdate="20210818T174848Z">
        <seg>The &lt;g4&gt;frontend&lt;/g4&gt; service should expose its port &lt;g5&gt;8080&lt;/g5&gt; from the container to a publicly exposed port &lt;g6&gt;80&lt;/g6&gt; via the TCP protocol.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The API must contain two endpoints:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174835Z" creationid="cApSt" creationdate="20210818T174835Z">
        <seg>The API must contain two endpoints:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The API should support the following requests:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174816Z" creationid="cApSt" creationdate="20210818T174816Z">
        <seg>The API should support the following requests:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The Apache log has the following example content:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174831Z" creationid="cApSt" creationdate="20210818T174831Z">
        <seg>The Apache log has the following example content:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The Deployment is configured to deploy a minimum of &lt;g1&gt;three&lt;/g1&gt; Pod replicas;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174853Z" creationid="cApSt" creationdate="20210818T174853Z">
        <seg>The Deployment is configured to deploy a minimum of &lt;g1&gt;three&lt;/g1&gt; Pod replicas;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The Deployment will be created in the &lt;g1&gt;default&lt;/g1&gt; namespace (it is not expected to define its own namespace);</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174854Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>The Deployment will be created in the &lt;g1&gt;default&lt;/g1&gt; namespace (it is not expected to define its own namespace);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The Deployment will run on Kubernetes v1.16.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174854Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>The Deployment will run on Kubernetes v1.16.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The Docker image is named &lt;g1&gt;java-tests-repository&lt;/g1&gt; and is accessible via Docker Hub with a tag, &lt;g2&gt;latest&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>The Docker image is named &lt;g1&gt;java-tests-repository&lt;/g1&gt; and is accessible via Docker Hub with a tag, &lt;g2&gt;latest&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The DynamoDB table holding notes is named &lt;g1&gt;user-notes&lt;/g1&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>The DynamoDB table holding notes is named &lt;g1&gt;user-notes&lt;/g1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The DynamoDB table holding the authentication data is named &lt;g1&gt;token-email-lookup&lt;/g1&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>The DynamoDB table holding the authentication data is named &lt;g1&gt;token-email-lookup&lt;/g1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The IT team needs statistics on &lt;g1&gt;requests per day&lt;/g1&gt; and &lt;g2&gt;requests per IP&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T190938Z" creationid="cApSt" creationdate="20210818T174830Z">
        <seg>The IT team needs statisitcs on &lt;g1&gt;requests per day&lt;/g1&gt; and &lt;g2&gt;requests per IP&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The Submit button should be disabled (&lt;g1&gt;disabled&lt;/g1&gt; attribute set to &lt;g2&gt;true&lt;/g2&gt;) until both &lt;g3&gt;username&lt;/g3&gt; and &lt;g4&gt;password&lt;/g4&gt; fields are filled.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174901Z" creationid="cApSt" creationdate="20210818T174901Z">
        <seg>The Submit button should be disabled (&lt;g1&gt;disabled&lt;/g1&gt; attribute set to &lt;g2&gt;true&lt;/g2&gt;) until both &lt;g3&gt;username&lt;/g3&gt; and &lt;g4&gt;password&lt;/g4&gt; fields are filled.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The application team has asked you to deploy the created container image, which has to be deployed on a Kubernetes cluster.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174853Z" creationid="cApSt" creationdate="20210818T174853Z">
        <seg>The application team has asked you to deploy the created container image, which has to be deployed on a Kubernetes cluster.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The application uses &lt;g1&gt;React 16.13.1&lt;/g1&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174901Z" creationid="cApSt" creationdate="20210818T174901Z">
        <seg>The application uses &lt;g1&gt;React 16.13.1&lt;/g1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The array consists of IDs of the tasks that need to be run.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172043Z" creationid="cApSt" creationdate="20210809T172043Z">
        <seg>The array consists of IDs of the tasks that need to be run.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The articles might appear in any order.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174827Z" creationid="cApSt" creationdate="20210818T174827Z">
        <seg>The articles might appear in any order.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The attribute &lt;g1&gt;x&lt;/g1&gt; holds the integer contained in the root, whereas
attributes &lt;g2&gt;l&lt;/g2&gt; and &lt;g3&gt;r&lt;/g3&gt; hold the left and right subtrees of the binary tree, respectively.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174920Z" creationid="cApSt" creationdate="20210818T174920Z">
        <seg>The attribute &lt;g1&gt;x&lt;/g1&gt; holds the integer contained in the root, whereas
attributes &lt;g2&gt;l&lt;/g2&gt; and &lt;g3&gt;r&lt;/g3&gt; hold the left and right subtrees of the binary tree, respectively.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The body of a response with status codes 400–499 can be empty.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174827Z" creationid="cApSt" creationdate="20210818T174827Z">
        <seg>The body of a response with status codes 400–499 can be empty.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The client may provide the following query parameters:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174836Z" creationid="cApSt" creationdate="20210818T174836Z">
        <seg>The client may provide the following query parameters:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The container exposes port &lt;g1&gt;3000&lt;/g1&gt;;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174853Z" creationid="cApSt" creationdate="20210818T174853Z">
        <seg>The container exposes port &lt;g1&gt;3000&lt;/g1&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The container must have configured a LivenessProbe, which makes requests to the &lt;g1&gt;/healthz&lt;/g1&gt; endpoint on port &lt;g2&gt;3000&lt;/g2&gt;;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174853Z" creationid="cApSt" creationdate="20210818T174853Z">
        <seg>The container must have configured a LivenessProbe, which makes requests to the &lt;g1&gt;/healthz&lt;/g1&gt; endpoint on port &lt;g2&gt;3000&lt;/g2&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The container must have configured a ReadinessProbe, which makes requests to the &lt;g1&gt;/&lt;/g1&gt; endpoint on port &lt;g2&gt;3000&lt;/g2&gt;;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174854Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>The container must have configured a ReadinessProbe, which makes requests to the &lt;g1&gt;/&lt;/g1&gt; endpoint on port &lt;g2&gt;3000&lt;/g2&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The correct output for this statistic using the above example log is:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174832Z" creationid="cApSt" creationdate="20210818T174832Z">
        <seg>The correct output for this statistic using the above example log is:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The data structure will hold positive integers within the range &lt;x2/&gt;1..1,000,000,000&lt;x3/&gt;
and should implement the following ''stack operations'':</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>The data structure will hold positive integers within the range &lt;x2/&gt;1..1,000,000,000&lt;x3/&gt;
and should implement the following ''stack operations'':</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The dataset consists of following variables:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>The dataset consists of following variables:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The decorated function should retain the same name, docstring and other features that it had before it was decorated.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174856Z" creationid="cApSt" creationdate="20210818T174856Z">
        <seg>The decorated function should retain the same name, docstring and other features that it had before it was decorated.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The decorator should leave the possibility to explicitly pass the arguments to a decorated function (see example 4).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174856Z" creationid="cApSt" creationdate="20210818T174856Z">
        <seg>The decorator should leave the possibility to explicitly pass the arguments to a decorated function (see example 4).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The decorator should preserve the function's positional arguments and their order (see examples 2 and 3).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174856Z" creationid="cApSt" creationdate="20210818T174856Z">
        <seg>The decorator should preserve the function's positional arguments and their order (see examples 2 and 3).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The decorator should provide the decorated function with all keyword arguments passed to the decorator (see example 1).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174856Z" creationid="cApSt" creationdate="20210818T174856Z">
        <seg>The decorator should provide the decorated function with all keyword arguments passed to the decorator (see example 1).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The default count of records will be 10.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174836Z" creationid="cApSt" creationdate="20210818T174836Z">
        <seg>The default count of records will be 10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The default export should be an &lt;g1&gt;http.Server&lt;/g1&gt; object that is returned by &lt;g2&gt;app.listen()&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174828Z" creationid="cApSt" creationdate="20210818T174828Z">
        <seg>The default export should be an &lt;g1&gt;http.Server&lt;/g1&gt; object that is returned by &lt;g2&gt;app.listen()&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The directory being searched may contain various files with different extensions (or no
extension at all).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174907Z" creationid="cApSt" creationdate="20210818T174907Z">
        <seg>The directory being searched may contain various files with different extensions (or no
extension at all).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The directory looks as follows:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174910Z" creationid="cApSt" creationdate="20210818T174910Z">
        <seg>The directory looks as follows:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The endpoint should return status code &lt;g1&gt;400&lt;/g1&gt; if &lt;g2&gt;taskIds&lt;/g2&gt; contains at least one ID of a task that is not
registered in &lt;g3&gt;TaskRunner&lt;/g3&gt; (you can check this by using the &lt;g4&gt;hasTask&lt;/g4&gt; method).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172043Z" creationid="cApSt" creationdate="20210809T172043Z">
        <seg>The endpoint should return status code &lt;g1&gt;400&lt;/g1&gt; if &lt;g2&gt;taskIds&lt;/g2&gt; contains at least one ID of a task that is not
registered in &lt;g3&gt;TaskRunner&lt;/g3&gt; (you can check this by using the &lt;g4&gt;hasTask&lt;/g4&gt; method).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The endpoints are expected to behave as follows:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174838Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>The endpoints are expected to behave as follows:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The execution order of the given task was: &lt;g4&gt;0&lt;/g4&gt;, &lt;g5&gt;2&lt;/g5&gt;, &lt;g6&gt;1&lt;/g6&gt;, &lt;g7&gt;3&lt;/g7&gt;, which means that:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>The execution order of the given task was: &lt;g4&gt;0&lt;/g4&gt;, &lt;g5&gt;2&lt;/g5&gt;, &lt;g6&gt;1&lt;/g6&gt;, &lt;g7&gt;3&lt;/g7&gt;, which means that:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The file you are editing should be written as a valid YAML file;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174854Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>The file you are editing should be written as a valid YAML file;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The files have the following content:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174907Z" creationid="cApSt" creationdate="20210818T174907Z">
        <seg>The files have the following content:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The first key of the dictionary should be named &lt;g2&gt;Intercept&lt;/g2&gt;, and all other keys should have the same name as the respective variable.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174853Z" creationid="cApSt" creationdate="20210818T174853Z">
        <seg>The first key of the dictionary should be named &lt;g2&gt;Intercept&lt;/g2&gt;, and all other keys should have the same name as the respective variable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The first statistic is &lt;g1&gt;requests per day&lt;/g1&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174832Z" creationid="cApSt" creationdate="20210818T174832Z">
        <seg>The first statistic is &lt;g1&gt;requests per day&lt;/g1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The form should consist of two input fields: one for &lt;g1&gt;username&lt;/g1&gt; and one for &lt;g2&gt;password&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174900Z" creationid="cApSt" creationdate="20210818T174900Z">
        <seg>The form should consist of two input fields: one for &lt;g1&gt;username&lt;/g1&gt; and one for &lt;g2&gt;password&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The function &lt;g1&gt;get_recommendations&lt;/g1&gt; takes as arguments three dataframes: &lt;g2&gt;users&lt;/g2&gt;, &lt;g3&gt;movies&lt;/g3&gt; and &lt;g4&gt;ratings&lt;/g4&gt;, with the following structure:.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174902Z" creationid="cApSt" creationdate="20210818T174902Z">
        <seg>The function &lt;g1&gt;get_recommendations&lt;/g1&gt; takes as arguments three dataframes: &lt;g2&gt;users&lt;/g2&gt;, &lt;g3&gt;movies&lt;/g3&gt; and &lt;g4&gt;ratings&lt;/g4&gt;, with the following structure:.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The function is expected to return a dictionary where service address (as given in the argument) is a key and value is either True if service is healthy or False otherwise.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174905Z" creationid="cApSt" creationdate="20210818T174905Z">
        <seg>The function is expected to return a dictionary where service address (as given in the argument) is a key and value is either True if service is healthy or False otherwise.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The function returns a tuple (X, y), where:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T145442Z" creationid="cApSt" creationdate="20210818T174846Z">
        <seg>The function returns an ordered list (X, y), where:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The function should:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>The function should:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The function will preprocess the data by performing the following steps:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T150100Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>The function will preprocess the data by following these steps:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The goal of this task is to provide an API with two endpoints: one for creating messages using the POST method and the other for reading a list of them.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174834Z" creationid="cApSt" creationdate="20210818T174834Z">
        <seg>The goal of this task is to provide an API with two endpoints: one for creating messages using the POST method and the other for reading a list of them.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The headers are available in the &lt;g2&gt;event.headers&lt;/g2&gt; object.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>The headers are available in the &lt;g2&gt;event.headers&lt;/g2&gt; object.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The idea
is to partition the original sample into a training set (used for learning) and a testing set (used for validation).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T155249Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>The idea
is to divide the original sample into a training set (used for learning) and a testing set (used for validation).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The implementation phase has been finished and your role is to build a GitLab CI pipeline for testing that application.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>The implementation phase has been finished and your role is to build a GitLab CI pipeline for testing that application.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The input file &lt;g1&gt;birds.csv&lt;/g1&gt; contains data from the UK Department for Environment, Food and Rural Affairs and shows
the annual change in the number of birds of each species living in the United Kingdom.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174857Z" creationid="cApSt" creationdate="20210818T174857Z">
        <seg>The input file &lt;g1&gt;birds.csv&lt;/g1&gt; contains data from the UK Department for Environment, Food and Rural Affairs and shows
the annual change in the number of birds of each species living in the United Kingdom.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The lambda function is later exposed through the API Gateway and serves as an HTTP request handler.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>The lambda function is later exposed through the API Gateway and serves as an HTTP request handler.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The latter is a string with a valid domain name with port, e.g. localhost:8000.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174905Z" creationid="cApSt" creationdate="20210818T174905Z">
        <seg>The latter is a string with a valid domain name with port, e.g. localhost:8000.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The maximum value of the &lt;g1&gt;taskIds&lt;/g1&gt; array's length is &lt;g2&gt;200&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172043Z" creationid="cApSt" creationdate="20210809T172043Z">
        <seg>The maximum value of the &lt;g1&gt;taskIds&lt;/g1&gt; array's length is &lt;g2&gt;200&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The next three arguments are: &lt;g1&gt;full name&lt;/g1&gt;, &lt;g2&gt;year&lt;/g2&gt; and &lt;g3&gt;method&lt;/g3&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174902Z" creationid="cApSt" creationdate="20210818T174902Z">
        <seg>The next three arguments are: &lt;g1&gt;full name&lt;/g1&gt;, &lt;g2&gt;year&lt;/g2&gt; and &lt;g3&gt;method&lt;/g3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The node with value 1 is not visible because there is a node with
value 10 on the path from the root to that node.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174921Z" creationid="cApSt" creationdate="20210818T174921Z">
        <seg>The node with value 1 is not visible because there is a node with
value 10 on the path from the root to that node.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The node with value 3 is not visible because its value is lower
than that of the root, which has value 5.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174921Z" creationid="cApSt" creationdate="20210818T174921Z">
        <seg>The node with value 3 is not visible because its value is lower
than that of the root, which has value 5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The notes and authentication data are stored in DynamoDB tables.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>The notes and authentication data are stored in DynamoDB tables.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The order of lines does not matter; they can be sorted in any way.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174907Z" creationid="cApSt" creationdate="20210818T174907Z">
        <seg>The order of lines does not matter; they can be sorted in any way.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The output for &lt;g1&gt;get_recommendations(users, movies, ratings, full_name='Ryan James',method='by_popularity', year=1995)&lt;/g1&gt; would be &lt;g2&gt;'Toy Story (1995)'&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174904Z" creationid="cApSt" creationdate="20210818T174904Z">
        <seg>The output for &lt;g1&gt;get_recommendations(users, movies, ratings, full_name='Ryan James',method='by_popularity', year=1995)&lt;/g1&gt; would be &lt;g2&gt;'Toy Story (1995)'&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The output for &lt;g1&gt;get_recommendations(users, movies, ratings, full_name='Ryan James',method='by_rating', year=1995)&lt;/g1&gt; would be &lt;g2&gt;'GoldenEye (1995)'&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174904Z" creationid="cApSt" creationdate="20210818T174904Z">
        <seg>The output for &lt;g1&gt;get_recommendations(users, movies, ratings, full_name='Ryan James',method='by_rating', year=1995)&lt;/g1&gt; would be &lt;g2&gt;'GoldenEye (1995)'&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The output for &lt;g1&gt;get_recommendations(users, movies, ratings, full_name='Ryan James',method='by_similar_users', year=1995)&lt;/g1&gt; would be &lt;g2&gt;'Postino, Il (1994)'&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174905Z" creationid="cApSt" creationdate="20210818T174905Z">
        <seg>The output for &lt;g1&gt;get_recommendations(users, movies, ratings, full_name='Ryan James',method='by_similar_users', year=1995)&lt;/g1&gt; would be &lt;g2&gt;'Postino, Il (1994)'&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The path to the log file is passed as the first parameter to the script (the initial solution stores the log file path in the &lt;g1&gt;LOG_FILE&lt;/g1&gt; variable).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T190950Z" creationid="cApSt" creationdate="20210818T174831Z">
        <seg>The path to the log file is passed as the first parameter to the script (the first solution stores the log file path in the &lt;g1&gt;LOG_FILE&lt;/g1&gt; variable).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The payload body of this request will look like this:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174835Z" creationid="cApSt" creationdate="20210818T174835Z">
        <seg>The payload body of this request will look like this:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The reading endpoint should be paginated with cursor-based pagination (for more details take a look at "Hints" section).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174835Z" creationid="cApSt" creationdate="20210818T174835Z">
        <seg>The reading endpoint should be paginated with cursor-based pagination (for more details take a look at "Hints" section).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The request will return a successful response with status code &lt;g1&gt;201&lt;/g1&gt; and no payload.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174835Z" creationid="cApSt" creationdate="20210818T174835Z">
        <seg>The request will return a successful response with status code &lt;g1&gt;201&lt;/g1&gt; and no payload.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The response body can be empty.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174818Z" creationid="cApSt" creationdate="20210818T174818Z">
        <seg>The response body can be empty.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The response body should be an array:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>The response body should be an array:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The response body should be in the shape of:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174820Z" creationid="cApSt" creationdate="20210818T174820Z">
        <seg>The response body should be in the shape of:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The result depends on the token.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174826Z" creationid="cApSt" creationdate="20210818T174826Z">
        <seg>The result depends on the token.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The right subtree of the node containing the value 10, as well as the left and right subtrees of the nodes containing the values 1, 20 and 21, are empty trees.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174920Z" creationid="cApSt" creationdate="20210818T174920Z">
        <seg>The right subtree of the node containing the value 10, as well as the left and right subtrees of the nodes containing the values 1, 20 and 21, are empty trees.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The second statistic is &lt;g1&gt;requests per IP&lt;/g1&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174832Z" creationid="cApSt" creationdate="20210818T174832Z">
        <seg>The second statistic is &lt;g1&gt;requests per IP&lt;/g1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The sequence of nodes with values 10, 1 is a path of length 1.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174921Z" creationid="cApSt" creationdate="20210818T174921Z">
        <seg>The sequence of nodes with values 10, 1 is a path of length 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The sequence of nodes with values 20, 3, 21 is not a valid path.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174921Z" creationid="cApSt" creationdate="20210818T174921Z">
        <seg>The sequence of nodes with values 20, 3, 21 is not a valid path.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The services should start in the following order: &lt;g1&gt;database&lt;/g1&gt;, &lt;g2&gt;backend&lt;/g2&gt;, &lt;g3&gt;frontend&lt;/g3&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174848Z" creationid="cApSt" creationdate="20210818T174848Z">
        <seg>The services should start in the following order: &lt;g1&gt;database&lt;/g1&gt;, &lt;g2&gt;backend&lt;/g2&gt;, &lt;g3&gt;frontend&lt;/g3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The sizes of the pairs of testing sets may differ by no more than 1.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>The sizes of the pairs of testing sets may differ by no more than 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The styling and layout of the components is not assessed.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174901Z" creationid="cApSt" creationdate="20210818T174901Z">
        <seg>The styling and layout of the components is not assessed.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The table consists of a &lt;g1&gt;Partition key&lt;/g1&gt; (&lt;g2&gt;user&lt;/g2&gt;) and a &lt;g3&gt;Sort key&lt;/g3&gt; (&lt;g4&gt;create_date&lt;/g4&gt;).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>The table consists of a &lt;g1&gt;Partition key&lt;/g1&gt; (&lt;g2&gt;user&lt;/g2&gt;) and a &lt;g3&gt;Sort key&lt;/g3&gt; (&lt;g4&gt;create_date&lt;/g4&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The table has a &lt;g4&gt;Partition key&lt;/g4&gt; on the &lt;g5&gt;token field&lt;/g5&gt; and also a helper &lt;g6&gt;GlobalSecondaryIndex&lt;/g6&gt; on the &lt;g7&gt;email&lt;/g7&gt; field.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>The table has a &lt;g4&gt;Partition key&lt;/g4&gt; on the &lt;g5&gt;token field&lt;/g5&gt; and also a helper &lt;g6&gt;GlobalSecondaryIndex&lt;/g6&gt; on the &lt;g7&gt;email&lt;/g7&gt; field.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The table has two fields: &lt;g2&gt;token&lt;/g2&gt; and &lt;g3&gt;email&lt;/g3&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>The table has two fields: &lt;g2&gt;token&lt;/g2&gt; and &lt;g3&gt;email&lt;/g3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The task here is to implement a function that will be checking status of few net services.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174905Z" creationid="cApSt" creationdate="20210818T174905Z">
        <seg>The task here is to implement a function that will be checking status of few net services.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The task uses following versions of dependencies:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T204913Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>The task uses the following versions of dependencies:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The token should be added as an &lt;g1&gt;authentication-header&lt;/g1&gt; header to a request, wherever applicable.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174827Z" creationid="cApSt" creationdate="20210818T174827Z">
        <seg>The token should be added as an &lt;g1&gt;authentication-header&lt;/g1&gt; header to a request, wherever applicable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The token that was passed on becomes invalid.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174820Z" creationid="cApSt" creationdate="20210818T174820Z">
        <seg>The token that was passed on becomes invalid.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The trees from the above two figures can be denoted as:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174922Z" creationid="cApSt" creationdate="20210818T174922Z">
        <seg>The trees from the above two figures can be denoted as:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The values in some of the columns may be missing, so you must handle this properly.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>The values in some of the columns may be missing, so you must handle this properly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The view is always available;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>The view is always available;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The view is defined by the following interface:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>The view is defined by the following interface:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>The view is never nullable.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>The view is never nullable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Then, if we perform this sequence of actions:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T184226Z" creationid="cApSt" creationdate="20210818T174829Z">
        <seg>Then, if we perform this series of actions:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Then, in the same file &lt;g1&gt;udfs.py&lt;/g1&gt;, please register these functions as PySpark UDF functions (under the same names as Python functions) so they can be used in PySpark.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174859Z" creationid="cApSt" creationdate="20210818T174859Z">
        <seg>Then, in the same file &lt;g1&gt;udfs.py&lt;/g1&gt;, please register these functions as PySpark UDF functions (under the same names as Python functions) so they can be used in PySpark.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>There is more than one way to achieve this; however, your partition should fulfill the following conditions:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T155542Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>There is more than one way to achieve this, but your division should do the following:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>There is no service that utilizes HTTPS - every one uses plain HTTP.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174905Z" creationid="cApSt" creationdate="20210818T174905Z">
        <seg>There is no service that utilizes HTTPS - every one uses plain HTTP.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>There should also be a Submit button.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174900Z" creationid="cApSt" creationdate="20210818T174900Z">
        <seg>There should also be a Submit button.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>These rules are specified in the &lt;g5&gt;EnumeratorConfig&lt;/g5&gt; class.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174843Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>These rules are specified in the &lt;g5&gt;EnumeratorConfig&lt;/g5&gt; class.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>They are all present in your initial solution.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>They are all present in your initial solution.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>This approach is used for issues detection, warnings about failures or even automated restarts.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174905Z" creationid="cApSt" creationdate="20210818T174905Z">
        <seg>This approach is used for issues detection, warnings about failures or even automated restarts.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>This endpoint will create a message stored in the local SQLite DB by calling provided &lt;g1&gt;saveMessage&lt;/g1&gt; function.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174835Z" creationid="cApSt" creationdate="20210818T174835Z">
        <seg>This endpoint will create a message stored in the local SQLite DB by calling provided &lt;g1&gt;saveMessage&lt;/g1&gt; function.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>This is possible when the &lt;g3&gt;id&lt;/g3&gt; is set by the database incrementally.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174838Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>This is possible when the &lt;g3&gt;id&lt;/g3&gt; is set by the database incrementally.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>This means that if your script is stored in &lt;g2&gt;solution.sh&lt;/g2&gt;, it can be called as &lt;g3&gt;bash solution.sh /var/log/access.log&lt;/g3&gt;, and should analyze this specific log file.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174831Z" creationid="cApSt" creationdate="20210818T174831Z">
        <seg>This means that if your script is stored in &lt;g2&gt;solution.sh&lt;/g2&gt;, it can be called as &lt;g3&gt;bash solution.sh /var/log/access.log&lt;/g3&gt;, and should analyze this specific log file.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>This method accepts a raw dataframe as an input and should use the functions created above to transform the data to the following format:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174859Z" creationid="cApSt" creationdate="20210818T174859Z">
        <seg>This method accepts a raw dataframe as an input and should use the functions created above to transform the data to the following format:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>This might be just an &lt;g1&gt;id&lt;/g1&gt; of the last record or encoded structure.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174838Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>This might be just an &lt;g1&gt;id&lt;/g1&gt; of the last record or encoded structure.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Those elements are fetched from an external data source with RxJava &lt;g1&gt;Single&lt;/g1&gt;:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>Those elements are fetched from an external data source with RxJava &lt;g1&gt;Single&lt;/g1&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Thus, the response should have status code &lt;g1&gt;200&lt;/g1&gt; and the body should be an array:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>Thus, the response should have status code &lt;g1&gt;200&lt;/g1&gt; and the body should be an array:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Ticket:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174913Z" creationid="cApSt" creationdate="20210818T174913Z">
        <seg>Ticket:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>To fit a model to the data, you can either use built-in functions or calculate the parameters of the model from scratch.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>To fit a model to the data, you can either use built-in functions or calculate the parameters of the model from scratch.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>To query the &lt;g1&gt;user-notes&lt;/g1&gt; table with the user email, you should get it from &lt;g2&gt;token-email-lookup&lt;/g2&gt; once, reading the token from the HTTP request.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>To query the &lt;g1&gt;user-notes&lt;/g1&gt; table with the user email, you should get it from &lt;g2&gt;token-email-lookup&lt;/g2&gt; once, reading the token from the HTTP request.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Token-based authentication</seg>
      </tuv>
      <tuv lang="en-xx" changeid="souto" changedate="20210820T124229Z" creationid="cApSt" creationdate="20210818T174816Z">
        <seg>Token-based authentication</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Tokens are passed to the lambda through the &lt;g1&gt;Authentication&lt;/g1&gt; HTTP request header.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>Tokens are passed to the lambda through the &lt;g1&gt;Authentication&lt;/g1&gt; HTTP request header.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Transaction blocks can be nested; a &lt;g2&gt;begin()&lt;/g2&gt; can be issued inside another existing block.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174915Z" creationid="cApSt" creationdate="20210818T174915Z">
        <seg>Transaction blocks can be nested; a &lt;g2&gt;begin()&lt;/g2&gt; can be issued inside another existing block.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Treat variables as categorical when &lt;g1&gt;dtype = 'category'&lt;/g1&gt; and as numerical when &lt;g2&gt;dtype = 'float64'&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T150604Z" creationid="cApSt" creationdate="20210818T174846Z">
        <seg>Category variables are those where &lt;g1&gt;dtype = 'category'&lt;/g1&gt; and number variables are those where &lt;g2&gt;dtype = 'float64'&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Two random variables are independent if for each possible value x for X and for each possible value y for Y</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174833Z" creationid="cApSt" creationdate="20210818T174833Z">
        <seg>Two random variables are independent if for each possible value x for X and for each possible value y for Y</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Under the hood, &lt;g4&gt;CustomStringEnumerator&lt;/g4&gt; filters elements
of the collection according to the provided rules.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T142651Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>&lt;g4&gt;CustomStringEnumerator&lt;/g4&gt; filters elements
of the collection according to the provided rules.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Use &lt;g1&gt;console.log&lt;/g1&gt; and &lt;g2&gt;console.error&lt;/g2&gt; for debugging purposes.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T183919Z" creationid="cApSt" creationdate="20210818T174828Z">
        <seg>Use &lt;g1&gt;console.log&lt;/g1&gt; and &lt;g2&gt;console.error&lt;/g2&gt; for debugging.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Use Deployment object from apiGroup &lt;g1&gt;apps/v1&lt;/g1&gt;;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174854Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>Use Deployment object from apiGroup &lt;g1&gt;apps/v1&lt;/g1&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Use a &lt;g1&gt;default&lt;/g1&gt; section to define globally a script which will be executed before all jobs.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>Use a &lt;g1&gt;default&lt;/g1&gt; section to define globally a script which will be executed before all jobs.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Use a button click event handler for this purpose.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174901Z" creationid="cApSt" creationdate="20210818T174901Z">
        <seg>Use a button click event handler for this purpose.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Use it in the &lt;g1&gt;getNumberOfItemsBought&lt;/g1&gt; method to count the number of items bought by the given user.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>Use it in the &lt;g1&gt;getNumberOfItemsBought&lt;/g1&gt; method to count the number of items bought by the given user.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Use it in the &lt;g1&gt;totalItemsBought&lt;/g1&gt; method to fetch the number of items bought by the given user.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174913Z" creationid="cApSt" creationdate="20210818T174913Z">
        <seg>Use it in the &lt;g1&gt;totalItemsBought&lt;/g1&gt; method to fetch the number of items bought by the given user.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Use it to build a pipeline with two defined stages: &lt;g3&gt;compile&lt;/g3&gt; and &lt;g4&gt;test&lt;/g4&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>Use it to build a pipeline with two defined stages: &lt;g3&gt;compile&lt;/g3&gt; and &lt;g4&gt;test&lt;/g4&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Users can cancel their dislike by clicking again on the dislike button:((&lt;x2/&gt;))</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172040Z" creationid="cApSt" creationdate="20210809T172040Z">
        <seg>Users can cancel their dislike by clicking again on the dislike button:((&lt;x2/&gt;))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Users can cancel their like by clicking again on the like button:((&lt;x2/&gt;))</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172040Z" creationid="cApSt" creationdate="20210809T172040Z">
        <seg>Users can cancel their like by clicking again on the like button:((&lt;x2/&gt;))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Users can dislike an article, by clicking the dislike button:((&lt;x2/&gt;))</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T180733Z" creationid="cApSt" creationdate="20210809T172039Z">
        <seg>Users can dislike an article by clicking the dislike button:((&lt;x2/&gt;))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Users can like an article, by clicking the like button:((&lt;x2/&gt;))</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T180630Z" creationid="cApSt" creationdate="20210809T172039Z">
        <seg>Users can like an article by clicking the like button:((&lt;x2/&gt;))</seg>
      </tuv>
    </tu>
    <tu>
      <note>This is a note.</note>
      <tuv lang="en">
        <seg>Using Angular (v4), create a Like/Dislike component for news articles.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="souto" changedate="20210819T195634Z">
        <seg>Using Angular (v4), create a Like/Dislike component for news articles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>We want to describe the relationship between &lt;g1&gt;Price&lt;/g1&gt; (which will be a dependent variable in the model) and all other variables (predictors) using a linear regression model.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>We want to describe the relationship between &lt;g1&gt;Price&lt;/g1&gt; (which will be a dependent variable in the model) and all other variables (predictors) using a linear regression model.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>When building the linear regression model, you should handle missing data using a listwise deletion method: exclude an entire record from the analysis if any single value is missing (&lt;g2&gt;hint&lt;/g2&gt;: &lt;g3&gt;dropna()&lt;/g3&gt; method from pandas).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>When building the linear regression model, you should handle missing data using a listwise deletion method: exclude an entire record from the analysis if any single value is missing (&lt;g2&gt;hint&lt;/g2&gt;: &lt;g3&gt;dropna()&lt;/g3&gt; method from pandas).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>When the Submit button is clicked, &lt;g1&gt;onSubmit&lt;/g1&gt; handler should be called.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174901Z" creationid="cApSt" creationdate="20210818T174901Z">
        <seg>When the Submit button is clicked, &lt;g1&gt;onSubmit&lt;/g1&gt; handler should be called.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Who is the least flexible agent?</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>Who is the least flexible agent?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Word((-))constituent characters are letters, digits and underscores.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174906Z" creationid="cApSt" creationdate="20210818T174906Z">
        <seg>Word((-))constituent characters are letters, digits and underscores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Wrapping inputs and the Submit button in the &lt;g2&gt;form&lt;/g2&gt; element is not needed.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174901Z" creationid="cApSt" creationdate="20210818T174901Z">
        <seg>Wrapping inputs and the Submit button in the &lt;g2&gt;form&lt;/g2&gt; element is not needed.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Write a Bash script that searches all &lt;g1&gt;.c&lt;/g1&gt; files in the current directory (and its
subdirectories, recursively) for occurrences of the word "&lt;g2&gt;foobar&lt;/g2&gt;".</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174906Z" creationid="cApSt" creationdate="20210818T174906Z">
        <seg>Write a Bash script that searches all &lt;g1&gt;.c&lt;/g1&gt; files in the current directory (and its
subdirectories, recursively) for occurrences of the word "&lt;g2&gt;foobar&lt;/g2&gt;".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Write a Kubernetes Deployment definition according to the expectations listed below:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174853Z" creationid="cApSt" creationdate="20210818T174853Z">
        <seg>Write a Kubernetes Deployment definition according to the expectations listed below:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Write a class &lt;g1&gt;Solution&lt;/g1&gt; that implements a stack data structure.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>Write a class &lt;g1&gt;Solution&lt;/g1&gt; that implements a stack data structure.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Write a decorator that satisfies the following requirements:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174854Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>Write a decorator that satisfies the following requirements:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Write a function &lt;g1&gt;{{ default_function_name }}&lt;/g1&gt; that,
given a string S denoting the directions of the arrows,
returns the minimum number of arrows that must be rotated
to make them all point in the same direction.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>Write a function &lt;g1&gt;{{ default_function_name }}&lt;/g1&gt; that,
given a string S denoting the directions of the arrows,
returns the minimum number of arrows that must be rotated
to make them all point in the same direction.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Write a function:
{{ function_signature }}
that, given a binary tree T consisting of N nodes,
returns its number of visible nodes.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174922Z" creationid="cApSt" creationdate="20210818T174922Z">
        <seg>Write a function:
{{ function_signature }}
that, given a binary tree T consisting of N nodes,
returns its number of visible nodes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Write a function:
{{ function_signature }}
that, given an array A consisting of N integers, returns the {{ aggr_str&lt;x1/&gt;v.aggregator&lt;x2/&gt; }} all</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172041Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>Write a function:
{{ function_signature }}
that, given an array A consisting of N integers, returns the {{ aggr_str&lt;x1/&gt;v.aggregator&lt;x2/&gt; }} all</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Write a function:
{{ function_signature }}
that, given an array of integers &lt;g1&gt;indices&lt;/g1&gt; which contains the indices of elements in a data sample and an integer K which indicates the number of folds to generate,
returns an array that contains the arrays of folds (&lt;g2&gt;J&lt;/g2&gt;((-))th training indices and &lt;g3&gt;J&lt;/g3&gt;((-))th testing indices are stored respectively as its &lt;g4&gt;2 * J&lt;/g4&gt; and &lt;g5&gt;2 * J + 1&lt;/g5&gt; elements).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T160049Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>Write a function:
{{ function_signature }}
that, given an array of integers &lt;g1&gt;indices&lt;/g1&gt; which contains the indices of elements in a data sample and an integer K which indicates the number of folds to create,
returns an array that contains the arrays of folds (&lt;g2&gt;J&lt;/g2&gt;((-))th training indices and &lt;g3&gt;J&lt;/g3&gt;((-))th testing indices are stored as its &lt;g4&gt;2 * J&lt;/g4&gt; and &lt;g5&gt;2 * J + 1&lt;/g5&gt; elements).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Write a method &lt;g1&gt;check_independence&lt;/g1&gt; that for a given &lt;g2&gt;distr_table&lt;/g2&gt; returns a dictionary of length 3, where</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174833Z" creationid="cApSt" creationdate="20210818T174833Z">
        <seg>Write a method &lt;g1&gt;check_independence&lt;/g1&gt; that for a given &lt;g2&gt;distr_table&lt;/g2&gt; returns a dictionary of length 3, where</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Write a method named &lt;g1&gt;analyse_and_fit_lrm()&lt;/g1&gt; which takes one argument (a path to a dataset) and returns a dictionary of length 2 with the following objects (the order and names of the objects should be the same as below):</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>Write a method named &lt;g1&gt;analyse_and_fit_lrm()&lt;/g1&gt; which takes one argument (a path to a dataset) and returns a dictionary of length 2 with the following objects (the order and names of the objects should be the same as below):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Write three Python functions, register them as PySpark UDF functions and use them to produce an output dataframe.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174857Z" creationid="cApSt" creationdate="20210818T174857Z">
        <seg>Write three Python functions, register them as PySpark UDF functions and use them to produce an output dataframe.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>X is a pandas DataFrame obtained after performing the preprocessing of numerical and categorical variables and after dropping the target column;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T154242Z" creationid="cApSt" creationdate="20210818T174846Z">
        <seg>X is a pandas DataFrame after the preprocessing of the number and category variables, and after dropping the target column;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You are creating a notebook application.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>You are creating a notebook application.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You are given a dataset, &lt;g1&gt;realest.csv&lt;/g1&gt;, which contains information about house prices in the suburbs of Chicago.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>You are given a dataset, &lt;g1&gt;realest.csv&lt;/g1&gt;, which contains information about house prices in the suburbs of Chicago.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You are given a string representing a sequence of N arrows, each pointing in one of the four cardinal directions:
up ('^'), down ('v'), left ('&lt;') or right ('&gt;').</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>You are given a string representing a sequence of N arrows, each pointing in one of the four cardinal directions:
up ('^'), down ('v'), left ('&lt;') or right ('&gt;').</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You are given a table &lt;g1&gt;distr_table&lt;/g1&gt; with a joint probability distribution of two random variables X and Y, for example</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174833Z" creationid="cApSt" creationdate="20210818T174833Z">
        <seg>You are given a table &lt;g1&gt;distr_table&lt;/g1&gt; with a joint probability distribution of two random variables X and Y, for example</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You are implementing a screen in an app in which a list of elements is displayed.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>You are implementing a screen in an app in which a list of elements is displayed.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You are working on a site and need to perform Apache access log analysis.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T194902Z" creationid="cApSt" creationdate="20210818T174830Z">
        <seg>You are working on a site and need to do an Apache access log analysis.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You are working with the Spring Framework version 5.1.7 and Java 8.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174913Z" creationid="cApSt" creationdate="20210818T174913Z">
        <seg>You are working with the Spring Framework version 5.1.7 and Java 8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You are writing an endpoint that returns the total number of items bought in your online store by a given user.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174911Z" creationid="cApSt" creationdate="20210818T174911Z">
        <seg>You are writing an endpoint that returns the total number of items bought in your online store by a given user.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You can access it by calling:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174846Z" creationid="cApSt" creationdate="20210818T174846Z">
        <seg>You can access it by calling:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You can access the dataset using the path &lt;g1&gt;./data/realest.csv&lt;/g1&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174852Z" creationid="cApSt" creationdate="20210818T174852Z">
        <seg>You can access the dataset using the path &lt;g1&gt;./data/realest.csv&lt;/g1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You can assume that:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>You can assume that:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You can find more information about it [&lt;x1/&gt;https://en.wikipedia.org/wiki/Cross-validation_(statistics)|here&lt;x2/&gt;].</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>You can find more information about it [&lt;x1/&gt;https://en.wikipedia.org/wiki/Cross-validation_(statistics)|here&lt;x2/&gt;].</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You can focus on returning the notes first and sort them later; the operations are scored separately.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>You can focus on returning the notes first and sort them later; the operations are scored separately.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You can store data in a cursor in any way you want as long as the endpoint behaves as required.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174838Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>You can store data in a cursor in any way you want as long as the endpoint behaves as required.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You can use function &lt;g2&gt;check_similar_users&lt;/g2&gt; or create own implementation.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174903Z" creationid="cApSt" creationdate="20210818T174903Z">
        <seg>You can use function &lt;g2&gt;check_similar_users&lt;/g2&gt; or create own implementation.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You can use it for testing purposes.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T182842Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>You can use it for testing.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You can use the following libraries:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174905Z" creationid="cApSt" creationdate="20210818T174905Z">
        <seg>You can use the following libraries:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You do not have to implement this feature, i.e. you
do not have to detect changes to the collection.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T143006Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>You do not have to create this feature. In other words, you
do not have to detect changes to the collection.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You do not need to create or modify this class.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T142659Z" creationid="cApSt" creationdate="20210818T174844Z">
        <seg>You do not need to create or change this class.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You have been provided with a Docker image with tests implemented in Java.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>You have been provided with a Docker image with tests implemented in Java.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You may expect at least &lt;g1&gt;1&lt;/g1&gt; task ID to be sent in the request's payload.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>You may expect at least &lt;g1&gt;1&lt;/g1&gt; task ID to be sent in the request's payload.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You need to output two statistics, limited to the top 10 results and sorted numerically by quantity from highest to lowest value without leading blanks and that lines with greater key
values appear earlier in the output instead of later.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T185541Z" creationid="cApSt" creationdate="20210818T174831Z">
        <seg>You need to output two statistics. They should be limited to the top 10 results, sorted numerically by quantity from highest to lowest value without leading spaces, and lines with greater key values should appear earlier in the output instead of later.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You should focus only on implementing the requirements.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T180822Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>You should focus only on completing the requirements.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You should implement your function to work also with different &lt;g1&gt;distr_table&lt;/g1&gt;s than a given as an example.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T200232Z" creationid="cApSt" creationdate="20210818T174834Z">
        <seg>You should make your function work with different &lt;g1&gt;distr_table&lt;/g1&gt;s as well as the one given as an example.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You will be provided with a &lt;g1&gt;TaskRunner&lt;/g1&gt; service which has the following methods:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172043Z" creationid="cApSt" creationdate="20210809T172043Z">
        <seg>You will be provided with a &lt;g1&gt;TaskRunner&lt;/g1&gt; service which has the following methods:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>You work as a software developer and your goal is to implement a class called &lt;g1&gt;CustomStringEnumerator&lt;/g1&gt; which will
encapsulate the logic responsible for filtering the collection of strings.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T143431Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>You work as a software developer and your goal is to create a class called &lt;g1&gt;CustomStringEnumerator&lt;/g1&gt; which will
cover the logic responsible for filtering the collection of strings.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your Spring context is already populated with the &lt;g1&gt;OrdersService&lt;/g1&gt; bean that implements the following interface:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>Your Spring context is already populated with the &lt;g1&gt;OrdersService&lt;/g1&gt; bean that implements the following interface:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your application is written with the Spring Framework.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>Your application is written with the Spring Framework.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your application team has developed a shop backend API, which runs on port &lt;g1&gt;3000&lt;/g1&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174853Z" creationid="cApSt" creationdate="20210818T174853Z">
        <seg>Your application team has developed a shop backend API, which runs on port &lt;g1&gt;3000&lt;/g1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your development team is building a new e-Commerce application.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>Your development team is building a new e-Commerce application.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your script should list all valid occurrences on the standard output, in the
following format: &lt;g1&gt;[file_path]:[line_number]:[line_content]&lt;/g1&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174907Z" creationid="cApSt" creationdate="20210818T174907Z">
        <seg>Your script should list all valid occurrences on the standard output, in the
following format: &lt;g1&gt;[file_path]:[line_number]:[line_content]&lt;/g1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your script should output both results one after the other, and each row must have &lt;g1&gt;QUANTITY FIELD&lt;/g1&gt; format, with either space or tabulator as separator.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174831Z" creationid="cApSt" creationdate="20210818T174831Z">
        <seg>Your script should output both results one after the other, and each row must have &lt;g1&gt;QUANTITY FIELD&lt;/g1&gt; format, with either space or tabulator as separator.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your script should write to standard output the following content:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174909Z" creationid="cApSt" creationdate="20210818T174909Z">
        <seg>Your script should write to standard output the following content:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your search should
be case((-))sensitive (that applies both to filenames and the word "&lt;g3&gt;foobar&lt;/g3&gt;").</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174906Z" creationid="cApSt" creationdate="20210818T174906Z">
        <seg>Your search should
be case((-))sensitive (that applies both to filenames and the word "&lt;g3&gt;foobar&lt;/g3&gt;").</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your solution will be applied using &lt;g1&gt;kubectl apply -n default -f solution.yaml&lt;/g1&gt;;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174854Z" creationid="cApSt" creationdate="20210818T174854Z">
        <seg>Your solution will be applied using &lt;g1&gt;kubectl apply -n default -f solution.yaml&lt;/g1&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your task</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174831Z" creationid="cApSt" creationdate="20210818T174831Z">
        <seg>Your task</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your task is first to analyze the data, and then to apply a regression model to it.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>Your task is first to analyze the data, and then to apply a regression model to it.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your task is to create a simple login form component in React.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174900Z" creationid="cApSt" creationdate="20210818T174900Z">
        <seg>Your task is to create a simple login form component in React.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your task is to finish the implementation of the given lambda function.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>Your task is to finish the implementation of the given lambda function.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your task is to implement &lt;g1&gt;Presenter&lt;/g1&gt;, which will download the list of elements and display them on the screen.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>Your task is to implement &lt;g1&gt;Presenter&lt;/g1&gt;, which will download the list of elements and display them on the screen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your task is to implement a NodeJS server that exposes one single endpoint which is meant to run asynchronous
tasks.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>Your task is to implement a NodeJS server that exposes one single endpoint which is meant to run asynchronous
tasks.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your task is to implement a Web API that utilizes simple token-based authentication.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T183616Z" creationid="cApSt" creationdate="20210818T174816Z">
        <seg>Your task is to create a Web API that uses simple token-based authentication.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your task is to implement the AWS Lambda function that will perform basic authentication and return the notes of the authenticated user.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>Your task is to implement the AWS Lambda function that will perform basic authentication and return the notes of the authenticated user.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>Your task is to:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174911Z" creationid="cApSt" creationdate="20210818T174911Z">
        <seg>Your task is to:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>[</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174830Z" creationid="cApSt" creationdate="20210818T174830Z">
        <seg>[</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>[0, -1, -1, -1]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>[0, -1, -1, -1]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>[0, -1, 2, -1, 4, -1]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172045Z" creationid="cApSt" creationdate="20210809T172045Z">
        <seg>[0, -1, 2, -1, 4, -1]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>[0, 1, -1, 3]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>[0, 1, -1, 3]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>[0, 1, 2, 3]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>[0, 1, 2, 3]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>[&lt;x1/&gt;BR&lt;x2/&gt;]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172041Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>[&lt;x1/&gt;BR&lt;x2/&gt;]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>[{ "articles_id": "art1", "title": "tit1", "content": "c1", "visibility": "public", "user_id": "42" }]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174829Z" creationid="cApSt" creationdate="20210818T174829Z">
        <seg>[{ "articles_id": "art1", "title": "tit1", "content": "c1", "visibility": "public", "user_id": "42" }]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>],</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174838Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>],</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>```json
{</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174835Z" creationid="cApSt" creationdate="20210818T174835Z">
        <seg>```json
{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>a &lt;g1&gt;backend&lt;/g1&gt; service running a &lt;g2&gt;python&lt;/g2&gt; image in version &lt;g3&gt;3.7&lt;/g3&gt; with local directory &lt;g4&gt;backend&lt;/g4&gt; bound into &lt;g5&gt;/app/backend&lt;/g5&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174848Z" creationid="cApSt" creationdate="20210818T174848Z">
        <seg>a &lt;g1&gt;backend&lt;/g1&gt; service running a &lt;g2&gt;python&lt;/g2&gt; image in version &lt;g3&gt;3.7&lt;/g3&gt; with local directory &lt;g4&gt;backend&lt;/g4&gt; bound into &lt;g5&gt;/app/backend&lt;/g5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>a &lt;g1&gt;frontend&lt;/g1&gt; service running a &lt;g2&gt;node&lt;/g2&gt; image in version &lt;g3&gt;10.19.0&lt;/g3&gt; with local directory &lt;g4&gt;frontend&lt;/g4&gt; bound into &lt;g5&gt;/app/frontend&lt;/g5&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174848Z" creationid="cApSt" creationdate="20210818T174848Z">
        <seg>a &lt;g1&gt;frontend&lt;/g1&gt; service running a &lt;g2&gt;node&lt;/g2&gt; image in version &lt;g3&gt;10.19.0&lt;/g3&gt; with local directory &lt;g4&gt;frontend&lt;/g4&gt; bound into &lt;g5&gt;/app/frontend&lt;/g5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>a field &lt;g1&gt;ordersService&lt;/g1&gt;: &lt;g2&gt;private OrdersService ordersService&lt;/g2&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>a field &lt;g1&gt;ordersService&lt;/g1&gt;: &lt;g2&gt;private OrdersService ordersService&lt;/g2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>a field &lt;g1&gt;usersService&lt;/g1&gt;: &lt;g2&gt;private UsersService usersService&lt;/g2&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>a field &lt;g1&gt;usersService&lt;/g1&gt;: &lt;g2&gt;private UsersService usersService&lt;/g2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>a method &lt;g1&gt;getNumberOfItemsBought&lt;/g1&gt;: &lt;g2&gt;public int getNumberOfItemsBought(String username)&lt;/g2&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>a method &lt;g1&gt;getNumberOfItemsBought&lt;/g1&gt;: &lt;g2&gt;public int getNumberOfItemsBought(String username)&lt;/g2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>a method &lt;g1&gt;totalItemsBought&lt;/g1&gt;: &lt;g2&gt;public Map&lt;String, Integer&gt; totalItemsBought()&lt;/g2&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>a method &lt;g1&gt;totalItemsBought&lt;/g1&gt;: &lt;g2&gt;public Map&lt;String, Integer&gt; totalItemsBought()&lt;/g2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>after applying year filtering all movies are already rated by the user</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174903Z" creationid="cApSt" creationdate="20210818T174903Z">
        <seg>after applying year filtering all movies are already rated by the user</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>all articles with &lt;g1&gt;visibility: 'logged_in'&lt;/g1&gt;;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174827Z" creationid="cApSt" creationdate="20210818T174827Z">
        <seg>all articles with &lt;g1&gt;visibility: 'logged_in'&lt;/g1&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>all public articles;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174827Z" creationid="cApSt" creationdate="20210818T174827Z">
        <seg>all public articles;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>all strings passed on in request bodies are non-empty;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174828Z" creationid="cApSt" creationdate="20210818T174828Z">
        <seg>all strings passed on in request bodies are non-empty;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>and
&lt;g1&gt;[1, 0, 0, 1, 1]&lt;/g1&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174846Z" creationid="cApSt" creationdate="20210818T174846Z">
        <seg>and
&lt;g1&gt;[1, 0, 0, 1, 1]&lt;/g1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>and one database service:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174848Z" creationid="cApSt" creationdate="20210818T174848Z">
        <seg>and one database service:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>and the request's payload is a JSON-formatted object; for example:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172043Z" creationid="cApSt" creationdate="20210809T172043Z">
        <seg>and the request's payload is a JSON-formatted object; for example:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>and then call &lt;g1&gt;POST /api/authenticate&lt;/g1&gt; with the same &lt;g2&gt;login&lt;/g2&gt; and &lt;g3&gt;password&lt;/g3&gt;, an example response can be:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174829Z" creationid="cApSt" creationdate="20210818T174829Z">
        <seg>and then call &lt;g1&gt;POST /api/authenticate&lt;/g1&gt; with the same &lt;g2&gt;login&lt;/g2&gt; and &lt;g3&gt;password&lt;/g3&gt;, an example response can be:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>and:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174922Z" creationid="cApSt" creationdate="20210818T174922Z">
        <seg>and:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert sol.commit() == False   # there is no open transaction</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>assert sol.commit() == False   # there is no open transaction</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert sol.commit() == True    # transaction 3 is committed</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>assert sol.commit() == True    # transaction 3 is committed</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert sol.commit() == false;   // there is no open transaction
}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174918Z" creationid="cApSt" creationdate="20210818T174918Z">
        <seg>assert sol.commit() == false;   // there is no open transaction
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert sol.commit() == true;    // transaction 3 is committed</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174918Z" creationid="cApSt" creationdate="20210818T174918Z">
        <seg>assert sol.commit() == true;    // transaction 3 is committed</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert sol.rollback() == True  # rollback transaction 1</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>assert sol.rollback() == True  # rollback transaction 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert sol.rollback() == True  # rollback transaction 2</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>assert sol.rollback() == True  # rollback transaction 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert sol.rollback() == true;  // rollback transaction 1</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174918Z" creationid="cApSt" creationdate="20210818T174918Z">
        <seg>assert sol.rollback() == true;  // rollback transaction 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert sol.rollback() == true;  // rollback transaction 2</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174918Z" creationid="cApSt" creationdate="20210818T174918Z">
        <seg>assert sol.rollback() == true;  // rollback transaction 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert sol.top() == 10</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>assert sol.top() == 10</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert sol.top() == 10;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174918Z" creationid="cApSt" creationdate="20210818T174918Z">
        <seg>assert sol.top() == 10;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert sol.top() == 4          # stack: [4]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>assert sol.top() == 4          # stack: [4]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert sol.top() == 4;          // stack: [4]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174918Z" creationid="cApSt" creationdate="20210818T174918Z">
        <seg>assert sol.top() == 4;          // stack: [4]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert sol.top() == 7          # stack: [4,7]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>assert sol.top() == 7          # stack: [4,7]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert sol.top() == 7;          // stack: [4,7]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174918Z" creationid="cApSt" creationdate="20210818T174918Z">
        <seg>assert sol.top() == 7;          // stack: [4,7]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert sol2.top() == 0         # top of an empty stack is 0</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>assert sol2.top() == 0         # top of an empty stack is 0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert sol2.top() == 0;         // top of an empty stack is 0</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174918Z" creationid="cApSt" creationdate="20210818T174918Z">
        <seg>assert sol2.top() == 0;         // top of an empty stack is 0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert(sol.commit() == false);  // there is no open transaction
}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>assert(sol.commit() == false);  // there is no open transaction
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert(sol.commit() == true);   // transaction 3 is committed</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>assert(sol.commit() == true);   // transaction 3 is committed</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert(sol.rollback() == true); // rollback transaction 1</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>assert(sol.rollback() == true); // rollback transaction 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert(sol.rollback() == true); // rollback transaction 2</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>assert(sol.rollback() == true); // rollback transaction 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert(sol.top() == 10);</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>assert(sol.top() == 10);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert(sol.top() == 4);         // stack: [4]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>assert(sol.top() == 4);         // stack: [4]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert(sol.top() == 7);         // stack: [4,7]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>assert(sol.top() == 7);         // stack: [4,7]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assert(sol2.top() == 0);        // top of an empty stack is 0</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>assert(sol2.top() == 0);        // top of an empty stack is 0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>assuming that following messages exist in the system:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174839Z" creationid="cApSt" creationdate="20210818T174839Z">
        <seg>assuming that following messages exist in the system:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>async with session.get('http://localhost:8080') as resp:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174906Z" creationid="cApSt" creationdate="20210818T174906Z">
        <seg>async with session.get('http://localhost:8080') as resp:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>but when the user's token is passed on as the &lt;g1&gt;authentication-header&lt;/g1&gt; header, all three article objects are returned.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174829Z" creationid="cApSt" creationdate="20210818T174829Z">
        <seg>but when the user's token is passed on as the &lt;g1&gt;authentication-header&lt;/g1&gt; header, all three article objects are returned.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>call the &lt;g1&gt;GET /api/articles&lt;/g1&gt; request again with a new token;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174830Z" creationid="cApSt" creationdate="20210818T174830Z">
        <seg>call the &lt;g1&gt;GET /api/articles&lt;/g1&gt; request again with a new token;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>configure the &lt;g1&gt;UsersController&lt;/g1&gt; and &lt;g2&gt;UsersService&lt;/g2&gt; classes.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>configure the &lt;g1&gt;UsersController&lt;/g1&gt; and &lt;g2&gt;UsersService&lt;/g2&gt; classes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>const int foobar = 0;
int main() {
return foobar;
}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174911Z" creationid="cApSt" creationdate="20210818T174911Z">
        <seg>const int foobar = 0;
int main() {
return foobar;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>convert text values into integers, so that the first text value alphabetically is converted to 0 and so on.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T150356Z" creationid="cApSt" creationdate="20210818T174846Z">
        <seg>convert text values into integers, so that the first text value in alphabetical order is converted to 0 and so on.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>create a new user;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174830Z" creationid="cApSt" creationdate="20210818T174830Z">
        <seg>create a new user;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>create dummy variables based on levels (all presented values) and drop the first one in alphabetical order.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174845Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>create dummy variables based on levels (all presented values) and drop the first one in alphabetical order.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>data class Element(</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>data class Element(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>def example1():
sol = Solution()
sol.push(5)
sol.push(2)                    # stack: &lt;x1/&gt;5,2&lt;x2/&gt;
assert sol.top() == 2
sol.pop()                      # stack: &lt;x3/&gt;5&lt;x4/&gt;
assert sol.top() == 5</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174915Z" creationid="cApSt" creationdate="20210818T174915Z">
        <seg>def example1():
sol = Solution()
sol.push(5)
sol.push(2)                    # stack: &lt;x1/&gt;5,2&lt;x2/&gt;
assert sol.top() == 2
sol.pop()                      # stack: &lt;x3/&gt;5&lt;x4/&gt;
assert sol.top() == 5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>digraph {
graph &lt;x1/&gt;ordering="out"&lt;x2/&gt;
node &lt;x3/&gt;shape=circle, fixedsize=true&lt;x4/&gt;;
5 -&gt; 3;
5 -&gt; 10;
3 -&gt; 20;
3 -&gt; 21 &lt;x5/&gt;tailport=se&lt;x6/&gt;;
10 -&gt; 1 &lt;x7/&gt;tailport=sw&lt;x8/&gt;;
}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174920Z" creationid="cApSt" creationdate="20210818T174920Z">
        <seg>digraph {
graph &lt;x1/&gt;ordering="out"&lt;x2/&gt;
node &lt;x3/&gt;shape=circle, fixedsize=true&lt;x4/&gt;;
5 -&gt; 3;
5 -&gt; 10;
3 -&gt; 20;
3 -&gt; 21 &lt;x5/&gt;tailport=se&lt;x6/&gt;;
10 -&gt; 1 &lt;x7/&gt;tailport=sw&lt;x8/&gt;;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>digraph {
graph &lt;x1/&gt;ordering="out"&lt;x2/&gt;
node &lt;x3/&gt;shape=circle, fixedsize=true&lt;x4/&gt;;
8 -&gt; 2;
8 -&gt; 6;
2 -&gt; 9;
9 &lt;x5/&gt;label="8"&lt;x6/&gt;
2 -&gt; 7;
}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174922Z" creationid="cApSt" creationdate="20210818T174922Z">
        <seg>digraph {
graph &lt;x1/&gt;ordering="out"&lt;x2/&gt;
node &lt;x3/&gt;shape=circle, fixedsize=true&lt;x4/&gt;;
8 -&gt; 2;
8 -&gt; 6;
2 -&gt; 9;
9 &lt;x5/&gt;label="8"&lt;x6/&gt;
2 -&gt; 7;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>dtype={</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>dtype={</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>e.g. given messages A, B, C, D, first request with &lt;g7&gt;count&lt;/g7&gt; 2 returned messages D, C and a &lt;g8&gt;next&lt;/g8&gt; cursor.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T203633Z" creationid="cApSt" creationdate="20210818T174836Z">
        <seg>For example, given messages A, B, C, D, you should first request with &lt;g7&gt;count&lt;/g7&gt; 2 returned messages D, C and a &lt;g8&gt;next&lt;/g8&gt; cursor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>endpoint URL: &lt;g1&gt;/users/{username}/items/total&lt;/g1&gt;, where &lt;g2&gt;username&lt;/g2&gt; is a path variable;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174913Z" creationid="cApSt" creationdate="20210818T174913Z">
        <seg>endpoint URL: &lt;g1&gt;/users/{username}/items/total&lt;/g1&gt;, where &lt;g2&gt;username&lt;/g2&gt; is a path variable;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>first element (the key named &lt;g1&gt;are_independent&lt;/g1&gt;) is a boolean which states if X and Y are independent (&lt;g2&gt;True&lt;/g2&gt;) or not (&lt;g3&gt;False&lt;/g3&gt;).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174833Z" creationid="cApSt" creationdate="20210818T174833Z">
        <seg>first element (the key named &lt;g1&gt;are_independent&lt;/g1&gt;) is a boolean which states if X and Y are independent (&lt;g2&gt;True&lt;/g2&gt;) or not (&lt;g3&gt;False&lt;/g3&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>foo.c
foobar.cx
main.cc
dir.c/   (empty directory)</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174910Z" creationid="cApSt" creationdate="20210818T174910Z">
        <seg>foo.c
foobar.cx
main.cc
dir.c/   (empty directory)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>fun hideLoading()</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>fun hideLoading()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>fun loadElements(): Single&lt;List&lt;Element&gt;&gt;
}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>fun loadElements(): Single&lt;List&lt;Element&gt;&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>fun setElements(elements: List&lt;Element&gt;)</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>fun setElements(elements: List&lt;Element&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>fun showError()</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>fun showError()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>fun showLoading()</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>fun showLoading()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>given &lt;g1&gt;full name&lt;/g1&gt; or a &lt;g2&gt;year&lt;/g2&gt; does not exist in the given data</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174903Z" creationid="cApSt" creationdate="20210818T174903Z">
        <seg>given &lt;g1&gt;full name&lt;/g1&gt; or a &lt;g2&gt;year&lt;/g2&gt; does not exist in the given data</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>given this response to get next part of the data user should request &lt;g1&gt;GET /messages?count=2&amp;next=xyz&lt;/g1&gt; which would result in response:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T205021Z" creationid="cApSt" creationdate="20210818T174842Z">
        <seg>given this response, to get the next part of the data, the user should request &lt;g1&gt;GET /messages?count=2&amp;next=xyz&lt;/g1&gt; which would result in response:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>header.h
main.c
bashrc
external_lib
|--foobar.c
|--foobar.h</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174907Z" creationid="cApSt" creationdate="20210818T174907Z">
        <seg>header.h
main.c
bashrc
external_lib
|--foobar.c
|--foobar.h</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>http://httpbin.org/get</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174906Z" creationid="cApSt" creationdate="20210818T174906Z">
        <seg>http://httpbin.org/get</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>import aiohttp

async with aiohttp.ClientSession() as session:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174906Z" creationid="cApSt" creationdate="20210818T174906Z">
        <seg>import aiohttp

async with aiohttp.ClientSession() as session:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>inappropriate &lt;g1&gt;method&lt;/g1&gt; argument</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174903Z" creationid="cApSt" creationdate="20210818T174903Z">
        <seg>inappropriate &lt;g1&gt;method&lt;/g1&gt; argument</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>include "external_lib/foobar.h"</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174908Z" creationid="cApSt" creationdate="20210818T174908Z">
        <seg>include "external_lib/foobar.h"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>include "foobar.h"</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174908Z" creationid="cApSt" creationdate="20210818T174908Z">
        <seg>include "foobar.h"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>include "header.h"</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174908Z" creationid="cApSt" creationdate="20210818T174908Z">
        <seg>include "header.h"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>int Foobar(int &lt;g2&gt;foobar&lt;/g2&gt;);</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174911Z" creationid="cApSt" creationdate="20210818T174911Z">
        <seg>int Foobar(int &lt;g2&gt;foobar&lt;/g2&gt;);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>int foobar() { return 0; }
const char* foobarwoof() { return "WOOF!"; }</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174908Z" creationid="cApSt" creationdate="20210818T174908Z">
        <seg>int foobar() { return 0; }
const char* foobarwoof() { return "WOOF!"; }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>int foobar();</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174907Z" creationid="cApSt" creationdate="20210818T174907Z">
        <seg>int foobar();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>int foobar(int n) {
if (n == 0) return 1;
if (n == 1) return 1;
return foobar(n-1) + foobar(n-2);
}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174910Z" creationid="cApSt" creationdate="20210818T174910Z">
        <seg>int foobar(int n) {
if (n == 0) return 1;
if (n == 1) return 1;
return foobar(n-1) + foobar(n-2);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>int main() {
return foobar() + foobar();
}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174908Z" creationid="cApSt" creationdate="20210818T174908Z">
        <seg>int main() {
return foobar() + foobar();
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>integers which are multiples of {{ v.filter_option }}.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172041Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>integers which are multiples of {{ v.filter_option }}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>interface ElementsProvider {</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>interface ElementsProvider {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>interface ListContract {</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>interface ListContract {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>interface View {</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>interface View {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>least_flexible_policy.find(ticket, [agent1, agent2])</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>least_flexible_policy.find(ticket, [agent1, agent2])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>least_loaded_policy.find(ticket, [agent1, agent2])

least_flexible_policy = LeastFlexibleAgent()
# returns the Agent with name "A" because of their lower flexibility.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>least_loaded_policy.find(ticket, [agent1, agent2])

least_flexible_policy = LeastFlexibleAgent()
# returns the Agent with name "A" because of their lower flexibility.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>log the user in;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174830Z" creationid="cApSt" creationdate="20210818T174830Z">
        <seg>log the user in;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>otherwise, the &lt;g1&gt;i&lt;/g1&gt;-th item should equal &lt;g2&gt;-1&lt;/g2&gt;.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172043Z" creationid="cApSt" creationdate="20210809T172043Z">
        <seg>otherwise, the &lt;g1&gt;i&lt;/g1&gt;-th item should equal &lt;g2&gt;-1&lt;/g2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>package com.codility.external;

import java.util.List;

public interface OrdersService {</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>package com.codility.external;

import java.util.List;

public interface OrdersService {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>pandas 0.25.3</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174903Z" creationid="cApSt" creationdate="20210818T174903Z">
        <seg>pandas 0.25.3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>pd.read_csv(</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>pd.read_csv(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>print(await resp.text())  # prints response body as text</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174906Z" creationid="cApSt" creationdate="20210818T174906Z">
        <seg>print(await resp.text())  # prints response body as text</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>print(resp.status)  # prints HTTP status as integer</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174906Z" creationid="cApSt" creationdate="20210818T174906Z">
        <seg>print(resp.status)  # prints HTTP status as integer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>public CustomStringEnumerator(IEnumerable&lt;string&gt; collection, EnumeratorConfig config)</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174844Z" creationid="cApSt" creationdate="20210818T174844Z">
        <seg>public CustomStringEnumerator(IEnumerable&lt;string&gt; collection, EnumeratorConfig config)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>public IEnumerator&lt;string&gt; GetEnumerator()</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174844Z" creationid="cApSt" creationdate="20210818T174844Z">
        <seg>public IEnumerator&lt;string&gt; GetEnumerator()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>public bool StartWithCapitalLetter { get; set; }</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174845Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>public bool StartWithCapitalLetter { get; set; }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>public bool StartWithDigit { get; set; }</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T142822Z" creationid="cApSt" creationdate="20210823T142822Z">
        <seg>public bool StartWithDigit { get; set; }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>public bool StartWithDigit { get; set; }
}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174845Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>public bool StartWithDigit { get; set; }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>public class CustomStringEnumerator :  IEnumerable&lt;string&gt;
{</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174843Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>public class CustomStringEnumerator :  IEnumerable&lt;string&gt;
{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>public class EnumeratorConfig
{</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174844Z" creationid="cApSt" creationdate="20210818T174844Z">
        <seg>public class EnumeratorConfig
{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>public int MaxLength { get; set; } = -1;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174845Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>public int MaxLength { get; set; } = -1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>public int MinLength { get; set; } = -1;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174844Z" creationid="cApSt" creationdate="20210818T174844Z">
        <seg>public int MinLength { get; set; } = -1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>public static void example1() {
Solution sol = new Solution();
sol.push(5);
sol.push(2);                    // stack: &lt;x1/&gt;5,2&lt;x2/&gt;
Contract.Assert(sol.top() == 2);
sol.pop();                      // stack: &lt;x3/&gt;5&lt;x4/&gt;
Contract.Assert(sol.top() == 5);</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174919Z" creationid="cApSt" creationdate="20210818T174919Z">
        <seg>public static void example1() {
Solution sol = new Solution();
sol.push(5);
sol.push(2);                    // stack: &lt;x1/&gt;5,2&lt;x2/&gt;
Contract.Assert(sol.top() == 2);
sol.pop();                      // stack: &lt;x3/&gt;5&lt;x4/&gt;
Contract.Assert(sol.top() == 5);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>public static void example1() {
Solution sol = new Solution();
sol.push(5);
sol.push(2);                    // stack: &lt;x1/&gt;5,2&lt;x2/&gt;
assert sol.top() == 2;
sol.pop();                      // stack: &lt;x3/&gt;5&lt;x4/&gt;
assert sol.top() == 5;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>public static void example1() {
Solution sol = new Solution();
sol.push(5);
sol.push(2);                    // stack: &lt;x1/&gt;5,2&lt;x2/&gt;
assert sol.top() == 2;
sol.pop();                      // stack: &lt;x3/&gt;5&lt;x4/&gt;
assert sol.top() == 5;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>replace NaN values with the median;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174845Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>replace NaN values with the median;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>replace NaN values with the most frequent value;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174845Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>replace NaN values with the most frequent value;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>response JSON format: &lt;g1&gt;{"totalItemsBought":number}&lt;/g1&gt;, where &lt;g2&gt;number&lt;/g2&gt; is the number of items bought by the given user;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174913Z" creationid="cApSt" creationdate="20210818T174913Z">
        <seg>response JSON format: &lt;g1&gt;{"totalItemsBought":number}&lt;/g1&gt;, where &lt;g2&gt;number&lt;/g2&gt; is the number of items bought by the given user;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>result = await health_check(['localhost:8000'])
print(result)  # {'localhost:8000': True}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174905Z" creationid="cApSt" creationdate="20210818T174905Z">
        <seg>result = await health_check(['localhost:8000'])
print(result)  # {'localhost:8000': True}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>result = await health_check(['localhost:8080', 'intrepid:9000', 'enterprise:8008'])
print(result)  # {'localhost:8080': True, 'intrepid:9000': False, 'enterprise:8008': True}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174906Z" creationid="cApSt" creationdate="20210818T174906Z">
        <seg>result = await health_check(['localhost:8080', 'intrepid:9000', 'enterprise:8008'])
print(result)  # {'localhost:8080': True, 'intrepid:9000': False, 'enterprise:8008': True}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>return a + b
# add(3)  # this would not work - the order of positional arguments is preserved,</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174856Z" creationid="cApSt" creationdate="20210818T174856Z">
        <seg>return a + b
# add(3)  # this would not work - the order of positional arguments is preserved,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>return a + b
add(3)  # 5, we are still able to use `a` as a positional argument</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174857Z" creationid="cApSt" creationdate="20210818T174857Z">
        <seg>return a + b
add(3)  # 5, we are still able to use `a` as a positional argument</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>return a + b
add(3, 4)  # 7, despite function `add` being decorated, we have explicitly specified `a`
add(a=3, b=4)  # 7, this is equivalent</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174857Z" creationid="cApSt" creationdate="20210818T174857Z">
        <seg>return a + b
add(3, 4)  # 7, despite function `add` being decorated, we have explicitly specified `a`
add(a=3, b=4)  # 7, this is equivalent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>return a + b
add(4)  # returns 5, `nonexistent` is ignored</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174857Z" creationid="cApSt" creationdate="20210818T174857Z">
        <seg>return a + b
add(4)  # returns 5, `nonexistent` is ignored</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>return a + b
add(b=3)  # 5, because expression @provide(a=2) injected `a`</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174856Z" creationid="cApSt" creationdate="20210818T174856Z">
        <seg>return a + b
add(b=3)  # 5, because expression @provide(a=2) injected `a`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>return a maximum of 10 notes per query,</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>return a maximum of 10 notes per query,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>return an error (status 400) if the &lt;g1&gt;Authentication&lt;/g1&gt; header is malformed or missing.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>return an error (status 400) if the &lt;g1&gt;Authentication&lt;/g1&gt; header is malformed or missing.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>return an error (status 403) if &lt;g1&gt;token&lt;/g1&gt; is invalid,</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>return an error (status 403) if &lt;g1&gt;token&lt;/g1&gt; is invalid,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>return the user notes sorted by the &lt;g1&gt;create_date&lt;/g1&gt; attribute (in descending order),</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174851Z" creationid="cApSt" creationdate="20210818T174851Z">
        <seg>return the user notes sorted by the &lt;g1&gt;create_date&lt;/g1&gt; attribute (in descending order),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>runTask(id: string): Promise&lt;undefined&gt;
hasTask(id: string): boolean</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172043Z" creationid="cApSt" creationdate="20210809T172043Z">
        <seg>runTask(id: string): Promise&lt;undefined&gt;
hasTask(id: string): boolean</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>second element (the key named &lt;g1&gt;cov&lt;/g1&gt;) is a covariance between X and Y (i is an indicator of i-th of n possible pairs &lt;x2/&gt;&lt;x3/&gt;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174834Z" creationid="cApSt" creationdate="20210818T174834Z">
        <seg>second element (the key named &lt;g1&gt;cov&lt;/g1&gt;) is a covariance between X and Y (i is an indicator of i-th of n possible pairs &lt;x2/&gt;&lt;x3/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sending request to &lt;g1&gt;GET /messages?count=2&lt;/g1&gt; would result in response:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T204929Z" creationid="cApSt" creationdate="20210818T174840Z">
        <seg>sending a request to &lt;g1&gt;GET /messages?count=2&lt;/g1&gt; would result in response:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol = Solution()</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>sol = Solution()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.begin()                    # start transaction 1</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>sol.begin()                    # start transaction 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.begin()                    # start transaction 2</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>sol.begin()                    # start transaction 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.begin()                    # start transaction 3</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>sol.begin()                    # start transaction 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.begin();                     // start transaction 1</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174919Z" creationid="cApSt" creationdate="20210818T174919Z">
        <seg>sol.begin();                     // start transaction 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.begin();                     // start transaction 2</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174919Z" creationid="cApSt" creationdate="20210818T174919Z">
        <seg>sol.begin();                     // start transaction 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.begin();                     // start transaction 3</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174919Z" creationid="cApSt" creationdate="20210818T174919Z">
        <seg>sol.begin();                     // start transaction 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.begin();                    // start transaction 1</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>sol.begin();                    // start transaction 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.begin();                    // start transaction 2</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>sol.begin();                    // start transaction 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.begin();                    // start transaction 3</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>sol.begin();                    // start transaction 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.push(10)                   # stack: [4,7,10]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>sol.push(10)                   # stack: [4,7,10]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.push(10);                    // stack: [4,7,10]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174919Z" creationid="cApSt" creationdate="20210818T174919Z">
        <seg>sol.push(10);                    // stack: [4,7,10]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.push(10);                   // stack: [4,7,10]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>sol.push(10);                   // stack: [4,7,10]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.push(2)                    # stack: [4,7,2]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>sol.push(2)                    # stack: [4,7,2]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.push(2);                     // stack: [4,7,2]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174919Z" creationid="cApSt" creationdate="20210818T174919Z">
        <seg>sol.push(2);                     // stack: [4,7,2]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.push(2);                    // stack: [4,7,2]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>sol.push(2);                    // stack: [4,7,2]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.push(4)</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>sol.push(4)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.push(4);</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>sol.push(4);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.push(7)                    # stack: [4,7]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>sol.push(7)                    # stack: [4,7]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.push(7);                     // stack: [4,7]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174919Z" creationid="cApSt" creationdate="20210818T174919Z">
        <seg>sol.push(7);                     // stack: [4,7]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol.push(7);                    // stack: [4,7]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>sol.push(7);                    // stack: [4,7]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol2 = Solution()</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>sol2 = Solution()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol2.pop()                     # pop should do nothing

def example2():</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>sol2.pop()                     # pop should do nothing

def example2():</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol2.pop();                     // pop should do nothing
}

public static void example2() {</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174918Z" creationid="cApSt" creationdate="20210818T174918Z">
        <seg>sol2.pop();                     // pop should do nothing
}

public static void example2() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>sol2.pop();                     // pop should do nothing
}

void example2() {</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>sol2.pop();                     // pop should do nothing
}

void example2() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>species, category, collected_from_year, annual_percentage_change, trend</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174900Z" creationid="cApSt" creationdate="20210818T174900Z">
        <seg>species, category, collected_from_year, annual_percentage_change, trend</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>standardize values by subtracting the mean and dividing by the standard deviation.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174845Z" creationid="cApSt" creationdate="20210818T174845Z">
        <seg>standardize values by subtracting the mean and dividing by the standard deviation.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>status code 200 in case of a successful response.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174913Z" creationid="cApSt" creationdate="20210818T174913Z">
        <seg>status code 200 in case of a successful response.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>the &lt;g1&gt;content-type&lt;/g1&gt; header will be set to &lt;g2&gt;application/json&lt;/g2&gt; in every such POST request;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174828Z" creationid="cApSt" creationdate="20210818T174828Z">
        <seg>the &lt;g1&gt;content-type&lt;/g1&gt; header will be set to &lt;g2&gt;application/json&lt;/g2&gt; in every such POST request;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>the &lt;g1&gt;preprocess_data&lt;/g1&gt; function should return the following tuple:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T145510Z" creationid="cApSt" creationdate="20210818T174846Z">
        <seg>the &lt;g1&gt;preprocess_data&lt;/g1&gt; function should return the following ordered list:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>the first completed task was the task with the first task ID from the &lt;g1&gt;taskIds&lt;/g1&gt; array;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>the first completed task was the task with the first task ID from the &lt;g1&gt;taskIds&lt;/g1&gt; array;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>the function should return 2, because the only visible nodes are those with value 8.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174922Z" creationid="cApSt" creationdate="20210818T174922Z">
        <seg>the function should return 2, because the only visible nodes are those with value 8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>the last completed task was the task with the last task ID from the array.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>the last completed task was the task with the last task ID from the array.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>the second completed task was the task with the third task ID from the array;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>the second completed task was the task with the third task ID from the array;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>the sender's articles;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174827Z" creationid="cApSt" creationdate="20210818T174827Z">
        <seg>the sender's articles;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>the third completed task was the task with the second task ID from the array;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172044Z" creationid="cApSt" creationdate="20210809T172044Z">
        <seg>the third completed task was the task with the second task ID from the array;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>then calling &lt;g1&gt;GET /api/articles&lt;/g1&gt; (with no token passed on as a request's header) gives only one article object:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174829Z" creationid="cApSt" creationdate="20210818T174829Z">
        <seg>then calling &lt;g1&gt;GET /api/articles&lt;/g1&gt; (with no token passed on as a request's header) gives only one article object:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>there doesn't exist any user similar to the user</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174903Z" creationid="cApSt" creationdate="20210818T174903Z">
        <seg>there doesn't exist any user similar to the user</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>third element (the key named &lt;g1&gt;corr&lt;/g1&gt;) is a correlation coefficient between X and Y</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174834Z" creationid="cApSt" creationdate="20210818T174834Z">
        <seg>third element (the key named &lt;g1&gt;corr&lt;/g1&gt;) is a correlation coefficient between X and Y</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>throw new NotImplementedException();</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174844Z" creationid="cApSt" creationdate="20210818T174844Z">
        <seg>throw new NotImplementedException();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>ticket = Ticket(id="1", restrictions=["English"])
agent1 = Agent(name="A", skills=["English"], load=2)
agent2 = Agent(name="B", skills=["English", "Japanese"], load=0)

least_loaded_policy = LeastLoadedAgent()
# returns the Agent with name "B" because of their currently lower load.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174914Z" creationid="cApSt" creationdate="20210818T174914Z">
        <seg>ticket = Ticket(id="1", restrictions=["English"])
agent1 = Agent(name="A", skills=["English"], load=2)
agent2 = Agent(name="B", skills=["English", "Japanese"], load=0)

least_loaded_policy = LeastLoadedAgent()
# returns the Agent with name "B" because of their currently lower load.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>users have a unique &lt;g1&gt;id&lt;/g1&gt; and unique &lt;g2&gt;login&lt;/g2&gt; – the server will never receive two &lt;g3&gt;POST /api/user&lt;/g3&gt; requests with the same &lt;g4&gt;id&lt;/g4&gt; or &lt;g5&gt;login&lt;/g5&gt;; articles, likewise, also have a unique &lt;g6&gt;id&lt;/g6&gt;;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210819T143514Z" creationid="cApSt" creationdate="20210818T174828Z">
        <seg>users have a unique &lt;g1&gt;id&lt;/g1&gt; and unique &lt;g2&gt;login&lt;/g2&gt; – the server will never receive two &lt;g3&gt;POST /api/user&lt;/g3&gt; requests with the same &lt;g4&gt;id&lt;/g4&gt; or &lt;g5&gt;login&lt;/g5&gt;; articles also have a unique &lt;g6&gt;id&lt;/g6&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>val id: String,</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>val id: String,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>val title: String
)</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>val title: String
)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>var collection = new string[] { ... };
var config = new EnumeratorConfig
{</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174843Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>var collection = new string[] { ... };
var config = new EnumeratorConfig
{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>var enumerator = new CustomStringEnumerator(collection, config);
foreach (var s in enumerator)
{</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174843Z" creationid="cApSt" creationdate="20210818T174843Z">
        <seg>var enumerator = new CustomStringEnumerator(collection, config);
foreach (var s in enumerator)
{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>void example1() {
Solution sol;
sol.push(5);
sol.push(2);                    // stack: &lt;x1/&gt;5,2&lt;x2/&gt;
assert(sol.top() == 2);
sol.pop();                      // stack: &lt;x3/&gt;5&lt;x4/&gt;
assert(sol.top() == 5);</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>void example1() {
Solution sol;
sol.push(5);
sol.push(2);                    // stack: &lt;x1/&gt;5,2&lt;x2/&gt;
assert(sol.top() == 2);
sol.pop();                      // stack: &lt;x3/&gt;5&lt;x4/&gt;
assert(sol.top() == 5);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>we should expect the following result:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174830Z" creationid="cApSt" creationdate="20210818T174830Z">
        <seg>we should expect the following result:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>when &lt;g1&gt;elementsProvider&lt;/g1&gt; emits an empty list, display an error in the view;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>when &lt;g1&gt;elementsProvider&lt;/g1&gt; emits an empty list, display an error in the view;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>when &lt;g1&gt;elementsProvider&lt;/g1&gt; emits an error, display the error in the view;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>when &lt;g1&gt;elementsProvider&lt;/g1&gt; emits an error, display the error in the view;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>when &lt;g1&gt;elementsProvider&lt;/g1&gt; emits data, set elements in the view;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>when &lt;g1&gt;elementsProvider&lt;/g1&gt; emits data, set elements in the view;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>when the loading operation ends, hide loading progress.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>when the loading operation ends, hide loading progress.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>when the loading operation starts, show loading progress;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>when the loading operation starts, show loading progress;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>where</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174834Z" creationid="cApSt" creationdate="20210818T174834Z">
        <seg>where</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>where &lt;g1&gt;Element&lt;/g1&gt; is a data class defined as follows:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174849Z" creationid="cApSt" creationdate="20210818T174849Z">
        <seg>where &lt;g1&gt;Element&lt;/g1&gt; is a data class defined as follows:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>while for &lt;g1&gt;payments&lt;/g1&gt; it's:</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174850Z" creationid="cApSt" creationdate="20210818T174850Z">
        <seg>while for &lt;g1&gt;payments&lt;/g1&gt; it's:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>write a method in the given &lt;g1&gt;UsersService&lt;/g1&gt; class that counts the number of items bought by the given user;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>write a method in the given &lt;g1&gt;UsersService&lt;/g1&gt; class that counts the number of items bought by the given user;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>write an endpoint in the given &lt;g1&gt;UsersController&lt;/g1&gt; class;</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174912Z" creationid="cApSt" creationdate="20210818T174912Z">
        <seg>write an endpoint in the given &lt;g1&gt;UsersController&lt;/g1&gt; class;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>y is a list of values of the target variable after preprocessing.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174846Z" creationid="cApSt" creationdate="20210818T174846Z">
        <seg>y is a list of values of the target variable after preprocessing.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172043Z" creationid="cApSt" creationdate="20210809T172043Z">
        <seg>{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{ "articles_id": "art1", "title": "tit1", "content": "c1", "visibility": "public" }</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174829Z" creationid="cApSt" creationdate="20210818T174829Z">
        <seg>{ "articles_id": "art1", "title": "tit1", "content": "c1", "visibility": "public" }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{ "articles_id": "art1", "title": "tit1", "content": "c1", "visibility": "public", "user_id": "42" },</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174830Z" creationid="cApSt" creationdate="20210818T174830Z">
        <seg>{ "articles_id": "art1", "title": "tit1", "content": "c1", "visibility": "public", "user_id": "42" },</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{ "articles_id": "art2", "title": "tit2", "content": "c2", "visibility": "private" }</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174829Z" creationid="cApSt" creationdate="20210818T174829Z">
        <seg>{ "articles_id": "art2", "title": "tit2", "content": "c2", "visibility": "private" }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{ "articles_id": "art3", "title": "tit3", "content": "c3", "visibility": "logged_in" }</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174829Z" creationid="cApSt" creationdate="20210818T174829Z">
        <seg>{ "articles_id": "art3", "title": "tit3", "content": "c3", "visibility": "logged_in" }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{ "articles_id": "art3", "title": "tit3", "content": "c3", "visibility": "logged_in", "user_id": "42" }
]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174830Z" creationid="cApSt" creationdate="20210818T174830Z">
        <seg>{ "articles_id": "art3", "title": "tit3", "content": "c3", "visibility": "logged_in", "user_id": "42" }
]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{ "token": "1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed" }</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174829Z" creationid="cApSt" creationdate="20210818T174829Z">
        <seg>{ "token": "1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed" }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{ "user_id": "42", "login": "frank", "password": "p4ssw0rd" }</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174828Z" creationid="cApSt" creationdate="20210818T174828Z">
        <seg>{ "user_id": "42", "login": "frank", "password": "p4ssw0rd" }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{% elif prog_lang == 'cpp' %}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174916Z" creationid="cApSt" creationdate="20210818T174916Z">
        <seg>{% elif prog_lang == 'cpp' %}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{% elif prog_lang == 'cs' %}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174918Z" creationid="cApSt" creationdate="20210818T174918Z">
        <seg>{% elif prog_lang == 'cs' %}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{% elif prog_lang == 'java' %}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174917Z" creationid="cApSt" creationdate="20210818T174917Z">
        <seg>{% elif prog_lang == 'java' %}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{% elif v.filter == "multiples" %}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172041Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>{% elif v.filter == "multiples" %}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{% elif v.filter == "parity" %}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172041Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>{% elif v.filter == "parity" %}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{% elif v.filter == "sign" %}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172041Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>{% elif v.filter == "sign" %}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{% endfilter %}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172041Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>{% endfilter %}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{% endif %}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>{% endif %}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{% filter dot %}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174920Z" creationid="cApSt" creationdate="20210818T174920Z">
        <seg>{% filter dot %}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{% filter mono %}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174907Z" creationid="cApSt" creationdate="20210818T174907Z">
        <seg>{% filter mono %}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{% filter video %}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172041Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>{% filter video %}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{% if prog_lang == 'py' %}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174915Z" creationid="cApSt" creationdate="20210818T174915Z">
        <seg>{% if prog_lang == 'py' %}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{% set aggr_str = {"sum": "sum of", "min": "minimum among", "max": "maximum among"} %}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172041Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>{% set aggr_str = {"sum": "sum of", "min": "minimum among", "max": "maximum among"} %}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{% set filt_digits_str = {1: "one((-))digit", 2: "two((-))digit", 3: "three((-))digit"} %}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172041Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>{% set filt_digits_str = {1: "one((-))digit", 2: "two((-))digit", 3: "three((-))digit"} %}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{% set filt_sign_str = {"ge": "non((-))negative", "gt": "positive", "le": "non((-))positive", "lt": "negative"} %}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172041Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>{% set filt_sign_str = {"ge": "non((-))negative", "gt": "positive", "le": "non((-))positive", "lt": "negative"} %}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{%- if v.filter == "digits" %}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172041Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>{%- if v.filter == "digits" %}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{{ assumptions }}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>{{ assumptions }}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{{ assumptions_complexity }}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174920Z" creationid="cApSt" creationdate="20210818T174920Z">
        <seg>{{ assumptions_complexity }}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{{ coding_note }}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>{{ coding_note }}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{{ filt_digits_str&lt;x3/&gt;v.filter_option&lt;x4/&gt; }} integers.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172041Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>{{ filt_digits_str&lt;x3/&gt;v.filter_option&lt;x4/&gt; }} integers.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{{ filt_sign_str&lt;x5/&gt;v.filter_option&lt;x6/&gt; }} integers.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>{{ filt_sign_str&lt;x5/&gt;v.filter_option&lt;x6/&gt; }} integers.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{{ lua_array_note }}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172042Z" creationid="cApSt" creationdate="20210809T172042Z">
        <seg>{{ lua_array_note }}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{{ type_declarations }}
An empty tree is represented by an empty pointer (denoted by {{ null_const }}).</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174920Z" creationid="cApSt" creationdate="20210818T174920Z">
        <seg>{{ type_declarations }}
An empty tree is represented by an empty pointer (denoted by {{ null_const }}).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>{{ v.filter_option }} integers.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210809T172041Z" creationid="cApSt" creationdate="20210809T172041Z">
        <seg>{{ v.filter_option }} integers.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>| X | Y | pr   |
|---|---|------|
| 0 | 1 | 0.30 |
| 0 | 2 | 0.25 |
| 1 | 1 | 0.15 |
| 1 | 2 | 0.30 |</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174833Z" creationid="cApSt" creationdate="20210818T174833Z">
        <seg>| X | Y | pr   |
|---|---|------|
| 0 | 1 | 0.30 |
| 0 | 2 | 0.25 |
| 1 | 1 | 0.15 |
| 1 | 2 | 0.30 |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>|married_1 |degree_2 |degree_3 |occupation_nurse |occupation_policeman |salary  |
|----------|---------|---------|-----------------|---------------------|--------|
|0         |0        |0        |1                |0                    |-1.00896|
|1         |1        |0        |1                |0                    |-0.19528|
|1         |0        |1        |0                |1                    |1.59481 |
|1         |1        |0        |0                |0                    |0.61840 |
|0         |0        |0        |1                |0                    |-1.00896|</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174846Z" creationid="cApSt" creationdate="20210818T174846Z">
        <seg>|married_1 |degree_2 |degree_3 |occupation_nurse |occupation_policeman |salary  |
|----------|---------|---------|-----------------|---------------------|--------|
|0         |0        |0        |1                |0                    |-1.00896|
|1         |1        |0        |1                |0                    |-0.19528|
|1         |0        |1        |0                |1                    |1.59481 |
|1         |1        |0        |0                |0                    |0.61840 |
|0         |0        |0        |1                |0                    |-1.00896|</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>|movie id |movie title             |release year |
|---------|------------------------|-------------|
|1        |Toy Story (1995)        |1995         |
|2        |GoldenEye (1995)        |1995         |
|3        |Four Rooms (1995)       |1995         |
|4        |Get Shorty (1995)       |1995         |
|5        |Dead Man Walking (1995) |1995         |
|6        |Postino, Il (1994)      |1995         |</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174904Z" creationid="cApSt" creationdate="20210818T174904Z">
        <seg>|movie id |movie title             |release year |
|---------|------------------------|-------------|
|1        |Toy Story (1995)        |1995         |
|2        |GoldenEye (1995)        |1995         |
|3        |Four Rooms (1995)       |1995         |
|4        |Get Shorty (1995)       |1995         |
|5        |Dead Man Walking (1995) |1995         |
|6        |Postino, Il (1994)      |1995         |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>|target  |married |degree |salary |occupation|
|--------|--------|-------|-------|----------|
|male    |0       |1      |1.5    |nurse     |
|female  |1       |2      |NaN    |nurse     |
|female  |1       |3      |2.3    |policeman |
|male    |1       |2      |2.0    |fireman   |
|male    |0       |3      |1.5    |NaN       |</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174846Z" creationid="cApSt" creationdate="20210818T174846Z">
        <seg>|target  |married |degree |salary |occupation|
|--------|--------|-------|-------|----------|
|male    |0       |1      |1.5    |nurse     |
|female  |1       |2      |NaN    |nurse     |
|female  |1       |3      |2.3    |policeman |
|male    |1       |2      |2.0    |fireman   |
|male    |0       |3      |1.5    |NaN       |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>|user id |full name      |age |gender |zip code |
|--------|---------------|----|-------|---------|
|1       |Ryan James     |24  |M      |85711    |
|2       |Alice Graves   |53  |F      |94043    |
|3       |Ambrose Smith  |23  |M      |32067    |
|4       |Bobby Alvarez  |24  |M      |90412    |
|5       |Latosha Jiles  |53  |F      |15343    |
|6       |Louis Mcmillen |23  |M      |74920    |</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174903Z" creationid="cApSt" creationdate="20210818T174903Z">
        <seg>|user id |full name      |age |gender |zip code |
|--------|---------------|----|-------|---------|
|1       |Ryan James     |24  |M      |85711    |
|2       |Alice Graves   |53  |F      |94043    |
|3       |Ambrose Smith  |23  |M      |32067    |
|4       |Bobby Alvarez  |24  |M      |90412    |
|5       |Latosha Jiles  |53  |F      |15343    |
|6       |Louis Mcmillen |23  |M      |74920    |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>|user id |item id |rating |timestamp |
|--------|--------|-------|----------|
|2       |1       |1      |881250949 |
|3       |1       |2      |891717742 |
|4       |1       |2      |878887116 |
|5       |1       |3      |894528467 |
|3       |2       |5      |886397596 |
|4       |2       |4      |884182806 |
|1       |3       |2      |881171488 |
|2       |3       |2      |891628467 |
|1       |4       |5      |886324817 |
|2       |4       |3      |883603013 |
|1       |5       |5      |879372434 |
|3       |5       |5      |879781125 |
|3       |4       |4      |876042340 |
|4       |4       |5      |891035994 |
|4       |5       |5      |898603000 |
|2       |5       |5      |904528467 |
|4       |6       |4      |894528467 |</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174904Z" creationid="cApSt" creationdate="20210818T174904Z">
        <seg>|user id |item id |rating |timestamp |
|--------|--------|-------|----------|
|2       |1       |1      |881250949 |
|3       |1       |2      |891717742 |
|4       |1       |2      |878887116 |
|5       |1       |3      |894528467 |
|3       |2       |5      |886397596 |
|4       |2       |4      |884182806 |
|1       |3       |2      |881171488 |
|2       |3       |2      |891628467 |
|1       |4       |5      |886324817 |
|2       |4       |3      |883603013 |
|1       |5       |5      |879372434 |
|3       |5       |5      |879781125 |
|3       |4       |4      |876042340 |
|4       |4       |5      |891035994 |
|4       |5       |5      |898603000 |
|2       |5       |5      |904528467 |
|4       |6       |4      |894528467 |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174838Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>}
]</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174840Z" creationid="cApSt" creationdate="20210818T174840Z">
        <seg>}
]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>}
```</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210820T201013Z" creationid="cApSt" creationdate="20210820T201013Z">
        <seg>}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>}
}</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174838Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>}
}
```</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174838Z" creationid="cApSt" creationdate="20210818T174838Z">
        <seg>}
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>},</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174837Z" creationid="cApSt" creationdate="20210818T174837Z">
        <seg>},</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>},
)</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210818T174847Z" creationid="cApSt" creationdate="20210818T174847Z">
        <seg>},
)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en">
        <seg>};

// The custom enumerator will return strings that are longer than or equal to 3 characters
// and shorter than or equal to 10 characters, and start with a capital letter.</seg>
      </tuv>
      <tuv lang="en-xx" changeid="cApSt" changedate="20210823T142417Z" creationid="cApSt" creationdate="20210823T142417Z">
        <seg>};

// The custom enumerator will return strings that are longer than or equal to 3 characters
// and shorter than or equal to 10 characters, and start with a capital letter.</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
